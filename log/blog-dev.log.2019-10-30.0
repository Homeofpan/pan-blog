2019-10-30 16:14:47.193  INFO 18500 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 18500 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 16:14:47.201 DEBUG 18500 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 16:14:47.202  INFO 18500 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 16:14:47.441  INFO 18500 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 16:14:47.442  INFO 18500 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 16:14:50.360  INFO 18500 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 16:14:50.506  INFO 18500 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 53ms. Found 0 repository interfaces.
2019-10-30 16:14:51.448  INFO 18500 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d05f8abc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 16:14:52.990  INFO 18500 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 16:14:53.165  INFO 18500 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 16:14:53.166  INFO 18500 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 16:14:53.386  INFO 18500 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 16:14:53.388  INFO 18500 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5945 ms
2019-10-30 16:14:53.760  INFO 18500 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 16:14:54.306  INFO 18500 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 16:14:56.936  INFO 18500 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 16:14:57.201  INFO 18500 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 16:14:59.806  INFO 18500 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 16:14:59.896  INFO 18500 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 16:14:59.919  INFO 18500 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 15.792 seconds (JVM running for 18.808)
2019-10-30 16:15:46.823  INFO 18500 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 16:15:46.824  INFO 18500 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 16:15:46.838  INFO 18500 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 16:15:46.935  INFO 18500 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 16:16:02.196 ERROR 18500 --- [http-nio-8080-exec-2] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/ Exception : {}

java.lang.RuntimeException: 传输出现错误,请稍后重试
	at com.pan.service.impl.SolrServiceImpl.getQueryResult(SolrServiceImpl.java:58)
	at com.pan.controller.IndexController.index(IndexController.java:54)
	at com.pan.controller.IndexController$$FastClassBySpringCGLIB$$bf1dad9a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.IndexController$$EnhancerBySpringCGLIB$$21af6c3d.index(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 16:16:02.200  WARN 18500 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 传输出现错误,请稍后重试]
2019-10-30 16:16:35.338  INFO 19680 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 19680 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 16:16:35.343 DEBUG 19680 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 16:16:35.344  INFO 19680 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 16:16:35.429  INFO 19680 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 16:16:35.430  INFO 19680 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 16:16:36.320  INFO 19680 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 16:16:36.357  INFO 19680 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
2019-10-30 16:16:36.714  INFO 19680 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f4681c8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 16:16:37.171  INFO 19680 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 16:16:37.243  INFO 19680 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 16:16:37.244  INFO 19680 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 16:16:37.348  INFO 19680 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 16:16:37.349  INFO 19680 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1918 ms
2019-10-30 16:16:37.504  INFO 19680 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 16:16:37.743  INFO 19680 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 16:16:38.928  INFO 19680 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 16:16:39.025  INFO 19680 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 16:16:39.756  INFO 19680 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 16:16:39.816  INFO 19680 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 16:16:39.819  INFO 19680 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.214 seconds (JVM running for 6.421)
2019-10-30 16:16:57.761  INFO 19680 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 16:16:57.762  INFO 19680 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 16:16:57.778  INFO 19680 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2019-10-30 16:16:57.825  INFO 19680 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 16:17:10.430  INFO 19680 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 16:17:10.813 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 16:17:10.902 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 16:17:10.934 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:17:10.942 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 16:17:10.942 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 16:17:10.943 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:17:11.004 DEBUG 19680 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 16:17:11.005 DEBUG 19680 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 16:17:11.006 DEBUG 19680 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 16:17:11.008 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 16:17:11.008 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 16:17:11.010 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 16:17:11.014 DEBUG 19680 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 16:17:11.014 DEBUG 19680 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 16:17:11.015 DEBUG 19680 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 16:17:11.016 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 16:17:11.017 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 16:17:11.019 DEBUG 19680 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 16:17:11.027 DEBUG 19680 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 16:17:11.027 DEBUG 19680 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 16:17:11.033 DEBUG 19680 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 16:17:11.033 DEBUG 19680 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 16:17:11.033 DEBUG 19680 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 16:17:11.036 DEBUG 19680 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 16:17:11.037  INFO 19680 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 16:17:11.037  INFO 19680 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 607
2019-10-30 16:17:12.883 ERROR 19680 --- [http-nio-8080-exec-1] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/ Exception : {}

java.lang.RuntimeException: 传输出现错误,请稍后重试
	at com.pan.service.impl.SolrServiceImpl.getQueryResult(SolrServiceImpl.java:58)
	at com.pan.controller.IndexController.index(IndexController.java:54)
	at com.pan.controller.IndexController$$FastClassBySpringCGLIB$$bf1dad9a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.IndexController$$EnhancerBySpringCGLIB$$52852a28.index(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 16:17:12.887  WARN 19680 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 传输出现错误,请稍后重试]
2019-10-30 16:17:29.468  INFO 19680 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[1, {}]}
2019-10-30 16:17:29.470 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 16:17:29.470 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 16:17:29.473 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:17:29.515 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 16:17:29.515 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 16:17:29.516 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:17:29.518 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 16:17:29.518 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 16:17:29.520 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:17:29.522 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 16:17:29.522 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 16:17:29.523 DEBUG 19680 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 16:17:29.524  INFO 19680 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 16:17:29.524  INFO 19680 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 56
2019-10-30 16:18:51.295  INFO 4428 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 4428 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 16:18:51.299 DEBUG 4428 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 16:18:51.299  INFO 4428 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 16:18:51.399  INFO 4428 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 16:18:51.400  INFO 4428 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 16:18:53.014  INFO 4428 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 16:18:53.063  INFO 4428 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 37ms. Found 0 repository interfaces.
2019-10-30 16:18:53.393  INFO 4428 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b1aa4fab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 16:18:53.831  INFO 4428 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 16:18:53.927  INFO 4428 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 16:18:53.927  INFO 4428 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 16:18:54.034  INFO 4428 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 16:18:54.034  INFO 4428 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2634 ms
2019-10-30 16:18:54.174  INFO 4428 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 16:18:54.410  INFO 4428 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 16:18:55.566  INFO 4428 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 16:18:55.659  INFO 4428 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 16:18:56.380  INFO 4428 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 16:18:56.439  INFO 4428 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 16:18:56.442  INFO 4428 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 6.694 seconds (JVM running for 7.87)
2019-10-30 16:19:00.278  INFO 4428 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 16:19:00.278  INFO 4428 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 16:19:00.292  INFO 4428 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 16:19:00.325  INFO 4428 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 16:19:00.519 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 16:19:00.547 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 16:19:00.572 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:19:00.580 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 16:19:00.580 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 16:19:00.582 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:19:00.618 DEBUG 4428 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 16:19:00.619 DEBUG 4428 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 16:19:00.620 DEBUG 4428 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 16:19:00.622 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 16:19:00.623 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 16:19:00.636 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 16:19:00.641 DEBUG 4428 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 16:19:00.642 DEBUG 4428 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 16:19:00.643 DEBUG 4428 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 16:19:00.644 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 16:19:00.644 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 16:19:00.646 DEBUG 4428 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 16:19:00.653 DEBUG 4428 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 16:19:00.654 DEBUG 4428 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 16:19:00.655 DEBUG 4428 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 16:19:00.655 DEBUG 4428 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 16:19:00.655 DEBUG 4428 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 16:19:00.657 DEBUG 4428 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 16:19:00.658  INFO 4428 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 16:19:00.658  INFO 4428 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 335
2019-10-30 16:19:23.580  INFO 4428 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.searche', args=[null, mvc, {}]}
2019-10-30 16:19:23.595 ERROR 4428 --- [http-nio-8080-exec-1] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/search Exception : {}

java.lang.RuntimeException: 传输出现错误,请稍后重试
	at com.pan.service.impl.SolrServiceImpl.getQueryResult(SolrServiceImpl.java:58)
	at com.pan.controller.IndexController.searche(IndexController.java:83)
	at com.pan.controller.IndexController$$FastClassBySpringCGLIB$$bf1dad9a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.IndexController$$EnhancerBySpringCGLIB$$92fcb221.searche(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 16:19:23.596  WARN 4428 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 传输出现错误,请稍后重试]
2019-10-30 16:30:08.217  INFO 41232 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 41232 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 16:30:08.219 DEBUG 41232 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 16:30:08.219  INFO 41232 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 16:30:08.263  INFO 41232 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 16:30:08.263  INFO 41232 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 16:30:09.022  INFO 41232 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 16:30:09.066  INFO 41232 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
2019-10-30 16:30:09.540  INFO 41232 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fca6cfdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 16:30:10.109  INFO 41232 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 16:30:10.209  INFO 41232 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 16:30:10.209  INFO 41232 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 16:30:10.369  INFO 41232 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 16:30:10.369  INFO 41232 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2106 ms
2019-10-30 16:30:10.546  INFO 41232 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 16:30:10.865  INFO 41232 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 16:30:12.290  INFO 41232 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 16:30:12.393  INFO 41232 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 16:30:13.141  INFO 41232 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 16:30:13.211  INFO 41232 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 16:30:13.214  INFO 41232 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 6.062 seconds (JVM running for 7.514)
2019-10-30 16:30:47.049  INFO 41232 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 16:30:47.049  INFO 41232 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 16:30:47.063  INFO 41232 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 16:30:47.099  INFO 41232 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 16:30:47.566 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 16:30:47.591 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 16:30:47.615 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:30:47.621 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 16:30:47.621 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 16:30:47.623 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:30:47.661 DEBUG 41232 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 16:30:47.661 DEBUG 41232 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 16:30:47.662 DEBUG 41232 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 16:30:47.664 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 16:30:47.665 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 16:30:47.666 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 16:30:47.671 DEBUG 41232 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 16:30:47.671 DEBUG 41232 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 16:30:47.673 DEBUG 41232 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 16:30:47.674 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 16:30:47.675 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 16:30:47.677 DEBUG 41232 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 16:30:47.684 DEBUG 41232 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 16:30:47.684 DEBUG 41232 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 16:30:47.685 DEBUG 41232 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 16:30:47.686 DEBUG 41232 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 16:30:47.686 DEBUG 41232 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 16:30:47.687 DEBUG 41232 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 16:30:47.688  INFO 41232 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 16:30:47.688  INFO 41232 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 591
2019-10-30 16:30:50.864  INFO 41232 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.searche', args=[null, mvc, {}]}
2019-10-30 16:30:50.873  INFO 41232 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : search
2019-10-30 16:30:50.874  INFO 41232 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 10
2019-10-30 16:30:50.926 ERROR 41232 --- [http-nio-8080-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-7] Exception processing template "search": An error happened during template parsing (template: "class path resource [templates/search.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/search.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "page.totalElements" (template: "search" - line 25, col 79)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 55 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "page.totalElements" (template: "search" - line 25, col 79)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 57 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'totalElements' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted

2019-10-30 16:30:50.943 ERROR 41232 --- [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/search.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'totalElements' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 16:31:18.261  INFO 41232 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.searche', args=[null, 这是一个正经, {}]}
2019-10-30 16:31:18.272  INFO 41232 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : search
2019-10-30 16:31:18.272  INFO 41232 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 11
2019-10-30 16:31:18.279 ERROR 41232 --- [http-nio-8080-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-7] Exception processing template "search": An error happened during template parsing (template: "class path resource [templates/search.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/search.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "page.totalElements" (template: "search" - line 25, col 79)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 55 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "page.totalElements" (template: "search" - line 25, col 79)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 57 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'totalElements' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted

2019-10-30 16:31:18.280 ERROR 41232 --- [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/search.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'totalElements' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 16:35:42.860  INFO 24612 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 24612 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 16:35:42.862 DEBUG 24612 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 16:35:42.862  INFO 24612 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 16:35:42.903  INFO 24612 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 16:35:42.904  INFO 24612 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 16:35:43.595  INFO 24612 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 16:35:43.648  INFO 24612 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 41ms. Found 0 repository interfaces.
2019-10-30 16:35:44.017  INFO 24612 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aeca1e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 16:35:44.480  INFO 24612 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 16:35:44.575  INFO 24612 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 16:35:44.576  INFO 24612 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 16:35:44.690  INFO 24612 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 16:35:44.691  INFO 24612 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1787 ms
2019-10-30 16:35:44.849  INFO 24612 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 16:35:45.094  INFO 24612 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 16:35:46.403  INFO 24612 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 16:35:46.507  INFO 24612 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 16:35:47.235  INFO 24612 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 16:35:47.302  INFO 24612 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 16:35:47.305  INFO 24612 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.28 seconds (JVM running for 6.471)
2019-10-30 16:35:56.600  INFO 24612 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 16:35:56.600  INFO 24612 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 16:35:56.616  INFO 24612 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2019-10-30 16:35:56.650  INFO 24612 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 16:35:56.843 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 16:35:56.868 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 16:35:56.892 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:35:56.899 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 16:35:56.899 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 16:35:56.900 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:35:56.933 DEBUG 24612 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 16:35:56.933 DEBUG 24612 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 16:35:56.934 DEBUG 24612 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 16:35:56.936 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 16:35:56.937 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 16:35:56.939 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 16:35:56.942 DEBUG 24612 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 16:35:56.943 DEBUG 24612 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 16:35:56.944 DEBUG 24612 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 16:35:56.945 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 16:35:56.945 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 16:35:56.947 DEBUG 24612 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 16:35:56.954 DEBUG 24612 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 16:35:56.955 DEBUG 24612 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 16:35:56.956 DEBUG 24612 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 16:35:56.956 DEBUG 24612 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 16:35:56.956 DEBUG 24612 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 16:35:56.957 DEBUG 24612 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 16:35:56.959  INFO 24612 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 16:35:56.959  INFO 24612 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 310
2019-10-30 16:35:59.849  INFO 24612 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.searche', args=[null, mvc, {}]}
2019-10-30 16:35:59.857  INFO 24612 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : search
2019-10-30 16:35:59.857  INFO 24612 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 16:36:17.893  INFO 24612 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.searche', args=[null, 正经, {}]}
2019-10-30 16:36:17.901  INFO 24612 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : search
2019-10-30 16:36:17.901  INFO 24612 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 16:36:36.355  INFO 24612 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.searche', args=[null, 这是一个正经, {}]}
2019-10-30 16:36:36.362  INFO 24612 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : search
2019-10-30 16:36:36.363  INFO 24612 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 16:55:09.973  INFO 31688 --- [main] com.pan.solr.SolrTest                    : Starting SolrTest on LAPTOP-9SU42IID with PID 31688 (started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 16:55:09.974 DEBUG 31688 --- [main] com.pan.solr.SolrTest                    : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 16:55:09.974  INFO 31688 --- [main] com.pan.solr.SolrTest                    : The following profiles are active: dev
2019-10-30 16:55:10.997  INFO 31688 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 16:55:11.068  INFO 31688 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 32ms. Found 0 repository interfaces.
2019-10-30 16:55:11.638  INFO 31688 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e24ae853] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 16:55:12.025  INFO 31688 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 16:55:12.493  INFO 31688 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 16:55:15.251  INFO 31688 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 16:55:15.398  INFO 31688 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 16:55:16.178  INFO 31688 --- [main] com.pan.solr.SolrTest                    : Started SolrTest in 6.942 seconds (JVM running for 8.563)
2019-10-30 16:55:18.253 DEBUG 31688 --- [main] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 16:55:18.291 DEBUG 31688 --- [main] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 16:55:18.323 DEBUG 31688 --- [main] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:55:19.794  INFO 31688 --- [Thread-3] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2019-10-30 16:55:19.795  INFO 31688 --- [Thread-3] o.s.j.e.a.AnnotationMBeanExporter        : Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2019-10-30 16:55:19.807  INFO 31688 --- [Thread-3] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2019-10-30 16:56:30.966  INFO 17028 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 17028 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 16:56:30.968 DEBUG 17028 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 16:56:30.968  INFO 17028 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 16:56:31.147  INFO 17028 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 16:56:31.148  INFO 17028 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 16:56:31.913  INFO 17028 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 16:56:31.951  INFO 17028 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29ms. Found 0 repository interfaces.
2019-10-30 16:56:32.317  INFO 17028 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a90308ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 16:56:32.785  INFO 17028 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 16:56:32.863  INFO 17028 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 16:56:32.864  INFO 17028 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 16:56:32.977  INFO 17028 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 16:56:32.977  INFO 17028 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1829 ms
2019-10-30 16:56:33.130  INFO 17028 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 16:56:33.379  INFO 17028 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 16:56:34.582  INFO 17028 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 16:56:34.679  INFO 17028 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 16:56:35.410  INFO 17028 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 16:56:35.471  INFO 17028 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 16:56:35.476  INFO 17028 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.199 seconds (JVM running for 6.226)
2019-10-30 16:56:38.631  INFO 17028 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 16:56:38.631  INFO 17028 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 16:56:38.644  INFO 17028 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2019-10-30 16:56:38.679  INFO 17028 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 16:56:38.925 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 16:56:38.960 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 16:56:38.988 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:56:38.994 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 16:56:38.994 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 16:56:38.996 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:56:38.997 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 16:56:38.998 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 16:56:38.999 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:56:39.000 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 16:56:39.001 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 16:56:39.002 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:56:39.039 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 16:56:39.040 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 16:56:39.041 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 16:56:39.043 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 16:56:39.044 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 16:56:39.046 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 16:56:39.050 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 16:56:39.050 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 16:56:39.051 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 16:56:39.053 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 16:56:39.053 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 16:56:39.054 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 16:56:39.062 DEBUG 17028 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 16:56:39.062 DEBUG 17028 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 16:56:39.063 DEBUG 17028 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 16:56:39.064 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 16:56:39.064 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 16:56:39.066 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 16:56:39.067  INFO 17028 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 16:56:39.067  INFO 17028 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 390
2019-10-30 16:56:47.812  INFO 17028 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.searche', args=[null, 正经, {}]}
2019-10-30 16:56:47.825  INFO 17028 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : search
2019-10-30 16:56:47.825  INFO 17028 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 16:56:58.408  INFO 17028 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.searche', args=[null, 你妈, {}]}
2019-10-30 16:56:58.425 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 16:56:58.425 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 16:56:58.427 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:56:58.430 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 16:56:58.431 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 16:56:58.432 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:56:58.433  INFO 17028 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : search
2019-10-30 16:56:58.433  INFO 17028 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 25
2019-10-30 16:57:30.390  INFO 17028 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/5', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[5, {}]}
2019-10-30 16:57:30.393 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 16:57:30.394 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 16:57:30.398 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:57:30.440 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 16:57:30.440 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 16:57:30.443 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:57:30.445 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 16:57:30.445 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 16:57:30.447 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 16:57:30.450 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 16:57:30.451 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 2(Integer)
2019-10-30 16:57:30.455 DEBUG 17028 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 16:57:30.456  INFO 17028 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 16:57:30.457  INFO 17028 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 67
2019-10-30 17:00:50.687  INFO 17028 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/5', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[5, {}]}
2019-10-30 17:00:50.694 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 17:00:50.694 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:00:50.695 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:00:50.700 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:00:50.700 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:00:50.702 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:00:50.704 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:00:50.704 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:00:50.706 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:00:50.709 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 17:00:50.709 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 2(Integer)
2019-10-30 17:00:50.711 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 17:00:50.712  INFO 17028 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 17:00:50.712  INFO 17028 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 25
2019-10-30 17:01:43.213  INFO 17028 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeShowController.typesPage', args=[null, -1, {}]}
2019-10-30 17:01:43.217 DEBUG 17028 --- [http-nio-8080-exec-4] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 17:01:43.217 DEBUG 17028 --- [http-nio-8080-exec-4] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==> Parameters: 
2019-10-30 17:01:43.220 DEBUG 17028 --- [http-nio-8080-exec-4] c.p.d.B.selectBlogByTimeDesc_COUNT       : <==      Total: 1
2019-10-30 17:01:43.221 DEBUG 17028 --- [http-nio-8080-exec-4] c.p.dao.BlogMapper.selectBlogByTimeDesc  : ==>  Preparing: select * from blog Order By update_time Desc limit ?,? 
2019-10-30 17:01:43.224 DEBUG 17028 --- [http-nio-8080-exec-4] c.p.dao.BlogMapper.selectBlogByTimeDesc  : ==> Parameters: 0(Integer), 7(Integer)
2019-10-30 17:01:43.230 DEBUG 17028 --- [http-nio-8080-exec-4] c.p.dao.BlogMapper.selectBlogByTimeDesc  : <==      Total: 7
2019-10-30 17:01:43.232 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:43.232 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:43.234 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.236 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:43.237 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:43.238 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.241 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:43.241 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:43.242 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.244 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:43.244 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:01:43.245 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.247 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:43.247 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:43.248 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.250 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:43.250 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:43.251 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.252 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:43.253 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:43.254 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.256 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:43.256 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:43.258 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.260 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:43.260 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:43.262 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.263 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:43.264 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:43.265 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.267 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:43.268 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:43.269 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.271 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:43.271 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:43.272 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.274 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:43.274 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:43.275 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.277 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:43.277 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:43.278 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:43.280 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc 
2019-10-30 17:01:43.280 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 
2019-10-30 17:01:43.282 DEBUG 17028 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 9
2019-10-30 17:01:43.282  INFO 17028 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : types
2019-10-30 17:01:43.282  INFO 17028 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 69
2019-10-30 17:01:47.472  INFO 17028 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/types/13', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeShowController.typesPage', args=[null, 13, {}]}
2019-10-30 17:01:47.474 DEBUG 17028 --- [http-nio-8080-exec-5] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==>  Preparing: SELECT count(0) FROM blog WHERE typeid = ? 
2019-10-30 17:01:47.474 DEBUG 17028 --- [http-nio-8080-exec-5] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==> Parameters: 13(Integer)
2019-10-30 17:01:47.475 DEBUG 17028 --- [http-nio-8080-exec-5] c.p.d.B.selectBlogByTimeDesc_COUNT       : <==      Total: 1
2019-10-30 17:01:47.476 DEBUG 17028 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc 
2019-10-30 17:01:47.477 DEBUG 17028 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 
2019-10-30 17:01:47.478 DEBUG 17028 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 9
2019-10-30 17:01:47.479  INFO 17028 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : types
2019-10-30 17:01:47.479  INFO 17028 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 7
2019-10-30 17:01:50.254  INFO 17028 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/tags/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagShowController.tagsPage', args=[null, -1, {}]}
2019-10-30 17:01:50.257 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 17:01:50.257 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==> Parameters: 
2019-10-30 17:01:50.264 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.d.B.selectBlogByTimeDesc_COUNT       : <==      Total: 1
2019-10-30 17:01:50.267 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.dao.BlogMapper.selectBlogByTimeDesc  : ==>  Preparing: select * from blog Order By update_time Desc limit ?,? 
2019-10-30 17:01:50.267 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.dao.BlogMapper.selectBlogByTimeDesc  : ==> Parameters: 0(Integer), 7(Integer)
2019-10-30 17:01:50.272 DEBUG 17028 --- [http-nio-8080-exec-1] c.p.dao.BlogMapper.selectBlogByTimeDesc  : <==      Total: 7
2019-10-30 17:01:50.274 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:50.274 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:50.275 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.276 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:50.276 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:50.277 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.278 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:50.278 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:50.279 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.282 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:50.282 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:01:50.283 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.285 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:50.285 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:50.286 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.287 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:50.287 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:50.288 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.289 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:50.289 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:50.291 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.292 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:50.292 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:50.293 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.294 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:50.294 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:50.295 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.297 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:50.297 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:50.299 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.300 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:50.300 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:50.301 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.302 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:50.302 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:50.303 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.304 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:01:50.304 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:01:50.305 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.306 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:01:50.306 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:01:50.307 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:01:50.308 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc 
2019-10-30 17:01:50.308 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 
2019-10-30 17:01:50.309 DEBUG 17028 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:01:50.309  INFO 17028 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : tags
2019-10-30 17:01:50.309  INFO 17028 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 55
2019-10-30 17:01:52.043  INFO 17028 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/archives', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.ArchivesController.archives', args=[{}]}
2019-10-30 17:01:52.046 DEBUG 17028 --- [http-nio-8080-exec-6] com.pan.dao.BlogMapper.selectAllYears    : ==>  Preparing: select DATE_FORMAT(update_time,'%Y') as year from blog Group by YEAR order by year desc; 
2019-10-30 17:01:52.046 DEBUG 17028 --- [http-nio-8080-exec-6] com.pan.dao.BlogMapper.selectAllYears    : ==> Parameters: 
2019-10-30 17:01:52.064 DEBUG 17028 --- [http-nio-8080-exec-6] com.pan.dao.BlogMapper.selectAllYears    : <==      Total: 2
2019-10-30 17:01:52.065 DEBUG 17028 --- [http-nio-8080-exec-6] c.p.d.BlogMapper.selectBolyGroupByYear   : ==>  Preparing: SELECT * FROM blog WHERE DATE_FORMAT(update_time, '%Y') = ? ORDER BY update_time DESC; 
2019-10-30 17:01:52.066 DEBUG 17028 --- [http-nio-8080-exec-6] c.p.d.BlogMapper.selectBolyGroupByYear   : ==> Parameters: 2019(String)
2019-10-30 17:01:52.068 DEBUG 17028 --- [http-nio-8080-exec-6] c.p.d.BlogMapper.selectBolyGroupByYear   : <==      Total: 11
2019-10-30 17:01:52.069 DEBUG 17028 --- [http-nio-8080-exec-6] c.p.d.BlogMapper.selectBolyGroupByYear   : ==>  Preparing: SELECT * FROM blog WHERE DATE_FORMAT(update_time, '%Y') = ? ORDER BY update_time DESC; 
2019-10-30 17:01:52.069 DEBUG 17028 --- [http-nio-8080-exec-6] c.p.d.BlogMapper.selectBolyGroupByYear   : ==> Parameters: 2018(String)
2019-10-30 17:01:52.071 DEBUG 17028 --- [http-nio-8080-exec-6] c.p.d.BlogMapper.selectBolyGroupByYear   : <==      Total: 1
2019-10-30 17:01:52.079 DEBUG 17028 --- [http-nio-8080-exec-6] com.pan.dao.BlogMapper.countByExample    : ==>  Preparing: select count(*) from blog 
2019-10-30 17:01:52.080 DEBUG 17028 --- [http-nio-8080-exec-6] com.pan.dao.BlogMapper.countByExample    : ==> Parameters: 
2019-10-30 17:01:52.081 DEBUG 17028 --- [http-nio-8080-exec-6] com.pan.dao.BlogMapper.countByExample    : <==      Total: 1
2019-10-30 17:01:52.081  INFO 17028 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : archives
2019-10-30 17:01:52.081  INFO 17028 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 38
2019-10-30 17:01:55.885  INFO 17028 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.about', args=[]}
2019-10-30 17:01:55.885  INFO 17028 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : about
2019-10-30 17:01:55.885  INFO 17028 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 0
2019-10-30 17:03:00.204  INFO 17028 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 17:03:00.208  INFO 17028 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 17:03:00.208  INFO 17028 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 17:03:38.199  INFO 17028 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:03:38.217 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:03:38.217 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:03:38.218 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:03:38.220 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:03:38.220 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:03:38.221 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:03:38.223 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:03:38.223 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:03:38.224 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:03:38.226 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:03:38.226 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:03:38.227 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:03:38.229 DEBUG 17028 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:03:38.229 DEBUG 17028 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:03:38.230 DEBUG 17028 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:03:38.231 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:03:38.231 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:03:38.232 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:03:38.232 DEBUG 17028 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:03:38.233 DEBUG 17028 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:03:38.233 DEBUG 17028 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:03:38.234 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:03:38.234 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:03:38.235 DEBUG 17028 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:03:38.237 DEBUG 17028 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:03:38.237 DEBUG 17028 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:03:38.238 DEBUG 17028 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:03:38.238 DEBUG 17028 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:03:38.238 DEBUG 17028 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:03:38.239 DEBUG 17028 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:03:38.240  INFO 17028 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:03:38.240  INFO 17028 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 41
2019-10-30 17:11:32.764  INFO 17028 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 17:11:32.764  INFO 17028 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 17:11:32.764  INFO 17028 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 0
2019-10-30 17:11:35.841  INFO 17028 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 17:11:35.843  INFO 17028 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 17:11:35.843  INFO 17028 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 2
2019-10-30 17:11:46.091  INFO 42356 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 42356 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 17:11:46.094 DEBUG 42356 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 17:11:46.094  INFO 42356 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 17:11:46.172  INFO 42356 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 17:11:46.172  INFO 42356 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 17:11:46.909  INFO 42356 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 17:11:46.946  INFO 42356 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2019-10-30 17:11:47.300  INFO 42356 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7757678e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 17:11:47.750  INFO 42356 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 17:11:47.847  INFO 42356 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 17:11:47.847  INFO 42356 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 17:11:47.956  INFO 42356 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 17:11:47.957  INFO 42356 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1785 ms
2019-10-30 17:11:48.115  INFO 42356 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 17:11:48.366  INFO 42356 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 17:11:49.611  INFO 42356 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 17:11:49.706  INFO 42356 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 17:11:50.450  INFO 42356 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 17:11:50.511  INFO 42356 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 17:11:50.515  INFO 42356 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.224 seconds (JVM running for 6.231)
2019-10-30 17:13:16.679  INFO 42356 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 17:13:16.680  INFO 42356 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 17:13:16.692  INFO 42356 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2019-10-30 17:13:16.718  INFO 42356 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 17:13:16.721  INFO 42356 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 17:13:16.722  INFO 42356 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 7
2019-10-30 17:18:52.052  INFO 39664 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 39664 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 17:18:52.054 DEBUG 39664 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 17:18:52.056  INFO 39664 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 17:18:52.184  INFO 39664 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 17:18:52.184  INFO 39664 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 17:18:53.004  INFO 39664 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 17:18:53.043  INFO 39664 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
2019-10-30 17:18:53.416  INFO 39664 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3d95b251] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 17:18:53.883  INFO 39664 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 17:18:53.959  INFO 39664 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 17:18:53.959  INFO 39664 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 17:18:54.075  INFO 39664 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 17:18:54.076  INFO 39664 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1891 ms
2019-10-30 17:18:54.235  INFO 39664 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 17:18:54.486  INFO 39664 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 17:18:55.733  INFO 39664 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 17:18:55.838  INFO 39664 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 17:18:56.591  INFO 39664 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 17:18:56.654  INFO 39664 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 17:18:56.656  INFO 39664 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.326 seconds (JVM running for 6.369)
2019-10-30 17:19:04.185  INFO 39664 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 17:19:04.186  INFO 39664 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 17:19:04.200  INFO 39664 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 17:19:04.226  INFO 39664 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 17:19:04.228  INFO 39664 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 17:19:04.228  INFO 39664 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 17:19:20.247  INFO 39664 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 17:19:20.247  INFO 39664 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 17:19:20.247  INFO 39664 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 0
2019-10-30 17:23:31.312  INFO 8264 --- [main] com.pan.solr.SolrTest                    : Starting SolrTest on LAPTOP-9SU42IID with PID 8264 (started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 17:23:31.313 DEBUG 8264 --- [main] com.pan.solr.SolrTest                    : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 17:23:31.313  INFO 8264 --- [main] com.pan.solr.SolrTest                    : The following profiles are active: dev
2019-10-30 17:23:32.558  INFO 8264 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 17:23:32.615  INFO 8264 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 40ms. Found 0 repository interfaces.
2019-10-30 17:23:33.185  INFO 8264 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6fd8ccf1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 17:23:33.572  INFO 8264 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 17:23:34.143  INFO 8264 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 17:23:36.976  INFO 8264 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 17:23:37.112  INFO 8264 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 17:23:37.930  INFO 8264 --- [main] com.pan.solr.SolrTest                    : Started SolrTest in 7.994 seconds (JVM running for 9.184)
2019-10-30 17:23:38.194  INFO 8264 --- [Thread-3] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2019-10-30 17:23:38.197  INFO 8264 --- [Thread-3] o.s.j.e.a.AnnotationMBeanExporter        : Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2019-10-30 17:23:38.199  INFO 8264 --- [Thread-3] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2019-10-30 17:24:56.260  INFO 11872 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 11872 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 17:24:56.263 DEBUG 11872 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 17:24:56.263  INFO 11872 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 17:24:56.412  INFO 11872 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 17:24:56.412  INFO 11872 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 17:24:57.214  INFO 11872 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 17:24:57.255  INFO 11872 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
2019-10-30 17:24:57.628  INFO 11872 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$231cbb9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 17:24:58.106  INFO 11872 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 17:24:58.180  INFO 11872 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 17:24:58.180  INFO 11872 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 17:24:58.294  INFO 11872 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 17:24:58.294  INFO 11872 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1882 ms
2019-10-30 17:24:58.449  INFO 11872 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 17:24:58.691  INFO 11872 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 17:24:59.927  INFO 11872 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 17:25:00.027  INFO 11872 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 17:25:00.788  INFO 11872 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 17:25:00.852  INFO 11872 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 17:25:00.855  INFO 11872 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.254 seconds (JVM running for 6.26)
2019-10-30 17:25:04.429  INFO 11872 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 17:25:04.429  INFO 11872 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 17:25:04.444  INFO 11872 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 17:25:04.469  INFO 11872 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 17:25:04.473  INFO 11872 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 17:25:04.473  INFO 11872 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 17:25:09.169  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.userLogin', args=[pan, 123456, ModelAndView [view=[null]; model=null], org.apache.catalina.session.StandardSessionFacade@55b76e37]}
2019-10-30 17:25:09.325 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.UserMapper.selectByExample   : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user WHERE ( username = ? ) 
2019-10-30 17:25:09.349 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.UserMapper.selectByExample   : ==> Parameters: pan(String)
2019-10-30 17:25:09.375 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.UserMapper.selectByExample   : <==      Total: 1
2019-10-30 17:25:09.380  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : ModelAndView [view="redirect:/admin/index"; model=null]
2019-10-30 17:25:09.380  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 211
2019-10-30 17:25:09.415  INFO 11872 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/index;jsessionid=1A05472FB3A1F6726DF59BC4A51CC339', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.AdminController.indexPage', args=[]}
2019-10-30 17:25:09.417  INFO 11872 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/index
2019-10-30 17:25:09.417  INFO 11872 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 2
2019-10-30 17:25:25.542  INFO 11872 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 17:25:25.572 DEBUG 11872 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 17:25:25.572 DEBUG 11872 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 17:25:25.574 DEBUG 11872 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 17:25:25.576 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 17:25:25.578 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:25:25.585 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 10
2019-10-30 17:25:25.591 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:25.591 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:25.593 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:25.595 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:25.595 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:25.596 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:25.599 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:25.599 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:25.600 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:25.602 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:25.602 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:25.603 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:25.605 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:25.605 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:25.606 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:25.609 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:25.610 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:25.611 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:25.613 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:25.613 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:25.614 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:25.616 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:25.616 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:25.617 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:25.619 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:25.619 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:25.620 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:25.621 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:25.622 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:25.622 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:25.624 DEBUG 11872 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:25:25.625 DEBUG 11872 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:25:25.628 DEBUG 11872 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:25:25.629  INFO 11872 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 17:25:25.630  INFO 11872 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 88
2019-10-30 17:25:35.414  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/3/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[3, {}]}
2019-10-30 17:25:35.415 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 17:25:35.416 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 3(Integer)
2019-10-30 17:25:35.418 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:35.421 DEBUG 11872 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 17:25:35.422 DEBUG 11872 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 17:25:35.426 DEBUG 11872 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 17:25:35.428 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 17:25:35.428 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 8(Integer), 2(Integer)
2019-10-30 17:25:35.434 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 17:25:35.441 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 17:25:35.441 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 17:25:35.443 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 17:25:35.444 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 17:25:35.445 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: c(String), 8(Integer), 2(Integer)
2019-10-30 17:25:35.448 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 17:25:35.449 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 17:25:35.449 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 3(Integer)
2019-10-30 17:25:35.450 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 17:25:35.564  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 17:25:35.564  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 150
2019-10-30 17:25:35.572  INFO 11872 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 17:25:35.573 DEBUG 11872 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 17:25:35.573 DEBUG 11872 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 17:25:35.574 DEBUG 11872 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 17:25:35.575 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 17:25:35.576 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:25:35.582 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 10
2019-10-30 17:25:35.584 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:35.584 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:35.585 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:35.588 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:35.588 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:35.589 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:35.591 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:35.591 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:35.592 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:35.594 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:35.594 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:35.595 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:35.597 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:35.597 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:35.598 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:35.600 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:35.600 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:35.601 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:35.602 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:35.603 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:35.604 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:35.606 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:35.606 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:35.607 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:35.609 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:35.609 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:35.610 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:35.612 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:35.612 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:35.613 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:35.615 DEBUG 11872 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:25:35.615 DEBUG 11872 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:25:35.616 DEBUG 11872 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:25:35.617  INFO 11872 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 17:25:35.617  INFO 11872 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 45
2019-10-30 17:25:40.125  INFO 11872 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/file-upload', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.FileUploadController.toFileUploadPage', args=[{}]}
2019-10-30 17:25:40.130  INFO 11872 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/file-upload
2019-10-30 17:25:40.130  INFO 11872 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 17:25:44.523  INFO 11872 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.input', args=[{}]}
2019-10-30 17:25:44.525 DEBUG 11872 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 17:25:44.525 DEBUG 11872 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 17:25:44.526 DEBUG 11872 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 17:25:44.529 DEBUG 11872 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:25:44.529 DEBUG 11872 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:25:44.530 DEBUG 11872 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:25:44.532  INFO 11872 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 17:25:44.532  INFO 11872 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 9
2019-10-30 17:25:48.988  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 17:25:48.989 DEBUG 11872 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 17:25:48.989 DEBUG 11872 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 17:25:48.990 DEBUG 11872 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 17:25:48.991 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 17:25:48.991 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:25:48.994 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 10
2019-10-30 17:25:48.996 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:48.996 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:48.997 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:48.999 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:48.999 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:49.000 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:49.002 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:49.002 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:49.003 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:49.005 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:49.005 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:49.006 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:49.008 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:49.008 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:49.009 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:49.011 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:49.011 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:49.012 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:49.014 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:49.014 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:49.015 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:49.017 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:49.017 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:49.018 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:49.019 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:49.020 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:49.021 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:49.028 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:49.028 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:49.029 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:49.031 DEBUG 11872 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:25:49.031 DEBUG 11872 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:25:49.033 DEBUG 11872 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:25:49.034  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 17:25:49.034  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 46
2019-10-30 17:25:52.924  INFO 11872 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/5/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[5, {}]}
2019-10-30 17:25:52.925 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 17:25:52.926 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:52.927 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:52.929 DEBUG 11872 --- [http-nio-8080-exec-3] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 17:25:52.930 DEBUG 11872 --- [http-nio-8080-exec-3] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 17:25:52.930 DEBUG 11872 --- [http-nio-8080-exec-3] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 17:25:52.930 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 17:25:52.931 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 7(Integer), 2(Integer)
2019-10-30 17:25:52.933 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 17:25:52.938 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 17:25:52.939 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 17:25:52.940 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 17:25:52.940 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 17:25:52.941 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: c(String), 7(Integer), 2(Integer)
2019-10-30 17:25:52.942 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 17:25:52.943 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 17:25:52.943 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:52.944 DEBUG 11872 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 17:25:52.961  INFO 11872 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 17:25:52.961  INFO 11872 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 37
2019-10-30 17:25:52.965  INFO 11872 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 17:25:52.966 DEBUG 11872 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 17:25:52.966 DEBUG 11872 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 17:25:52.966 DEBUG 11872 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 17:25:52.968 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 17:25:52.968 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:25:52.971 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 10
2019-10-30 17:25:52.973 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:52.973 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:52.975 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:52.977 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:52.977 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:52.978 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:52.979 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:52.979 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:52.980 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:52.981 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:52.982 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:52.982 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:52.984 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:52.984 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:52.985 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:52.987 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:52.987 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:52.988 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:52.990 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:52.990 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:52.992 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:52.993 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:52.994 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:52.994 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:52.996 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:52.996 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:52.996 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:52.997 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:52.998 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:52.998 DEBUG 11872 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:53.000 DEBUG 11872 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:25:53.001 DEBUG 11872 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:25:53.002 DEBUG 11872 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:25:53.003  INFO 11872 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 17:25:53.003  INFO 11872 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 38
2019-10-30 17:25:56.433  INFO 11872 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 17:25:56.434 DEBUG 11872 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 17:25:56.435 DEBUG 11872 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 17:25:56.435 DEBUG 11872 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 17:25:56.437 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 17:25:56.437 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:25:56.439 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 10
2019-10-30 17:25:56.442 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:56.442 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:56.443 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:56.444 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:56.444 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:25:56.452 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:56.454 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:56.454 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:56.455 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:56.456 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:56.457 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:56.457 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:56.459 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:56.459 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:56.460 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:56.461 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:56.461 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:56.462 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:56.464 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:56.464 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:56.464 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:56.466 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:56.466 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:56.467 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:56.469 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:56.469 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:56.469 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:56.471 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:25:56.471 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:25:56.472 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:25:56.474 DEBUG 11872 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:25:56.474 DEBUG 11872 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:25:56.475 DEBUG 11872 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:25:56.476  INFO 11872 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 17:25:56.476  INFO 11872 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 43
2019-10-30 17:26:05.684  INFO 11872 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/7/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[7, {}]}
2019-10-30 17:26:05.684 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 17:26:05.685 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 7(Integer)
2019-10-30 17:26:05.686 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:05.687 DEBUG 11872 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 17:26:05.687 DEBUG 11872 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 17:26:05.688 DEBUG 11872 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 17:26:05.688 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 17:26:05.688 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 6(Integer), 2(Integer)
2019-10-30 17:26:05.689 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 17:26:05.694 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 17:26:05.694 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 17:26:05.695 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 17:26:05.695 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 17:26:05.696 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: c(String), 6(Integer), 2(Integer)
2019-10-30 17:26:05.697 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 17:26:05.698 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 17:26:05.698 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 7(Integer)
2019-10-30 17:26:05.699 DEBUG 11872 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 17:26:05.716  INFO 11872 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 17:26:05.716  INFO 11872 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 32
2019-10-30 17:26:05.721  INFO 11872 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 17:26:05.722 DEBUG 11872 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 17:26:05.723 DEBUG 11872 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 17:26:05.723 DEBUG 11872 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 17:26:05.725 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 17:26:05.725 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:26:05.727 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 9
2019-10-30 17:26:05.729 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:05.729 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:26:05.730 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:05.731 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:05.732 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:26:05.732 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:05.734 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:05.735 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:05.735 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:05.737 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:05.737 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:05.738 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:05.739 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:05.739 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:05.741 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:05.744 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:05.744 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:05.747 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:05.749 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:05.749 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:05.750 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:05.751 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:05.751 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:05.752 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:05.753 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:05.753 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:05.754 DEBUG 11872 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:05.756 DEBUG 11872 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:26:05.756 DEBUG 11872 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:26:05.757 DEBUG 11872 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:26:05.758  INFO 11872 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 17:26:05.758  INFO 11872 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 37
2019-10-30 17:26:20.899  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/6/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[6, {}]}
2019-10-30 17:26:20.900 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 17:26:20.901 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 6(Integer)
2019-10-30 17:26:20.902 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:20.904 DEBUG 11872 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 17:26:20.904 DEBUG 11872 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 17:26:20.905 DEBUG 11872 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 17:26:20.906 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 17:26:20.906 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 5(Integer), 2(Integer)
2019-10-30 17:26:20.907 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 17:26:20.910 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 17:26:20.911 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 17:26:20.911 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 17:26:20.912 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 17:26:20.912 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: c(String), 5(Integer), 2(Integer)
2019-10-30 17:26:20.914 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 17:26:20.915 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 17:26:20.915 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 6(Integer)
2019-10-30 17:26:20.916 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 17:26:20.926  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 17:26:20.927  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 28
2019-10-30 17:26:20.933  INFO 11872 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 17:26:20.934 DEBUG 11872 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 17:26:20.934 DEBUG 11872 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 17:26:20.935 DEBUG 11872 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 17:26:20.936 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 17:26:20.936 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:26:20.937 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 8
2019-10-30 17:26:20.939 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:20.939 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:26:20.939 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:20.941 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:20.941 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:26:20.941 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:20.943 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:20.943 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:20.944 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:20.945 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:20.946 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:20.947 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:20.948 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:20.949 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:20.950 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:20.951 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:20.951 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:20.952 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:20.954 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:20.954 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:20.954 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:20.955 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:20.956 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:20.956 DEBUG 11872 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:20.957 DEBUG 11872 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:26:20.958 DEBUG 11872 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:26:20.958 DEBUG 11872 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:26:20.959  INFO 11872 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 17:26:20.959  INFO 11872 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 27
2019-10-30 17:26:26.874  INFO 11872 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/10/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[10, {}]}
2019-10-30 17:26:26.876 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 17:26:26.876 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 10(Integer)
2019-10-30 17:26:26.877 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:26.879 DEBUG 11872 --- [http-nio-8080-exec-2] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 17:26:26.879 DEBUG 11872 --- [http-nio-8080-exec-2] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 17:26:26.880 DEBUG 11872 --- [http-nio-8080-exec-2] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 17:26:26.880 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 17:26:26.880 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 4(Integer), 2(Integer)
2019-10-30 17:26:26.881 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 17:26:26.885 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 17:26:26.885 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 17:26:26.886 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 17:26:26.886 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 17:26:26.886 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: c(String), 4(Integer), 2(Integer)
2019-10-30 17:26:26.887 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 17:26:26.888 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 17:26:26.888 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 10(Integer)
2019-10-30 17:26:26.888 DEBUG 11872 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 17:26:26.901  INFO 11872 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 17:26:26.901  INFO 11872 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 27
2019-10-30 17:26:26.904  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 17:26:26.905 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 17:26:26.905 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 17:26:26.906 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 17:26:26.907 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 17:26:26.908 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:26:26.909 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 17:26:26.911 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:26.911 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:26:26.912 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:26.913 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:26.913 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:26:26.914 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:26.915 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:26.915 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:26.916 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:26.917 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:26.917 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:26.918 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:26.919 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:26.920 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:26.921 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:26.923 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:26.923 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:26.924 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:26.925 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:26.926 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:26.926 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:26.928 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:26:26.928 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:26:26.930 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:26:26.930  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 17:26:26.931  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 27
2019-10-30 17:26:31.140  INFO 11872 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/2/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[2, {}]}
2019-10-30 17:26:31.141 DEBUG 11872 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 17:26:31.142 DEBUG 11872 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 17:26:31.142 DEBUG 11872 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 17:26:31.144 DEBUG 11872 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:26:31.144 DEBUG 11872 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:26:31.146 DEBUG 11872 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:26:31.147 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 17:26:31.147 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:31.148 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:31.149 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:31.149 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:26:31.150 DEBUG 11872 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:31.150  INFO 11872 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 17:26:31.150  INFO 11872 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 10
2019-10-30 17:26:38.394  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/8/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[8, {}]}
2019-10-30 17:26:38.395 DEBUG 11872 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 17:26:38.396 DEBUG 11872 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 17:26:38.397 DEBUG 11872 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 17:26:38.399 DEBUG 11872 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:26:38.399 DEBUG 11872 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:26:38.400 DEBUG 11872 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:26:38.402 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 17:26:38.402 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 8(Integer)
2019-10-30 17:26:38.403 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:38.404 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:26:38.404 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:26:38.405 DEBUG 11872 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:26:38.405  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 17:26:38.405  INFO 11872 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 11
2019-10-30 17:26:46.266  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.input', args=[{}]}
2019-10-30 17:26:46.268 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 17:26:46.268 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 17:26:46.269 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 17:26:46.270 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 17:26:46.270 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 17:26:46.271 DEBUG 11872 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 17:26:46.272  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 17:26:46.272  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 17:31:02.299  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:31:02.319 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:31:02.319 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:31:02.328 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:31:02.329 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:31:02.329 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:31:02.330 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:31:02.332 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:31:02.332 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:31:02.333 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:31:02.335 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:31:02.335 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:31:02.336 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:31:02.340 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:31:02.340 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:31:02.340 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:31:02.341 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:31:02.341 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:31:02.342 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:31:02.343 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:31:02.343 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:31:02.344 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:31:02.345 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:31:02.346 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:31:02.347 DEBUG 11872 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:31:02.353 DEBUG 11872 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:31:02.354 DEBUG 11872 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:31:02.354 DEBUG 11872 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:31:02.354 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:31:02.354 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:31:02.355 DEBUG 11872 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:31:02.356  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:31:02.356  INFO 11872 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 57
2019-10-30 17:31:37.273  INFO 14308 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 14308 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 17:31:37.276 DEBUG 14308 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 17:31:37.277  INFO 14308 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 17:31:37.455  INFO 14308 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 17:31:37.456  INFO 14308 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 17:31:38.179  INFO 14308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 17:31:38.229  INFO 14308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 37ms. Found 0 repository interfaces.
2019-10-30 17:31:38.789  INFO 14308 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$60070673] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 17:31:39.350  INFO 14308 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 17:31:39.442  INFO 14308 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 17:31:39.443  INFO 14308 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 17:31:39.568  INFO 14308 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 17:31:39.569  INFO 14308 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2113 ms
2019-10-30 17:31:39.823  INFO 14308 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 17:31:40.080  INFO 14308 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 17:31:41.783  INFO 14308 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 17:31:41.884  INFO 14308 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 17:31:42.964  INFO 14308 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 17:31:43.023  INFO 14308 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 17:31:43.026  INFO 14308 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 6.654 seconds (JVM running for 7.71)
2019-10-30 17:37:53.403  INFO 14308 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 17:37:53.403  INFO 14308 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 17:37:53.416  INFO 14308 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2019-10-30 17:37:53.451  INFO 14308 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:37:53.664 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:37:53.688 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:37:53.714 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:37:53.719 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:37:53.720 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:37:53.721 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:37:53.723 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:37:53.723 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:37:53.725 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:37:53.727 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:37:53.728 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:37:53.729 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:37:53.765 DEBUG 14308 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:37:53.765 DEBUG 14308 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:37:53.766 DEBUG 14308 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:37:53.768 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:37:53.768 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:37:53.771 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:37:53.776 DEBUG 14308 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:37:53.776 DEBUG 14308 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:37:53.777 DEBUG 14308 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:37:53.778 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:37:53.779 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:37:53.780 DEBUG 14308 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:37:53.788 DEBUG 14308 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:37:53.788 DEBUG 14308 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:37:53.789 DEBUG 14308 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:37:53.789 DEBUG 14308 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:37:53.789 DEBUG 14308 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:37:53.791 DEBUG 14308 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:37:53.792  INFO 14308 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:37:53.792  INFO 14308 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 343
2019-10-30 17:38:47.780  INFO 14308 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:38:47.790 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:38:47.791 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:38:47.792 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:38:47.795 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:38:47.795 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:38:47.796 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:38:47.798 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:38:47.798 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:38:47.802 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:38:47.812 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:38:47.813 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:38:47.814 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:38:47.816 DEBUG 14308 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:38:47.816 DEBUG 14308 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:38:47.817 DEBUG 14308 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:38:47.818 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:38:47.818 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:38:47.821 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:38:47.822 DEBUG 14308 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:38:47.822 DEBUG 14308 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:38:47.823 DEBUG 14308 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:38:47.824 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:38:47.825 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:38:47.827 DEBUG 14308 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:38:47.828 DEBUG 14308 --- [http-nio-8080-exec-9] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:38:47.829 DEBUG 14308 --- [http-nio-8080-exec-9] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:38:47.829 DEBUG 14308 --- [http-nio-8080-exec-9] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:38:47.830 DEBUG 14308 --- [http-nio-8080-exec-9] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:38:47.830 DEBUG 14308 --- [http-nio-8080-exec-9] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:38:47.832 DEBUG 14308 --- [http-nio-8080-exec-9] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:38:47.833  INFO 14308 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:38:47.833  INFO 14308 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 53
2019-10-30 17:38:57.671  INFO 12936 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 12936 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 17:38:57.676 DEBUG 12936 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 17:38:57.676  INFO 12936 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 17:38:57.783  INFO 12936 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 17:38:57.783  INFO 12936 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 17:38:58.457  INFO 12936 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 17:38:58.498  INFO 12936 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29ms. Found 0 repository interfaces.
2019-10-30 17:38:58.871  INFO 12936 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32bec703] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 17:38:59.327  INFO 12936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 17:38:59.406  INFO 12936 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 17:38:59.406  INFO 12936 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 17:38:59.519  INFO 12936 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 17:38:59.520  INFO 12936 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1736 ms
2019-10-30 17:38:59.667  INFO 12936 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 17:38:59.913  INFO 12936 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 17:39:01.131  INFO 12936 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 17:39:01.229  INFO 12936 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 17:39:01.965  INFO 12936 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 17:39:02.030  INFO 12936 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 17:39:02.035  INFO 12936 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 4.971 seconds (JVM running for 6.1)
2019-10-30 17:39:03.220  INFO 12936 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 17:39:03.221  INFO 12936 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 17:39:03.236  INFO 12936 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2019-10-30 17:39:03.279  INFO 12936 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:39:03.496 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:39:03.525 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:39:03.550 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:39:03.555 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:39:03.556 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:39:03.557 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:39:03.558 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:39:03.559 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:39:03.560 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:39:03.561 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:39:03.562 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:39:03.563 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:39:03.597 DEBUG 12936 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:39:03.598 DEBUG 12936 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:39:03.599 DEBUG 12936 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:39:03.601 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:39:03.601 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:39:03.602 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:39:03.606 DEBUG 12936 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:39:03.606 DEBUG 12936 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:39:03.607 DEBUG 12936 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:39:03.608 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:39:03.608 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:39:03.609 DEBUG 12936 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:39:03.617 DEBUG 12936 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:39:03.618 DEBUG 12936 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:39:03.618 DEBUG 12936 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:39:03.619 DEBUG 12936 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:39:03.619 DEBUG 12936 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:39:03.620 DEBUG 12936 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:39:03.621  INFO 12936 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:39:03.621  INFO 12936 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 344
2019-10-30 17:39:31.782  INFO 12936 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:39:31.791 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:39:31.792 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:39:31.793 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:39:31.795 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:39:31.795 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:39:31.796 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:39:31.798 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:39:31.799 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:39:31.800 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:39:31.802 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:39:31.802 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:39:31.803 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:39:31.805 DEBUG 12936 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:39:31.806 DEBUG 12936 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:39:31.807 DEBUG 12936 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:39:31.808 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:39:31.809 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:39:31.812 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:39:31.813 DEBUG 12936 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:39:31.814 DEBUG 12936 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:39:31.814 DEBUG 12936 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:39:31.815 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:39:31.815 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:39:31.817 DEBUG 12936 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:39:31.818 DEBUG 12936 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:39:31.818 DEBUG 12936 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:39:31.819 DEBUG 12936 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:39:31.819 DEBUG 12936 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:39:31.820 DEBUG 12936 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:39:31.821 DEBUG 12936 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:39:31.823  INFO 12936 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:39:31.823  INFO 12936 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 41
2019-10-30 17:40:00.141  INFO 33256 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 33256 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 17:40:00.145 DEBUG 33256 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 17:40:00.145  INFO 33256 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 17:40:00.193  INFO 33256 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 17:40:00.193  INFO 33256 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 17:40:00.923  INFO 33256 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 17:40:00.963  INFO 33256 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2019-10-30 17:40:01.342  INFO 33256 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$746df323] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 17:40:01.834  INFO 33256 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 17:40:01.857  INFO 33256 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 17:40:01.858  INFO 33256 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 17:40:02.053  INFO 33256 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 17:40:02.054  INFO 33256 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1861 ms
2019-10-30 17:40:02.201  INFO 33256 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 17:40:02.462  INFO 33256 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 17:40:03.709  INFO 33256 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 17:40:03.818  INFO 33256 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 17:40:04.635  INFO 33256 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 17:40:04.703  INFO 33256 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 17:40:04.706  INFO 33256 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.47 seconds (JVM running for 6.671)
2019-10-30 17:40:39.090  INFO 33256 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 17:40:39.090  INFO 33256 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 17:40:39.105  INFO 33256 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 17:40:39.142  INFO 33256 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:40:39.370 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:40:39.400 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:40:39.427 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:40:39.436 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:40:39.436 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:40:39.437 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:40:39.439 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:40:39.440 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:40:39.441 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:40:39.442 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:40:39.443 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:40:39.444 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:40:39.478 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:40:39.479 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:40:39.480 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:40:39.482 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:40:39.483 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:40:39.485 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:40:39.489 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:40:39.489 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:40:39.490 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:40:39.491 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:40:39.491 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:40:39.493 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:40:39.501 DEBUG 33256 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:40:39.501 DEBUG 33256 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:40:39.502 DEBUG 33256 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:40:39.502 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:40:39.502 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:40:39.503 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:40:39.504  INFO 33256 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:40:39.504  INFO 33256 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 364
2019-10-30 17:41:47.646  INFO 33256 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:41:47.659 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:41:47.659 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:41:47.668 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:41:47.670 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:41:47.670 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:41:47.671 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:41:47.673 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:41:47.673 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:41:47.674 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:41:47.676 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:41:47.676 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:41:47.677 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:41:47.678 DEBUG 33256 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:41:47.678 DEBUG 33256 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:41:47.680 DEBUG 33256 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:41:47.681 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:41:47.681 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:41:47.683 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:41:47.685 DEBUG 33256 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:41:47.685 DEBUG 33256 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:41:47.685 DEBUG 33256 --- [http-nio-8080-exec-9] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:41:47.687 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:41:47.687 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:41:47.689 DEBUG 33256 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:41:47.690 DEBUG 33256 --- [http-nio-8080-exec-9] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:41:47.690 DEBUG 33256 --- [http-nio-8080-exec-9] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:41:47.691 DEBUG 33256 --- [http-nio-8080-exec-9] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:41:47.691 DEBUG 33256 --- [http-nio-8080-exec-9] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:41:47.691 DEBUG 33256 --- [http-nio-8080-exec-9] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:41:47.693 DEBUG 33256 --- [http-nio-8080-exec-9] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:41:47.694  INFO 33256 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:41:47.694  INFO 33256 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 48
2019-10-30 17:41:49.137  INFO 33256 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:41:49.142 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:41:49.142 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:41:49.143 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:41:49.146 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:41:49.146 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:41:49.148 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:41:49.150 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:41:49.150 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:41:49.152 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:41:49.154 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:41:49.154 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:41:49.156 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:41:49.158 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:41:49.158 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:41:49.159 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:41:49.160 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:41:49.160 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:41:49.161 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:41:49.162 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:41:49.162 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:41:49.163 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:41:49.164 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:41:49.165 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:41:49.166 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:41:49.166 DEBUG 33256 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:41:49.167 DEBUG 33256 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:41:49.167 DEBUG 33256 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:41:49.168 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:41:49.168 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:41:49.170 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:41:49.171  INFO 33256 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:41:49.171  INFO 33256 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 34
2019-10-30 17:42:04.854  INFO 33256 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:42:04.864 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:42:04.865 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:42:04.866 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:42:04.867 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:42:04.868 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:42:04.868 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:42:04.870 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:42:04.871 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:42:04.872 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:42:04.874 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:42:04.875 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:42:04.876 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:42:04.877 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:42:04.878 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:42:04.879 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:42:04.880 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:42:04.880 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:42:04.882 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:42:04.882 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:42:04.882 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:42:04.883 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:42:04.884 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:42:04.884 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:42:04.886 DEBUG 33256 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:42:04.887 DEBUG 33256 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:42:04.888 DEBUG 33256 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:42:04.889 DEBUG 33256 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:42:04.889 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:42:04.890 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:42:04.891 DEBUG 33256 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:42:04.892  INFO 33256 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:42:04.892  INFO 33256 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 38
2019-10-30 17:42:13.417  INFO 31576 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 31576 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 17:42:13.419 DEBUG 31576 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 17:42:13.419  INFO 31576 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 17:42:13.456  INFO 31576 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 17:42:13.456  INFO 31576 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 17:42:14.143  INFO 31576 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 17:42:14.183  INFO 31576 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2019-10-30 17:42:14.570  INFO 31576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0db3d1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 17:42:15.058  INFO 31576 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 17:42:15.138  INFO 31576 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 17:42:15.139  INFO 31576 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 17:42:15.258  INFO 31576 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 17:42:15.258  INFO 31576 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1802 ms
2019-10-30 17:42:15.419  INFO 31576 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 17:42:15.674  INFO 31576 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 17:42:16.959  INFO 31576 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 17:42:17.063  INFO 31576 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 17:42:17.841  INFO 31576 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 17:42:17.908  INFO 31576 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 17:42:17.912  INFO 31576 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.171 seconds (JVM running for 6.324)
2019-10-30 17:42:55.427  INFO 31576 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 17:42:55.428  INFO 31576 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 17:42:55.442  INFO 31576 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 17:42:55.477  INFO 31576 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:42:55.683 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:42:55.712 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:42:55.742 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:42:55.750 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:42:55.751 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:42:55.752 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:42:55.754 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:42:55.754 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:42:55.756 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:42:55.758 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:42:55.759 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:42:55.760 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:42:55.798 DEBUG 31576 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:42:55.798 DEBUG 31576 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:42:55.799 DEBUG 31576 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:42:55.802 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:42:55.803 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:42:55.805 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:42:55.809 DEBUG 31576 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:42:55.809 DEBUG 31576 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:42:55.810 DEBUG 31576 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:42:55.812 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:42:55.812 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:42:55.813 DEBUG 31576 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:42:55.821 DEBUG 31576 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:42:55.822 DEBUG 31576 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:42:55.822 DEBUG 31576 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:42:55.823 DEBUG 31576 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:42:55.823 DEBUG 31576 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:42:55.824 DEBUG 31576 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:42:55.825  INFO 31576 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:42:55.826  INFO 31576 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 351
2019-10-30 17:48:20.439  INFO 31576 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:48:20.452 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:48:20.453 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:48:20.457 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:48:20.459 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:48:20.460 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:48:20.462 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:48:20.464 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:48:20.464 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:48:20.466 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:48:20.468 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:48:20.468 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:48:20.470 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:48:20.471 DEBUG 31576 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:48:20.471 DEBUG 31576 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:48:20.472 DEBUG 31576 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:48:20.473 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:48:20.474 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:48:20.477 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:48:20.479 DEBUG 31576 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:48:20.479 DEBUG 31576 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:48:20.480 DEBUG 31576 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:48:20.481 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:48:20.481 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:48:20.482 DEBUG 31576 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:48:20.483 DEBUG 31576 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:48:20.484 DEBUG 31576 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:48:20.485 DEBUG 31576 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:48:20.485 DEBUG 31576 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:48:20.486 DEBUG 31576 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:48:20.488 DEBUG 31576 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:48:20.489  INFO 31576 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:48:20.489  INFO 31576 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 50
2019-10-30 17:48:27.215  INFO 31244 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 31244 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 17:48:27.218 DEBUG 31244 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 17:48:27.218  INFO 31244 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 17:48:27.279  INFO 31244 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 17:48:27.279  INFO 31244 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 17:48:28.079  INFO 31244 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 17:48:28.121  INFO 31244 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 32ms. Found 0 repository interfaces.
2019-10-30 17:48:28.524  INFO 31244 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e107742] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 17:48:29.013  INFO 31244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 17:48:29.092  INFO 31244 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 17:48:29.092  INFO 31244 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 17:48:29.205  INFO 31244 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 17:48:29.206  INFO 31244 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1927 ms
2019-10-30 17:48:29.367  INFO 31244 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 17:48:29.617  INFO 31244 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 17:48:30.900  INFO 31244 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 17:48:31.000  INFO 31244 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 17:48:33.236  INFO 31244 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 17:48:33.373  INFO 31244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 17:48:33.376  INFO 31244 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 6.983 seconds (JVM running for 7.991)
2019-10-30 17:48:46.573  INFO 31244 --- [http-nio-8080-exec-10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 17:48:46.573  INFO 31244 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 17:48:46.588  INFO 31244 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 17:48:46.620  INFO 31244 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 17:48:46.818 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:48:46.846 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:48:46.872 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:48:46.879 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:48:46.879 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 17:48:46.880 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:48:46.882 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 17:48:46.882 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 17:48:46.883 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:48:46.885 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 17:48:46.885 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 17:48:46.886 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 17:48:46.922 DEBUG 31244 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 17:48:46.922 DEBUG 31244 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:48:46.924 DEBUG 31244 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:48:46.929 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 17:48:46.929 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:48:46.932 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 17:48:46.937 DEBUG 31244 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 17:48:46.938 DEBUG 31244 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 17:48:46.939 DEBUG 31244 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 17:48:46.940 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 17:48:46.941 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 17:48:46.942 DEBUG 31244 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 17:48:46.949 DEBUG 31244 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 17:48:46.949 DEBUG 31244 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 17:48:46.950 DEBUG 31244 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 17:48:46.950 DEBUG 31244 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 17:48:46.950 DEBUG 31244 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 17:48:46.951 DEBUG 31244 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 17:48:46.952  INFO 31244 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 17:48:46.952  INFO 31244 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 334
2019-10-30 17:51:06.128  INFO 31244 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 17:51:06.131  INFO 31244 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 17:51:06.132  INFO 31244 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 18:01:22.287  INFO 5600 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 5600 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 18:01:22.290 DEBUG 5600 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 18:01:22.290  INFO 5600 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 18:01:22.342  INFO 5600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 18:01:22.342  INFO 5600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 18:01:23.071  INFO 5600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 18:01:23.111  INFO 5600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2019-10-30 18:01:23.493  INFO 5600 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6640c658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 18:01:23.974  INFO 5600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 18:01:24.070  INFO 5600 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 18:01:24.070  INFO 5600 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 18:01:24.184  INFO 5600 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 18:01:24.185  INFO 5600 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1843 ms
2019-10-30 18:01:24.342  INFO 5600 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 18:01:24.614  INFO 5600 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 18:01:25.914  INFO 5600 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 18:01:26.038  INFO 5600 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 18:01:26.806  INFO 5600 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 18:01:26.871  INFO 5600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 18:01:26.874  INFO 5600 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.457 seconds (JVM running for 6.487)
2019-10-30 18:01:29.453  INFO 5600 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 18:01:29.454  INFO 5600 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 18:01:29.468  INFO 5600 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 18:01:29.497  INFO 5600 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 18:01:29.499  INFO 5600 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 18:01:29.500  INFO 5600 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 18:03:48.053  INFO 3848 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 3848 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 18:03:48.055 DEBUG 3848 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 18:03:48.056  INFO 3848 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 18:03:48.106  INFO 3848 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 18:03:48.106  INFO 3848 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 18:03:48.793  INFO 3848 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 18:03:48.834  INFO 3848 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29ms. Found 0 repository interfaces.
2019-10-30 18:03:49.209  INFO 3848 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$df98486] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 18:03:49.690  INFO 3848 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 18:03:49.793  INFO 3848 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 18:03:49.794  INFO 3848 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 18:03:49.914  INFO 3848 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 18:03:49.915  INFO 3848 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1809 ms
2019-10-30 18:03:50.069  INFO 3848 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 18:03:50.328  INFO 3848 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 18:03:51.584  INFO 3848 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 18:03:51.685  INFO 3848 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 18:03:52.443  INFO 3848 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 18:03:52.508  INFO 3848 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 18:03:52.511  INFO 3848 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.252 seconds (JVM running for 6.311)
2019-10-30 18:03:55.130  INFO 3848 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 18:03:55.131  INFO 3848 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 18:03:55.144  INFO 3848 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2019-10-30 18:03:55.171  INFO 3848 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 18:03:55.173  INFO 3848 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 18:03:55.174  INFO 3848 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 18:05:08.738  INFO 26376 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 26376 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 18:05:08.741 DEBUG 26376 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 18:05:08.741  INFO 26376 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 18:05:08.780  INFO 26376 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 18:05:08.780  INFO 26376 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 18:05:09.500  INFO 26376 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 18:05:09.557  INFO 26376 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 43ms. Found 0 repository interfaces.
2019-10-30 18:05:09.932  INFO 26376 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3f79f4f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 18:05:10.442  INFO 26376 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 18:05:10.539  INFO 26376 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 18:05:10.540  INFO 26376 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 18:05:10.667  INFO 26376 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 18:05:10.667  INFO 26376 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1887 ms
2019-10-30 18:05:10.819  INFO 26376 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 18:05:11.077  INFO 26376 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 18:05:12.474  INFO 26376 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 18:05:12.574  INFO 26376 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 18:05:13.372  INFO 26376 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 18:05:13.445  INFO 26376 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 18:05:13.448  INFO 26376 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.483 seconds (JVM running for 6.583)
2019-10-30 18:05:13.514  INFO 26376 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 18:05:13.514  INFO 26376 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 18:05:13.529  INFO 26376 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2019-10-30 18:05:13.555  INFO 26376 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 18:05:13.557  INFO 26376 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 18:05:13.557  INFO 26376 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 18:05:55.581  INFO 4740 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 4740 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 18:05:55.583 DEBUG 4740 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 18:05:55.584  INFO 4740 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 18:05:55.659  INFO 4740 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 18:05:55.661  INFO 4740 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 18:05:56.394  INFO 4740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 18:05:56.435  INFO 4740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
2019-10-30 18:05:56.823  INFO 4740 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d9371c49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 18:05:57.304  INFO 4740 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 18:05:57.379  INFO 4740 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 18:05:57.379  INFO 4740 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 18:05:57.497  INFO 4740 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 18:05:57.497  INFO 4740 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1835 ms
2019-10-30 18:05:57.655  INFO 4740 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 18:05:57.911  INFO 4740 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 18:05:59.208  INFO 4740 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 18:05:59.311  INFO 4740 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 18:06:00.115  INFO 4740 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 18:06:00.196  INFO 4740 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 18:06:00.200  INFO 4740 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.268 seconds (JVM running for 6.322)
2019-10-30 18:06:02.219  INFO 4740 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 18:06:02.220  INFO 4740 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 18:06:02.236  INFO 4740 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2019-10-30 18:06:02.263  INFO 4740 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 18:06:02.266  INFO 4740 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 18:06:02.266  INFO 4740 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 18:06:07.444  INFO 4740 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 18:06:07.656 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:06:07.683 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:06:07.708 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:06:07.715 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:06:07.715 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:06:07.717 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:06:07.718 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:06:07.719 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:06:07.720 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:06:07.721 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:06:07.722 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:06:07.723 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:06:07.761 DEBUG 4740 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:06:07.761 DEBUG 4740 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:06:07.762 DEBUG 4740 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:06:07.765 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 18:06:07.766 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:06:07.768 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 18:06:07.772 DEBUG 4740 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 18:06:07.772 DEBUG 4740 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:06:07.773 DEBUG 4740 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:06:07.774 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 18:06:07.775 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:06:07.776 DEBUG 4740 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 18:06:07.785 DEBUG 4740 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 18:06:07.785 DEBUG 4740 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 18:06:07.787 DEBUG 4740 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 18:06:07.787 DEBUG 4740 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 18:06:07.787 DEBUG 4740 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:06:07.789 DEBUG 4740 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 18:06:07.790  INFO 4740 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 18:06:07.790  INFO 4740 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 346
2019-10-30 18:28:30.472  INFO 4740 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 18:28:30.491 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:28:30.491 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:28:30.493 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:28:30.495 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:28:30.496 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:28:30.497 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:28:30.499 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:28:30.500 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:28:30.501 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:28:30.503 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:28:30.503 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:28:30.505 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:28:30.506 DEBUG 4740 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:28:30.506 DEBUG 4740 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:28:30.507 DEBUG 4740 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:28:30.509 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 18:28:30.510 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:28:30.514 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 18:28:30.516 DEBUG 4740 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 18:28:30.516 DEBUG 4740 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:28:30.517 DEBUG 4740 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:28:30.518 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 18:28:30.519 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:28:30.520 DEBUG 4740 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 18:28:30.521 DEBUG 4740 --- [http-nio-8080-exec-6] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 18:28:30.521 DEBUG 4740 --- [http-nio-8080-exec-6] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 18:28:30.522 DEBUG 4740 --- [http-nio-8080-exec-6] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 18:28:30.523 DEBUG 4740 --- [http-nio-8080-exec-6] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 18:28:30.523 DEBUG 4740 --- [http-nio-8080-exec-6] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:28:30.525 DEBUG 4740 --- [http-nio-8080-exec-6] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 18:28:30.527  INFO 4740 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 18:28:30.527  INFO 4740 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 55
2019-10-30 18:28:37.601  INFO 42940 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 42940 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 18:28:37.604 DEBUG 42940 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 18:28:37.604  INFO 42940 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 18:28:37.690  INFO 42940 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 18:28:37.690  INFO 42940 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 18:28:38.419  INFO 42940 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 18:28:38.471  INFO 42940 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 39ms. Found 0 repository interfaces.
2019-10-30 18:28:38.817  INFO 42940 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$28af111f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 18:28:39.293  INFO 42940 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 18:28:39.392  INFO 42940 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 18:28:39.392  INFO 42940 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 18:28:39.509  INFO 42940 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 18:28:39.510  INFO 42940 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1820 ms
2019-10-30 18:28:39.658  INFO 42940 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 18:28:39.906  INFO 42940 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 18:28:41.193  INFO 42940 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 18:28:41.294  INFO 42940 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 18:28:42.053  INFO 42940 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 18:28:42.117  INFO 42940 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 18:28:42.120  INFO 42940 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.18 seconds (JVM running for 6.242)
2019-10-30 18:28:43.970  INFO 42940 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 18:28:43.971  INFO 42940 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 18:28:43.987  INFO 42940 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2019-10-30 18:28:44.020  INFO 42940 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 18:28:44.215 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:28:44.242 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:28:44.267 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:28:44.274 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:28:44.275 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:28:44.276 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:28:44.278 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:28:44.278 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:28:44.280 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:28:44.282 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:28:44.282 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:28:44.283 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:28:44.320 DEBUG 42940 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:28:44.320 DEBUG 42940 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:28:44.321 DEBUG 42940 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:28:44.323 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 18:28:44.324 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:28:44.326 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 18:28:44.331 DEBUG 42940 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 18:28:44.331 DEBUG 42940 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:28:44.332 DEBUG 42940 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:28:44.333 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 18:28:44.333 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:28:44.335 DEBUG 42940 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 18:28:44.341 DEBUG 42940 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 18:28:44.341 DEBUG 42940 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 18:28:44.342 DEBUG 42940 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 18:28:44.343 DEBUG 42940 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 18:28:44.343 DEBUG 42940 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:28:44.345 DEBUG 42940 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 18:28:44.346  INFO 42940 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 18:28:44.346  INFO 42940 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 328
2019-10-30 18:29:00.134  INFO 42940 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/14', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[14, {}]}
2019-10-30 18:29:00.136 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 18:29:00.137 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 18:29:00.140 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:29:00.173 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:29:00.173 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:29:00.174 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:29:00.176 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:29:00.177 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:29:00.178 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:29:00.180 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:29:00.180 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 18:29:00.181 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:29:00.182 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:29:00.182 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 2(Integer)
2019-10-30 18:29:00.183 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:29:00.184 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:29:00.185 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 3(Integer)
2019-10-30 18:29:00.187 DEBUG 42940 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:29:00.188  INFO 42940 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 18:29:00.188  INFO 42940 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 54
2019-10-30 18:33:24.702  INFO 39424 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 39424 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 18:33:24.705 DEBUG 39424 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 18:33:24.706  INFO 39424 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 18:33:24.776  INFO 39424 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 18:33:24.776  INFO 39424 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 18:33:25.464  INFO 39424 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 18:33:25.506  INFO 39424 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29ms. Found 0 repository interfaces.
2019-10-30 18:33:25.881  INFO 39424 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$72ff8f97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 18:33:26.347  INFO 39424 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 18:33:26.424  INFO 39424 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 18:33:26.425  INFO 39424 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 18:33:26.538  INFO 39424 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 18:33:26.539  INFO 39424 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1763 ms
2019-10-30 18:33:26.693  INFO 39424 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 18:33:26.939  INFO 39424 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 18:33:28.225  INFO 39424 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 18:33:28.336  INFO 39424 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 18:33:29.123  INFO 39424 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 18:33:29.186  INFO 39424 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 18:33:29.190  INFO 39424 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.123 seconds (JVM running for 6.211)
2019-10-30 18:33:30.841  INFO 39424 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 18:33:30.841  INFO 39424 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 18:33:30.856  INFO 39424 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2019-10-30 18:33:30.888  INFO 39424 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 18:33:31.088 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:33:31.117 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:33:31.142 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:33:31.149 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:33:31.150 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:33:31.151 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:33:31.153 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:33:31.153 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:33:31.155 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:33:31.156 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:33:31.156 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:33:31.157 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:33:31.194 DEBUG 39424 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:33:31.194 DEBUG 39424 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:33:31.195 DEBUG 39424 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:33:31.198 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 18:33:31.198 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:33:31.200 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 18:33:31.204 DEBUG 39424 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 18:33:31.204 DEBUG 39424 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:33:31.205 DEBUG 39424 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:33:31.206 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 18:33:31.206 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:33:31.208 DEBUG 39424 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 18:33:31.215 DEBUG 39424 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 18:33:31.216 DEBUG 39424 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 18:33:31.217 DEBUG 39424 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 18:33:31.217 DEBUG 39424 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 18:33:31.217 DEBUG 39424 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:33:31.218 DEBUG 39424 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 18:33:31.220  INFO 39424 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 18:33:31.220  INFO 39424 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 334
2019-10-30 18:34:10.965  INFO 39424 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/14', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[14, {}]}
2019-10-30 18:34:10.967 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 18:34:10.968 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 18:34:10.972 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:34:11.027 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:34:11.028 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:34:11.029 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:34:11.030 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:34:11.031 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:34:11.033 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:34:11.035 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:34:11.037 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 18:34:11.038 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:34:11.039 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:34:11.039 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 2(Integer)
2019-10-30 18:34:11.040 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:34:11.041 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:34:11.042 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 3(Integer)
2019-10-30 18:34:11.044 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:34:11.046  INFO 39424 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 18:34:11.046  INFO 39424 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 81
2019-10-30 18:34:22.032  INFO 39424 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 18:34:22.040 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:34:22.041 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:34:22.045 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:34:22.049 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:34:22.050 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:34:22.052 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:34:22.054 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:34:22.054 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:34:22.062 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:34:22.064 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:34:22.065 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:34:22.066 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:34:22.068 DEBUG 39424 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:34:22.068 DEBUG 39424 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:34:22.069 DEBUG 39424 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:34:22.070 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 18:34:22.071 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:34:22.074 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 18:34:22.074 DEBUG 39424 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 18:34:22.074 DEBUG 39424 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:34:22.075 DEBUG 39424 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:34:22.076 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 18:34:22.076 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:34:22.077 DEBUG 39424 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 18:34:22.078 DEBUG 39424 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 18:34:22.079 DEBUG 39424 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 18:34:22.092 DEBUG 39424 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 18:34:22.093 DEBUG 39424 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 18:34:22.093 DEBUG 39424 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:34:22.095 DEBUG 39424 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 18:34:22.096  INFO 39424 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 18:34:22.096  INFO 39424 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 64
2019-10-30 18:34:22.792  INFO 39424 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.about', args=[]}
2019-10-30 18:34:22.792  INFO 39424 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : about
2019-10-30 18:34:22.792  INFO 39424 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 0
2019-10-30 18:42:27.462  INFO 39424 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/14', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[14, {}]}
2019-10-30 18:42:27.469 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 18:42:27.469 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 18:42:27.470 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:42:27.477 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:42:27.477 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:42:27.479 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:42:27.484 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:42:27.485 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:42:27.486 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:42:27.488 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:42:27.488 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 18:42:27.489 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:42:27.490 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:42:27.490 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 2(Integer)
2019-10-30 18:42:27.491 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:42:27.492 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:42:27.493 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 3(Integer)
2019-10-30 18:42:27.494 DEBUG 39424 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:42:27.495  INFO 39424 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 18:42:27.495  INFO 39424 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 33
2019-10-30 18:44:03.430  INFO 24980 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 24980 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 18:44:03.437 DEBUG 24980 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 18:44:03.438  INFO 24980 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 18:44:03.486  INFO 24980 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 18:44:03.486  INFO 24980 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 18:44:04.274  INFO 24980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 18:44:04.324  INFO 24980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 36ms. Found 0 repository interfaces.
2019-10-30 18:44:04.689  INFO 24980 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$351832be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 18:44:05.229  INFO 24980 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 18:44:05.343  INFO 24980 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 18:44:05.344  INFO 24980 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 18:44:05.467  INFO 24980 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 18:44:05.468  INFO 24980 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1982 ms
2019-10-30 18:44:05.631  INFO 24980 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 18:44:05.901  INFO 24980 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 18:44:07.279  INFO 24980 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 18:44:07.386  INFO 24980 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 18:44:08.208  INFO 24980 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 18:44:08.277  INFO 24980 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 18:44:08.280  INFO 24980 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.687 seconds (JVM running for 6.885)
2019-10-30 18:44:08.364  INFO 24980 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 18:44:08.364  INFO 24980 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 18:44:08.380  INFO 24980 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2019-10-30 18:44:08.413  INFO 24980 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 18:44:08.650 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:44:08.678 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:44:08.703 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:44:08.709 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:44:08.710 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:44:08.711 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:44:08.712 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:44:08.712 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:44:08.714 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:44:08.715 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:44:08.715 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:44:08.716 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:44:08.753 DEBUG 24980 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:44:08.754 DEBUG 24980 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:44:08.755 DEBUG 24980 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:44:08.758 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 18:44:08.758 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:44:08.760 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 18:44:08.764 DEBUG 24980 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 18:44:08.765 DEBUG 24980 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:44:08.765 DEBUG 24980 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:44:08.766 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 18:44:08.767 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:44:08.768 DEBUG 24980 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 18:44:08.775 DEBUG 24980 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 18:44:08.776 DEBUG 24980 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 18:44:08.777 DEBUG 24980 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 18:44:08.777 DEBUG 24980 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 18:44:08.777 DEBUG 24980 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:44:08.778 DEBUG 24980 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 18:44:08.779  INFO 24980 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 18:44:08.780  INFO 24980 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 369
2019-10-30 18:44:10.468  INFO 24980 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.about', args=[]}
2019-10-30 18:44:10.469  INFO 24980 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : about
2019-10-30 18:44:10.469  INFO 24980 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 1
2019-10-30 18:45:45.964  INFO 12436 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 12436 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 18:45:45.966 DEBUG 12436 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 18:45:45.967  INFO 12436 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 18:45:46.012  INFO 12436 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 18:45:46.012  INFO 12436 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 18:45:46.725  INFO 12436 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 18:45:46.767  INFO 12436 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29ms. Found 0 repository interfaces.
2019-10-30 18:45:47.173  INFO 12436 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a08b0096] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 18:45:47.704  INFO 12436 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 18:45:47.796  INFO 12436 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 18:45:47.796  INFO 12436 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 18:45:47.923  INFO 12436 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 18:45:47.925  INFO 12436 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1913 ms
2019-10-30 18:45:48.094  INFO 12436 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 18:45:48.346  INFO 12436 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 18:45:49.687  INFO 12436 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 18:45:49.797  INFO 12436 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 18:45:50.599  INFO 12436 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 18:45:50.669  INFO 12436 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 18:45:50.674  INFO 12436 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.485 seconds (JVM running for 6.747)
2019-10-30 18:45:53.188  INFO 12436 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 18:45:53.188  INFO 12436 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 18:45:53.205  INFO 12436 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2019-10-30 18:45:53.235  INFO 12436 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.about', args=[]}
2019-10-30 18:45:53.237  INFO 12436 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : about
2019-10-30 18:45:53.238  INFO 12436 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 18:46:12.448  INFO 12436 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 18:46:12.652 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:46:12.685 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:46:12.710 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:46:12.718 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:46:12.718 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:46:12.719 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:46:12.720 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:46:12.721 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:46:12.722 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:46:12.724 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:46:12.724 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:46:12.725 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:46:12.761 DEBUG 12436 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:46:12.761 DEBUG 12436 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:46:12.762 DEBUG 12436 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:46:12.765 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 18:46:12.765 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:46:12.768 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 18:46:12.772 DEBUG 12436 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 18:46:12.772 DEBUG 12436 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:46:12.773 DEBUG 12436 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:46:12.774 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 18:46:12.774 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:46:12.775 DEBUG 12436 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 18:46:12.783 DEBUG 12436 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 18:46:12.784 DEBUG 12436 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 18:46:12.784 DEBUG 12436 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 18:46:12.785 DEBUG 12436 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 18:46:12.785 DEBUG 12436 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:46:12.786 DEBUG 12436 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 18:46:12.787  INFO 12436 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 18:46:12.787  INFO 12436 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 339
2019-10-30 18:46:15.000  INFO 12436 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/14', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[14, {}]}
2019-10-30 18:46:15.002 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 18:46:15.003 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 18:46:15.007 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:46:15.042 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:46:15.042 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:46:15.043 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:46:15.045 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:46:15.046 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:46:15.047 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:46:15.049 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:46:15.049 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 18:46:15.050 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:46:15.051 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:46:15.051 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 2(Integer)
2019-10-30 18:46:15.052 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:46:15.054 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:46:15.055 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 3(Integer)
2019-10-30 18:46:15.056 DEBUG 12436 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:46:15.057  INFO 12436 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 18:46:15.058  INFO 12436 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 58
2019-10-30 18:47:17.598  INFO 12436 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/14', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[14, {}]}
2019-10-30 18:47:17.605 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 18:47:17.606 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 18:47:17.608 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:47:17.610 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:47:17.610 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:47:17.611 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:47:17.613 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:47:17.614 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:47:17.615 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:47:17.617 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:47:17.617 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 18:47:17.618 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:47:17.619 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:47:17.620 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 2(Integer)
2019-10-30 18:47:17.621 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:47:17.622 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:47:17.622 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 3(Integer)
2019-10-30 18:47:17.624 DEBUG 12436 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:47:17.624  INFO 12436 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 18:47:17.624  INFO 12436 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 26
2019-10-30 18:48:37.937  INFO 12436 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[1, {}]}
2019-10-30 18:48:37.942 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 18:48:37.942 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:48:37.947 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:48:37.954 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:48:37.954 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:48:37.955 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:48:37.957 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:48:37.957 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:48:37.958 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:48:37.960 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:48:37.960 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 18:48:37.961 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:48:37.962  INFO 12436 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 18:48:37.962  INFO 12436 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 25
2019-10-30 18:53:41.424  INFO 12436 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/1', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[1, {}]}
2019-10-30 18:53:41.430 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 18:53:41.430 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:53:41.432 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:53:41.438 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:53:41.439 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:53:41.440 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:53:41.442 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:53:41.442 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:53:41.443 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:53:41.445 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:53:41.445 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 18:53:41.446 DEBUG 12436 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:53:41.447  INFO 12436 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 18:53:41.447  INFO 12436 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 24
2019-10-30 18:55:17.282  INFO 8752 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 8752 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 18:55:17.285 DEBUG 8752 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 18:55:17.285  INFO 8752 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 18:55:17.340  INFO 8752 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 18:55:17.340  INFO 8752 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 18:55:18.104  INFO 8752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 18:55:18.145  INFO 8752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
2019-10-30 18:55:18.555  INFO 8752 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$124325a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 18:55:19.090  INFO 8752 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 18:55:19.182  INFO 8752 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 18:55:19.182  INFO 8752 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 18:55:19.302  INFO 8752 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 18:55:19.302  INFO 8752 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1962 ms
2019-10-30 18:55:19.470  INFO 8752 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 18:55:19.727  INFO 8752 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 18:55:21.025  INFO 8752 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 18:55:21.132  INFO 8752 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 18:55:21.923  INFO 8752 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 18:55:21.991  INFO 8752 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 18:55:21.994  INFO 8752 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.502 seconds (JVM running for 6.801)
2019-10-30 18:55:22.057  INFO 8752 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 18:55:22.057  INFO 8752 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 18:55:22.072  INFO 8752 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2019-10-30 18:55:22.107  INFO 8752 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 18:55:22.316 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:55:22.344 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:55:22.389 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:55:22.396 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:55:22.396 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:55:22.398 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:55:22.400 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:55:22.400 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:55:22.402 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:55:22.404 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:55:22.404 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:55:22.405 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:55:22.439 DEBUG 8752 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:55:22.440 DEBUG 8752 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:55:22.441 DEBUG 8752 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:55:22.443 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 18:55:22.443 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:55:22.445 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 18:55:22.449 DEBUG 8752 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 18:55:22.449 DEBUG 8752 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:55:22.451 DEBUG 8752 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:55:22.452 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 18:55:22.452 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:55:22.453 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 18:55:22.460 DEBUG 8752 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 18:55:22.460 DEBUG 8752 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 18:55:22.461 DEBUG 8752 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 18:55:22.462 DEBUG 8752 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 18:55:22.462 DEBUG 8752 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:55:22.463 DEBUG 8752 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 18:55:22.464  INFO 8752 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 18:55:22.464  INFO 8752 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 359
2019-10-30 18:55:24.972  INFO 8752 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/14', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[14, {}]}
2019-10-30 18:55:24.974 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 18:55:24.974 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 18:55:24.977 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:55:25.012 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:55:25.012 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:55:25.013 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:55:25.015 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:55:25.016 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:55:25.017 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:55:25.019 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:55:25.019 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 18:55:25.020 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:55:25.021 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:55:25.021 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 2(Integer)
2019-10-30 18:55:25.022 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:55:25.023 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 18:55:25.024 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 3(Integer)
2019-10-30 18:55:25.027 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 18:55:25.028  INFO 8752 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 18:55:25.028  INFO 8752 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 56
2019-10-30 18:57:48.248  INFO 8752 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 18:57:48.262 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:57:48.263 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:57:48.264 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:57:48.266 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:57:48.266 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:57:48.267 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:57:48.270 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:57:48.270 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:57:48.271 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:57:48.274 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:57:48.275 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:57:48.276 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:57:48.278 DEBUG 8752 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:57:48.278 DEBUG 8752 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:57:48.279 DEBUG 8752 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:57:48.279 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 18:57:48.280 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:57:48.283 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 18:57:48.283 DEBUG 8752 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 18:57:48.284 DEBUG 8752 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:57:48.284 DEBUG 8752 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:57:48.285 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 18:57:48.285 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:57:48.286 DEBUG 8752 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 18:57:48.288 DEBUG 8752 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 18:57:48.288 DEBUG 8752 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 18:57:48.289 DEBUG 8752 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 18:57:48.289 DEBUG 8752 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 18:57:48.289 DEBUG 8752 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:57:48.291 DEBUG 8752 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 18:57:48.292  INFO 8752 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 18:57:48.292  INFO 8752 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 44
2019-10-30 18:58:11.105  INFO 8752 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/tags/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagShowController.tagsPage', args=[null, -1, {}]}
2019-10-30 18:58:11.109 DEBUG 8752 --- [http-nio-8080-exec-4] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 18:58:11.110 DEBUG 8752 --- [http-nio-8080-exec-4] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==> Parameters: 
2019-10-30 18:58:11.116 DEBUG 8752 --- [http-nio-8080-exec-4] c.p.d.B.selectBlogByTimeDesc_COUNT       : <==      Total: 1
2019-10-30 18:58:11.118 DEBUG 8752 --- [http-nio-8080-exec-4] c.p.dao.BlogMapper.selectBlogByTimeDesc  : ==>  Preparing: select * from blog Order By update_time Desc limit ?,? 
2019-10-30 18:58:11.118 DEBUG 8752 --- [http-nio-8080-exec-4] c.p.dao.BlogMapper.selectBlogByTimeDesc  : ==> Parameters: 0(Integer), 7(Integer)
2019-10-30 18:58:11.123 DEBUG 8752 --- [http-nio-8080-exec-4] c.p.dao.BlogMapper.selectBlogByTimeDesc  : <==      Total: 7
2019-10-30 18:58:11.125 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:11.125 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:11.126 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.128 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:11.128 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:11.129 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.131 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:11.131 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:11.132 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.134 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:11.134 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:58:11.136 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.138 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:11.138 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:11.139 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.140 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:11.140 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:11.142 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.144 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:11.144 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:11.145 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.146 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:11.146 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:11.147 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.149 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:11.149 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:11.150 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.152 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:11.152 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:11.153 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.155 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:11.155 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:11.156 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.157 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:11.158 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:58:11.158 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.160 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:11.160 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:11.161 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.163 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:11.163 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:11.164 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:11.172 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc 
2019-10-30 18:58:11.172 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 
2019-10-30 18:58:11.173 DEBUG 8752 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 18:58:11.174  INFO 8752 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : tags
2019-10-30 18:58:11.174  INFO 8752 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 69
2019-10-30 18:58:25.247  INFO 8752 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeShowController.typesPage', args=[null, -1, {}]}
2019-10-30 18:58:25.249 DEBUG 8752 --- [http-nio-8080-exec-8] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 18:58:25.249 DEBUG 8752 --- [http-nio-8080-exec-8] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==> Parameters: 
2019-10-30 18:58:25.252 DEBUG 8752 --- [http-nio-8080-exec-8] c.p.d.B.selectBlogByTimeDesc_COUNT       : <==      Total: 1
2019-10-30 18:58:25.254 DEBUG 8752 --- [http-nio-8080-exec-8] c.p.dao.BlogMapper.selectBlogByTimeDesc  : ==>  Preparing: select * from blog Order By update_time Desc limit ?,? 
2019-10-30 18:58:25.254 DEBUG 8752 --- [http-nio-8080-exec-8] c.p.dao.BlogMapper.selectBlogByTimeDesc  : ==> Parameters: 0(Integer), 7(Integer)
2019-10-30 18:58:25.257 DEBUG 8752 --- [http-nio-8080-exec-8] c.p.dao.BlogMapper.selectBlogByTimeDesc  : <==      Total: 7
2019-10-30 18:58:25.258 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:25.258 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:25.259 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.261 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:25.262 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:25.263 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.264 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:25.265 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:25.266 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.268 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:25.269 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:58:25.270 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.271 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:25.271 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:25.272 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.275 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:25.275 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:25.277 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.278 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:25.279 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:25.281 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.282 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:25.283 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:25.283 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.285 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:25.285 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:25.287 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.288 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:25.288 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:25.289 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.291 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:25.291 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:25.292 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.294 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:25.294 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:58:25.295 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.297 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:25.297 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:25.298 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.300 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:25.300 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:25.301 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:25.303 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc 
2019-10-30 18:58:25.303 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 
2019-10-30 18:58:25.304 DEBUG 8752 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 9
2019-10-30 18:58:25.304  INFO 8752 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : types
2019-10-30 18:58:25.304  INFO 8752 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 57
2019-10-30 18:58:28.488  INFO 8752 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 18:58:28.498 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:28.498 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:28.499 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:28.502 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:28.502 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:28.503 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:28.506 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:28.506 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:28.507 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:28.528 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:28.528 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:58:28.530 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:28.531 DEBUG 8752 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:58:28.531 DEBUG 8752 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:58:28.532 DEBUG 8752 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:58:28.532 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 18:58:28.533 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:58:28.534 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 18:58:28.534 DEBUG 8752 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 18:58:28.535 DEBUG 8752 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 18:58:28.535 DEBUG 8752 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 18:58:28.536 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 18:58:28.537 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:58:28.538 DEBUG 8752 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 18:58:28.539 DEBUG 8752 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 18:58:28.539 DEBUG 8752 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 18:58:28.540 DEBUG 8752 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 18:58:28.540 DEBUG 8752 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 18:58:28.540 DEBUG 8752 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 18:58:28.541 DEBUG 8752 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 18:58:28.542  INFO 8752 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 18:58:28.542  INFO 8752 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 54
2019-10-30 18:58:32.822  INFO 8752 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeShowController.typesPage', args=[null, -1, {}]}
2019-10-30 18:58:32.822 DEBUG 8752 --- [http-nio-8080-exec-10] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 18:58:32.822 DEBUG 8752 --- [http-nio-8080-exec-10] c.p.d.B.selectBlogByTimeDesc_COUNT       : ==> Parameters: 
2019-10-30 18:58:32.823 DEBUG 8752 --- [http-nio-8080-exec-10] c.p.d.B.selectBlogByTimeDesc_COUNT       : <==      Total: 1
2019-10-30 18:58:32.824 DEBUG 8752 --- [http-nio-8080-exec-10] c.p.dao.BlogMapper.selectBlogByTimeDesc  : ==>  Preparing: select * from blog Order By update_time Desc limit ?,? 
2019-10-30 18:58:32.825 DEBUG 8752 --- [http-nio-8080-exec-10] c.p.dao.BlogMapper.selectBlogByTimeDesc  : ==> Parameters: 0(Integer), 7(Integer)
2019-10-30 18:58:32.830 DEBUG 8752 --- [http-nio-8080-exec-10] c.p.dao.BlogMapper.selectBlogByTimeDesc  : <==      Total: 7
2019-10-30 18:58:32.831 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:32.831 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:32.833 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.835 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:32.835 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:32.836 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.837 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:32.838 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:32.839 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.840 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:32.841 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:58:32.842 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.845 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:32.845 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:32.847 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.848 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:32.848 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:32.850 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.852 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:32.852 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:32.853 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.855 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:32.855 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:32.856 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.857 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:32.857 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:32.858 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.859 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:32.859 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:32.860 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.861 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:32.862 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:32.862 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.864 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:32.864 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:58:32.865 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.867 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 18:58:32.867 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 18:58:32.868 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.870 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:58:32.870 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:58:32.871 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:58:32.872 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc 
2019-10-30 18:58:32.873 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 
2019-10-30 18:58:32.874 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 9
2019-10-30 18:58:32.874  INFO 8752 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : types
2019-10-30 18:58:32.874  INFO 8752 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 52
2019-10-30 18:58:43.600  INFO 8752 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 18:58:43.602  INFO 8752 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 18:58:43.602  INFO 8752 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 2
2019-10-30 18:58:49.237  INFO 8752 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.userLogin', args=[pan, 123456, ModelAndView [view=[null]; model=null], org.apache.catalina.session.StandardSessionFacade@49753fe1]}
2019-10-30 18:58:49.250 DEBUG 8752 --- [http-nio-8080-exec-2] com.pan.dao.UserMapper.selectByExample   : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user WHERE ( username = ? ) 
2019-10-30 18:58:49.252 DEBUG 8752 --- [http-nio-8080-exec-2] com.pan.dao.UserMapper.selectByExample   : ==> Parameters: pan(String)
2019-10-30 18:58:49.254 DEBUG 8752 --- [http-nio-8080-exec-2] com.pan.dao.UserMapper.selectByExample   : <==      Total: 1
2019-10-30 18:58:49.256  INFO 8752 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : ModelAndView [view="redirect:/admin/index"; model=null]
2019-10-30 18:58:49.256  INFO 8752 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 19
2019-10-30 18:58:49.269  INFO 8752 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/index', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.AdminController.indexPage', args=[]}
2019-10-30 18:58:49.272  INFO 8752 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/index
2019-10-30 18:58:49.272  INFO 8752 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 3
2019-10-30 18:58:55.564  INFO 8752 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 18:58:55.573 DEBUG 8752 --- [http-nio-8080-exec-5] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:58:55.573 DEBUG 8752 --- [http-nio-8080-exec-5] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 18:58:55.574 DEBUG 8752 --- [http-nio-8080-exec-5] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 18:58:55.575 DEBUG 8752 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 18:58:55.575 DEBUG 8752 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:58:55.576 DEBUG 8752 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 9
2019-10-30 18:58:55.577  INFO 8752 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 18:58:55.577  INFO 8752 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 18:59:01.048  INFO 8752 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types/13/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.delete', args=[13, {}]}
2019-10-30 18:59:01.049 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.deleteByPrimaryKey  : ==>  Preparing: delete from type where id = ? 
2019-10-30 18:59:01.050 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.deleteByPrimaryKey  : ==> Parameters: 13(Integer)
2019-10-30 18:59:01.050 DEBUG 8752 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 18:59:01.052  INFO 8752 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : redirect:/admin/types
2019-10-30 18:59:01.053  INFO 8752 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 18:59:01.081  INFO 8752 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {message=删除成功}]}
2019-10-30 18:59:01.082 DEBUG 8752 --- [http-nio-8080-exec-4] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:59:01.082 DEBUG 8752 --- [http-nio-8080-exec-4] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 18:59:01.083 DEBUG 8752 --- [http-nio-8080-exec-4] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 18:59:01.084 DEBUG 8752 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 18:59:01.084 DEBUG 8752 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:59:01.085 DEBUG 8752 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 8
2019-10-30 18:59:01.085  INFO 8752 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 18:59:01.085  INFO 8752 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 18:59:02.548  INFO 8752 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types/12/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.delete', args=[12, {}]}
2019-10-30 18:59:02.549 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.deleteByPrimaryKey  : ==>  Preparing: delete from type where id = ? 
2019-10-30 18:59:02.549 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.deleteByPrimaryKey  : ==> Parameters: 12(Integer)
2019-10-30 18:59:02.550 DEBUG 8752 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 18:59:02.553  INFO 8752 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : redirect:/admin/types
2019-10-30 18:59:02.553  INFO 8752 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 18:59:02.556  INFO 8752 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {message=删除成功}]}
2019-10-30 18:59:02.557 DEBUG 8752 --- [http-nio-8080-exec-9] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 18:59:02.558 DEBUG 8752 --- [http-nio-8080-exec-9] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 18:59:02.558 DEBUG 8752 --- [http-nio-8080-exec-9] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 18:59:02.559 DEBUG 8752 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 18:59:02.560 DEBUG 8752 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:59:02.561 DEBUG 8752 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 7
2019-10-30 18:59:02.561  INFO 8752 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 18:59:02.562  INFO 8752 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 18:59:24.597  INFO 8752 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 18:59:24.601 DEBUG 8752 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 18:59:24.602 DEBUG 8752 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 18:59:24.602 DEBUG 8752 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 18:59:24.604 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 18:59:24.604 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 18:59:24.606 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 18:59:24.608 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:59:24.609 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:59:24.610 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:59:24.611 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:59:24.611 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 18:59:24.612 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:59:24.614 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:59:24.614 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:59:24.615 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:59:24.617 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:59:24.617 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:59:24.617 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:59:24.619 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:59:24.619 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:59:24.620 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:59:24.621 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:59:24.622 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:59:24.623 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:59:24.625 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 18:59:24.625 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 18:59:24.626 DEBUG 8752 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 18:59:24.628 DEBUG 8752 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 18:59:24.628 DEBUG 8752 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 18:59:24.629 DEBUG 8752 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 7
2019-10-30 18:59:24.630  INFO 8752 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 18:59:24.630  INFO 8752 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 33
2019-10-30 19:00:59.414  INFO 5768 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 5768 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 19:00:59.416 DEBUG 5768 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 19:00:59.417  INFO 5768 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 19:00:59.475  INFO 5768 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 19:00:59.476  INFO 5768 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 19:01:00.381  INFO 5768 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 19:01:00.425  INFO 5768 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 33ms. Found 0 repository interfaces.
2019-10-30 19:01:00.827  INFO 5768 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$414652fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 19:01:01.356  INFO 5768 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 19:01:01.459  INFO 5768 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 19:01:01.459  INFO 5768 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 19:01:01.590  INFO 5768 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 19:01:01.591  INFO 5768 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2114 ms
2019-10-30 19:01:01.746  INFO 5768 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 19:01:02.033  INFO 5768 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 19:01:03.359  INFO 5768 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 19:01:03.465  INFO 5768 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 19:01:04.259  INFO 5768 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 19:01:04.322  INFO 5768 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 19:01:04.324  INFO 5768 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.81 seconds (JVM running for 7.179)
2019-10-30 19:40:18.680  INFO 5768 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 19:40:18.680  INFO 5768 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 19:40:18.695  INFO 5768 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2019-10-30 19:40:18.725  INFO 5768 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 19:40:18.729  INFO 5768 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 19:40:18.729  INFO 5768 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 19:40:24.458  INFO 5768 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.userLogin', args=[pan, 123456, ModelAndView [view=[null]; model=null], org.apache.catalina.session.StandardSessionFacade@1bce50da]}
2019-10-30 19:40:24.627 DEBUG 5768 --- [http-nio-8080-exec-7] com.pan.dao.UserMapper.selectByExample   : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user WHERE ( username = ? ) 
2019-10-30 19:40:24.655 DEBUG 5768 --- [http-nio-8080-exec-7] com.pan.dao.UserMapper.selectByExample   : ==> Parameters: pan(String)
2019-10-30 19:40:24.682 DEBUG 5768 --- [http-nio-8080-exec-7] com.pan.dao.UserMapper.selectByExample   : <==      Total: 1
2019-10-30 19:40:24.686  INFO 5768 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : ModelAndView [view="redirect:/admin/index"; model=null]
2019-10-30 19:40:24.686  INFO 5768 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 228
2019-10-30 19:40:24.701  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/index', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.AdminController.indexPage', args=[]}
2019-10-30 19:40:24.704  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/index
2019-10-30 19:40:24.704  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 3
2019-10-30 19:40:26.457  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 19:40:26.490 DEBUG 5768 --- [http-nio-8080-exec-10] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 19:40:26.491 DEBUG 5768 --- [http-nio-8080-exec-10] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 19:40:26.492 DEBUG 5768 --- [http-nio-8080-exec-10] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 19:40:26.495 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 19:40:26.496 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:40:26.498 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 7
2019-10-30 19:40:26.499  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 19:40:26.500  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 43
2019-10-30 19:40:29.404  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types/7/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.delete', args=[7, {}]}
2019-10-30 19:40:29.406 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.deleteByPrimaryKey  : ==>  Preparing: delete from type where id = ? 
2019-10-30 19:40:29.406 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.deleteByPrimaryKey  : ==> Parameters: 7(Integer)
2019-10-30 19:40:29.407 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 19:40:29.411  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : redirect:/admin/types
2019-10-30 19:40:29.411  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 7
2019-10-30 19:40:29.419  INFO 5768 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {message=删除成功}]}
2019-10-30 19:40:29.421 DEBUG 5768 --- [http-nio-8080-exec-8] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 19:40:29.421 DEBUG 5768 --- [http-nio-8080-exec-8] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 19:40:29.422 DEBUG 5768 --- [http-nio-8080-exec-8] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 19:40:29.424 DEBUG 5768 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 19:40:29.424 DEBUG 5768 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:40:29.426 DEBUG 5768 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 19:40:29.427  INFO 5768 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 19:40:29.428  INFO 5768 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 9
2019-10-30 19:40:33.146  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types/1/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.delete', args=[1, {}]}
2019-10-30 19:40:33.147 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.deleteByPrimaryKey  : ==>  Preparing: delete from type where id = ? 
2019-10-30 19:40:33.147 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.deleteByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 19:40:33.147 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 19:40:33.151  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : redirect:/admin/types
2019-10-30 19:40:33.151  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 19:40:33.155  INFO 5768 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {message=删除成功}]}
2019-10-30 19:40:33.156 DEBUG 5768 --- [http-nio-8080-exec-9] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 19:40:33.157 DEBUG 5768 --- [http-nio-8080-exec-9] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 19:40:33.162 DEBUG 5768 --- [http-nio-8080-exec-9] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 19:40:33.163 DEBUG 5768 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 19:40:33.163 DEBUG 5768 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:40:33.166 DEBUG 5768 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:40:33.168  INFO 5768 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 19:40:33.168  INFO 5768 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 19:40:36.816  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:40:36.825 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:40:36.826 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:40:36.827 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:40:36.828 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:40:36.829 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:40:36.836 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 19:40:36.839 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:40:36.839 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:40:36.840 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:40:36.843 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:40:36.843 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:40:36.844 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:40:36.846 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:40:36.847 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:40:36.847 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:40:36.849 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:40:36.849 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:40:36.850 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:40:36.852 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:40:36.852 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:40:36.853 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:40:36.856 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:40:36.856 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:40:36.857 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:40:36.859 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:40:36.859 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:40:36.860 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:40:36.864 DEBUG 5768 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:40:36.864 DEBUG 5768 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:40:36.866 DEBUG 5768 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:40:36.867  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:40:36.867  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 51
2019-10-30 19:40:38.049  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 19:40:38.050 DEBUG 5768 --- [http-nio-8080-exec-6] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 19:40:38.051 DEBUG 5768 --- [http-nio-8080-exec-6] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 19:40:38.052 DEBUG 5768 --- [http-nio-8080-exec-6] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 19:40:38.054 DEBUG 5768 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 19:40:38.054 DEBUG 5768 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:40:38.063 DEBUG 5768 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:40:38.064  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 19:40:38.065  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 16
2019-10-30 19:42:05.413  INFO 5768 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:42:05.420 DEBUG 5768 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:42:05.421 DEBUG 5768 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:42:05.422 DEBUG 5768 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:42:05.424 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:42:05.424 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:42:05.429 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 19:42:05.431 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:05.431 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:42:05.432 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:05.435 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:05.435 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:42:05.438 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:05.440 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:05.440 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:05.442 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:05.444 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:05.444 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:05.445 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:05.446 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:05.446 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:05.447 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:05.449 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:05.449 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:05.449 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:05.451 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:05.451 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:05.452 DEBUG 5768 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:05.455 DEBUG 5768 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:42:05.455 DEBUG 5768 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:42:05.457 DEBUG 5768 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:42:05.458  INFO 5768 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:42:05.458  INFO 5768 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 45
2019-10-30 19:42:14.859  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , 2, 0, {}]}
2019-10-30 19:42:14.863 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:14.864 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:14.866 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:14.872 DEBUG 5768 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog WHERE typeid = ? 
2019-10-30 19:42:14.872 DEBUG 5768 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 2(Integer)
2019-10-30 19:42:14.873 DEBUG 5768 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:42:14.875 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog WHERE typeid = ? limit ?,? 
2019-10-30 19:42:14.876 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 2(Integer), 0(Integer), 10(Integer)
2019-10-30 19:42:14.882 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 5
2019-10-30 19:42:14.885 DEBUG 5768 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:42:14.885 DEBUG 5768 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:42:14.886 DEBUG 5768 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:42:14.887  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 19:42:14.887  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 28
2019-10-30 19:42:19.784  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , 2, 0, {}]}
2019-10-30 19:42:19.787 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:19.787 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:19.794 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:19.796 DEBUG 5768 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog WHERE typeid = ? 
2019-10-30 19:42:19.796 DEBUG 5768 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 2(Integer)
2019-10-30 19:42:19.797 DEBUG 5768 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:42:19.799 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog WHERE typeid = ? limit ?,? 
2019-10-30 19:42:19.799 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 2(Integer), 0(Integer), 10(Integer)
2019-10-30 19:42:19.801 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 5
2019-10-30 19:42:19.804 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:42:19.804 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:42:19.806 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:42:19.807  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 19:42:19.807  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 23
2019-10-30 19:42:20.358  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , 2, 0, {}]}
2019-10-30 19:42:20.359 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:20.360 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:20.362 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:20.363 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog WHERE typeid = ? 
2019-10-30 19:42:20.364 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 2(Integer)
2019-10-30 19:42:20.364 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:42:20.365 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog WHERE typeid = ? limit ?,? 
2019-10-30 19:42:20.366 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 2(Integer), 0(Integer), 10(Integer)
2019-10-30 19:42:20.367 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 5
2019-10-30 19:42:20.370 DEBUG 5768 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:42:20.370 DEBUG 5768 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:42:20.371 DEBUG 5768 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:42:20.372  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 19:42:20.373  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 19:42:20.512  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , 2, 0, {}]}
2019-10-30 19:42:20.513 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:20.513 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:20.514 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:20.516 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog WHERE typeid = ? 
2019-10-30 19:42:20.517 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 2(Integer)
2019-10-30 19:42:20.518 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:42:20.520 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog WHERE typeid = ? limit ?,? 
2019-10-30 19:42:20.520 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 2(Integer), 0(Integer), 10(Integer)
2019-10-30 19:42:20.523 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 5
2019-10-30 19:42:20.525 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:42:20.525 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:42:20.526 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:42:20.527  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 19:42:20.527  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 19:42:21.807  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , null, 0, {}]}
2019-10-30 19:42:21.808 DEBUG 5768 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:42:21.809 DEBUG 5768 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:42:21.810 DEBUG 5768 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:42:21.811 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:42:21.811 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:42:21.815 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 19:42:21.822 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:21.822 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:42:21.823 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:21.825 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:21.825 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:42:21.826 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:21.827 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:21.827 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:21.829 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:21.830 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:21.831 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:21.832 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:21.833 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:21.834 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:21.834 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:21.837 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:21.838 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:21.839 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:21.841 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:42:21.842 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:42:21.842 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:42:21.844 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:42:21.844 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:42:21.846 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:42:21.847  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 19:42:21.847  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 40
2019-10-30 19:42:42.619  INFO 5768 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.input', args=[{}]}
2019-10-30 19:42:42.625 DEBUG 5768 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 19:42:42.625 DEBUG 5768 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 19:42:42.627 DEBUG 5768 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 19:42:42.629 DEBUG 5768 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:42:42.629 DEBUG 5768 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:42:42.639 DEBUG 5768 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:42:42.640  INFO 5768 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 19:42:42.640  INFO 5768 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 21
2019-10-30 19:48:47.665  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=null, uid=null, typeid=null, tagids='1', title='spring事务传播行为', description='spring的七种传播行为', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='', recommend=null, createTime=null, updateTime=null, content='事务传播行为介绍

Spring中的7个事务传播行为:

事务行为	说明
PROPAGATION_REQUIRED	支持当前事务，假设当前没有事务。就新建一个事务
PROPAGATION_SUPPORTS	支持当前事务，假设当前没有事务，就以非事务方式运行
PROPAGATION_MANDATORY	支持当前事务，假设当前没有事务，就抛出异常
PROPAGATION_REQUIRES_NEW	新建事务，假设当前存在事务。把当前事务挂起
PROPAGATION_NOT_SUPPORTED	以非事务方式运行操作。假设当前存在事务，就把当前事务挂起
PROPAGATION_NEVER	以非事务方式运行，假设当前存在事务，则抛出异常
PROPAGATION_NESTED	如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。

Spring异常事务处理机制:

1、事务注解一般用在业务层

2、在业务逻辑中抛出的异常若是被try-catch了，事务是无法回滚的，所以正确的操作是在遇到异常场景需要回滚时，手动抛出RuntimeException(默认情况下Spring 中的事务处理只对RuntimeException 方法进行回滚，所以，如果
将Runtime Exception 替换成普通的Exception 不会产生回滚效果。 )

3、spring中的事务是以AOP为基础的，是应用代理模式实现的

4、Spring实现事务时，提取事务标签的顺序为：方法事务声明-->方法所在类事务声明-->接口方法事务声明-->接口方法所在类事务声明

5、对于事务处理，最重要的是要获取事务对应的属性，如果没有事务对应的属性值，事务将无从处理，事务的所有信息从创建事务开始就保存在transactionInfo中，包括事务回滚都要依赖该信息进行处理。

6、事务回滚处理(Spring处理异常事务机制）
(1)事务回滚条件

    Spring事务异常处理机制只会对RuntimeException 和Error 级别的异常执行回滚操作，执行具体回滚的函数如下：

   public boolean rollbackOn(Throwable ex) {
                return (ex instanceof RuntimeException || ex instanceof Error);
   }

  当然我们可以对上述两种类型的异常进行扩展处理，达到自己对指定常的回滚，并利用注解的方式实现

 @Transactional(rollbackFor =  xxxException.class)

(2)事务回滚处理 两步：

    触发器监听函数    

  执行真正的回滚操作，在执行回滚操作的时候要考虑是否有嵌套事务（根据       savePoint来判断，若有嵌套事务，则对嵌套事务单独进行回滚，不回滚外事务。）

(3) 回滚后的信息清除   无论事务是否回滚成功都必须执行

     设置事务状态为完成，避免事务重复执行

     如果当前事务是新的同步状态，则将事务信息从当前线程中清除掉

     释放事务占用的资源(数据库连接资源等)

    如果在当前事务事前有事务挂起，需要将挂起的事务恢复', type=Type{id=2, name='null', blogs=null}, tagIds='1'}, org.apache.catalina.session.StandardSessionFacade@1bce50da, {}]}
2019-10-30 19:48:47.684 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.BlogMapper.insertSelective   : ==>  Preparing: insert into blog ( uid, typeid, tagids, title, description, first_picture, views, published, flag, create_time, update_time, content ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-10-30 19:48:47.688 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.BlogMapper.insertSelective   : ==> Parameters: 2(Integer), 2(Integer), 1(String), spring事务传播行为(String), spring的七种传播行为(String), a(String), 0(Integer), 1(Integer), 原创(String), 2019-10-30 19:48:47.665(Timestamp), 2019-10-30 19:48:47.665(Timestamp), 事务传播行为介绍

Spring中的7个事务传播行为:

事务行为	说明
PROPAGATION_REQUIRED	支持当前事务，假设当前没有事务。就新建一个事务
PROPAGATION_SUPPORTS	支持当前事务，假设当前没有事务，就以非事务方式运行
PROPAGATION_MANDATORY	支持当前事务，假设当前没有事务，就抛出异常
PROPAGATION_REQUIRES_NEW	新建事务，假设当前存在事务。把当前事务挂起
PROPAGATION_NOT_SUPPORTED	以非事务方式运行操作。假设当前存在事务，就把当前事务挂起
PROPAGATION_NEVER	以非事务方式运行，假设当前存在事务，则抛出异常
PROPAGATION_NESTED	如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。

Spring异常事务处理机制:

1、事务注解一般用在业务层

2、在业务逻辑中抛出的异常若是被try-catch了，事务是无法回滚的，所以正确的操作是在遇到异常场景需要回滚时，手动抛出RuntimeException(默认情况下Spring 中的事务处理只对RuntimeException 方法进行回滚，所以，如果
将Runtime Exception 替换成普通的Exception 不会产生回滚效果。 )

3、spring中的事务是以AOP为基础的，是应用代理模式实现的

4、Spring实现事务时，提取事务标签的顺序为：方法事务声明-->方法所在类事务声明-->接口方法事务声明-->接口方法所在类事务声明

5、对于事务处理，最重要的是要获取事务对应的属性，如果没有事务对应的属性值，事务将无从处理，事务的所有信息从创建事务开始就保存在transactionInfo中，包括事务回滚都要依赖该信息进行处理。

6、事务回滚处理(Spring处理异常事务机制）
(1)事务回滚条件

    Spring事务异常处理机制只会对RuntimeException 和Error 级别的异常执行回滚操作，执行具体回滚的函数如下：

   public boolean rollbackOn(Throwable ex) {
                return (ex instanceof RuntimeException || ex instanceof Error);
   }

  当然我们可以对上述两种类型的异常进行扩展处理，达到自己对指定常的回滚，并利用注解的方式实现

 @Transactional(rollbackFor =  xxxException.class)

(2)事务回滚处理 两步：

    触发器监听函数    

  执行真正的回滚操作，在执行回滚操作的时候要考虑是否有嵌套事务（根据       savePoint来判断，若有嵌套事务，则对嵌套事务单独进行回滚，不回滚外事务。）

(3) 回滚后的信息清除   无论事务是否回滚成功都必须执行

     设置事务状态为完成，避免事务重复执行

     如果当前事务是新的同步状态，则将事务信息从当前线程中清除掉

     释放事务占用的资源(数据库连接资源等)

    如果在当前事务事前有事务挂起，需要将挂起的事务恢复(String)
2019-10-30 19:48:47.725 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.BlogMapper.insertSelective   : <==    Updates: 1
2019-10-30 19:48:47.729 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 19:48:47.730 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:48:47.730 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 19:48:47.731 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 19:48:47.731 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 5(Integer), 2(Integer)
2019-10-30 19:48:47.732 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 19:48:47.735 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 19:48:47.735 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 1(Integer)
2019-10-30 19:48:47.736 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 19:48:47.737 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 19:48:47.737 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: java(String), 1(Integer), 1(Integer)
2019-10-30 19:48:47.738 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 19:48:48.009  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 19:48:48.009  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 344
2019-10-30 19:48:48.019  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:48:48.020 DEBUG 5768 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:48:48.020 DEBUG 5768 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:48:48.021 DEBUG 5768 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:48:48.022 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:48:48.023 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:48:48.025 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 8
2019-10-30 19:48:48.027 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:48.027 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:48:48.027 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:48.029 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:48.029 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:48:48.030 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:48.031 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:48.032 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:48.034 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:48.035 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:48.036 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:48.037 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:48.039 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:48.039 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:48.040 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:48.041 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:48.041 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:48.042 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:48.043 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:48.043 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:48.044 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:48.045 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:48.045 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:48.045 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:48.047 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:48:48.047 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:48:48.048 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:48:48.049  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:48:48.049  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 30
2019-10-30 19:48:55.233  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/15/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[15, {}]}
2019-10-30 19:48:55.234 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 19:48:55.235 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 19:48:55.235 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 19:48:55.237 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:48:55.237 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:48:55.238 DEBUG 5768 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:48:55.239 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:48:55.239 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 19:48:55.240 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:55.242 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:55.242 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:55.243 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:55.245  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 19:48:55.245  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 12
2019-10-30 19:48:57.835  INFO 5768 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=15, uid=null, typeid=null, tagids='1', title='spring事务传播行为', description='spring的七种传播行为', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=null, createTime=null, updateTime=null, content='事务传播行为介绍

Spring中的7个事务传播行为:

事务行为	说明
PROPAGATION_REQUIRED	支持当前事务，假设当前没有事务。就新建一个事务
PROPAGATION_SUPPORTS	支持当前事务，假设当前没有事务，就以非事务方式运行
PROPAGATION_MANDATORY	支持当前事务，假设当前没有事务，就抛出异常
PROPAGATION_REQUIRES_NEW	新建事务，假设当前存在事务。把当前事务挂起
PROPAGATION_NOT_SUPPORTED	以非事务方式运行操作。假设当前存在事务，就把当前事务挂起
PROPAGATION_NEVER	以非事务方式运行，假设当前存在事务，则抛出异常
PROPAGATION_NESTED	如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。

Spring异常事务处理机制:

1、事务注解一般用在业务层

2、在业务逻辑中抛出的异常若是被try-catch了，事务是无法回滚的，所以正确的操作是在遇到异常场景需要回滚时，手动抛出RuntimeException(默认情况下Spring 中的事务处理只对RuntimeException 方法进行回滚，所以，如果
将Runtime Exception 替换成普通的Exception 不会产生回滚效果。 )

3、spring中的事务是以AOP为基础的，是应用代理模式实现的

4、Spring实现事务时，提取事务标签的顺序为：方法事务声明-->方法所在类事务声明-->接口方法事务声明-->接口方法所在类事务声明

5、对于事务处理，最重要的是要获取事务对应的属性，如果没有事务对应的属性值，事务将无从处理，事务的所有信息从创建事务开始就保存在transactionInfo中，包括事务回滚都要依赖该信息进行处理。

6、事务回滚处理(Spring处理异常事务机制）
(1)事务回滚条件

    Spring事务异常处理机制只会对RuntimeException 和Error 级别的异常执行回滚操作，执行具体回滚的函数如下：

   public boolean rollbackOn(Throwable ex) {
                return (ex instanceof RuntimeException || ex instanceof Error);
   }

  当然我们可以对上述两种类型的异常进行扩展处理，达到自己对指定常的回滚，并利用注解的方式实现

 @Transactional(rollbackFor =  xxxException.class)

(2)事务回滚处理 两步：

    触发器监听函数    

  执行真正的回滚操作，在执行回滚操作的时候要考虑是否有嵌套事务（根据       savePoint来判断，若有嵌套事务，则对嵌套事务单独进行回滚，不回滚外事务。）

(3) 回滚后的信息清除   无论事务是否回滚成功都必须执行

     设置事务状态为完成，避免事务重复执行

     如果当前事务是新的同步状态，则将事务信息从当前线程中清除掉

     释放事务占用的资源(数据库连接资源等)

    如果在当前事务事前有事务挂起，需要将挂起的事务恢复', type=Type{id=2, name='null', blogs=null}, tagIds='1'}, org.apache.catalina.session.StandardSessionFacade@1bce50da, {}]}
2019-10-30 19:48:57.836 DEBUG 5768 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:48:57.836 DEBUG 5768 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 19:48:57.837 DEBUG 5768 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:57.840 DEBUG 5768 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:48:57.840 DEBUG 5768 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 19:48:57.841 DEBUG 5768 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:57.841 DEBUG 5768 --- [http-nio-8080-exec-2] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 19:48:57.843 DEBUG 5768 --- [http-nio-8080-exec-2] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 2(Integer), 1(String), spring事务传播行为(String), spring的七种传播行为(String), a(String), 0(Integer), 1(Integer), 原创(String), 2019-10-30 19:48:57.835(Timestamp), 2019-10-30 19:48:57.835(Timestamp), 事务传播行为介绍

Spring中的7个事务传播行为:

事务行为	说明
PROPAGATION_REQUIRED	支持当前事务，假设当前没有事务。就新建一个事务
PROPAGATION_SUPPORTS	支持当前事务，假设当前没有事务，就以非事务方式运行
PROPAGATION_MANDATORY	支持当前事务，假设当前没有事务，就抛出异常
PROPAGATION_REQUIRES_NEW	新建事务，假设当前存在事务。把当前事务挂起
PROPAGATION_NOT_SUPPORTED	以非事务方式运行操作。假设当前存在事务，就把当前事务挂起
PROPAGATION_NEVER	以非事务方式运行，假设当前存在事务，则抛出异常
PROPAGATION_NESTED	如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。

Spring异常事务处理机制:

1、事务注解一般用在业务层

2、在业务逻辑中抛出的异常若是被try-catch了，事务是无法回滚的，所以正确的操作是在遇到异常场景需要回滚时，手动抛出RuntimeException(默认情况下Spring 中的事务处理只对RuntimeException 方法进行回滚，所以，如果
将Runtime Exception 替换成普通的Exception 不会产生回滚效果。 )

3、spring中的事务是以AOP为基础的，是应用代理模式实现的

4、Spring实现事务时，提取事务标签的顺序为：方法事务声明-->方法所在类事务声明-->接口方法事务声明-->接口方法所在类事务声明

5、对于事务处理，最重要的是要获取事务对应的属性，如果没有事务对应的属性值，事务将无从处理，事务的所有信息从创建事务开始就保存在transactionInfo中，包括事务回滚都要依赖该信息进行处理。

6、事务回滚处理(Spring处理异常事务机制）
(1)事务回滚条件

    Spring事务异常处理机制只会对RuntimeException 和Error 级别的异常执行回滚操作，执行具体回滚的函数如下：

   public boolean rollbackOn(Throwable ex) {
                return (ex instanceof RuntimeException || ex instanceof Error);
   }

  当然我们可以对上述两种类型的异常进行扩展处理，达到自己对指定常的回滚，并利用注解的方式实现

 @Transactional(rollbackFor =  xxxException.class)

(2)事务回滚处理 两步：

    触发器监听函数    

  执行真正的回滚操作，在执行回滚操作的时候要考虑是否有嵌套事务（根据       savePoint来判断，若有嵌套事务，则对嵌套事务单独进行回滚，不回滚外事务。）

(3) 回滚后的信息清除   无论事务是否回滚成功都必须执行

     设置事务状态为完成，避免事务重复执行

     如果当前事务是新的同步状态，则将事务信息从当前线程中清除掉

     释放事务占用的资源(数据库连接资源等)

    如果在当前事务事前有事务挂起，需要将挂起的事务恢复(String), 15(Integer)
2019-10-30 19:48:57.844 DEBUG 5768 --- [http-nio-8080-exec-2] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 19:48:57.920  INFO 5768 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 19:48:57.920  INFO 5768 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 85
2019-10-30 19:48:57.924  INFO 5768 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:48:57.924 DEBUG 5768 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:48:57.924 DEBUG 5768 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:48:57.926 DEBUG 5768 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:48:57.928 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:48:57.928 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:48:57.929 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 8
2019-10-30 19:48:57.931 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:57.931 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:48:57.933 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:57.935 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:57.935 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:48:57.936 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:57.939 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:57.939 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:57.940 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:57.941 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:57.941 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:57.942 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:57.944 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:57.944 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:57.945 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:57.946 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:57.946 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:57.946 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:57.947 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:57.948 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:57.948 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:57.949 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:48:57.949 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:48:57.950 DEBUG 5768 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:48:57.951 DEBUG 5768 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:48:57.952 DEBUG 5768 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:48:57.952 DEBUG 5768 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:48:57.954  INFO 5768 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:48:57.954  INFO 5768 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 30
2019-10-30 19:48:59.118  INFO 5768 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {}]}
2019-10-30 19:48:59.123 DEBUG 5768 --- [http-nio-8080-exec-7] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 19:48:59.123 DEBUG 5768 --- [http-nio-8080-exec-7] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 19:48:59.124 DEBUG 5768 --- [http-nio-8080-exec-7] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 19:48:59.125 DEBUG 5768 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 19:48:59.126 DEBUG 5768 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:48:59.127 DEBUG 5768 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 19:48:59.128  INFO 5768 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 19:48:59.128  INFO 5768 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 10
2019-10-30 19:49:03.346  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.toInputPage', args=[{}]}
2019-10-30 19:49:03.347  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/tags-input
2019-10-30 19:49:03.347  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 1
2019-10-30 19:49:09.339  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 19:49:09.339 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 19:49:09.340 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 19:49:09.340 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 19:49:09.341 DEBUG 5768 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 19:49:09.341 DEBUG 5768 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:49:09.342 DEBUG 5768 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:49:09.343  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 19:49:09.343  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 19:49:10.563  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {}]}
2019-10-30 19:49:10.563 DEBUG 5768 --- [http-nio-8080-exec-5] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 19:49:10.564 DEBUG 5768 --- [http-nio-8080-exec-5] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 19:49:10.565 DEBUG 5768 --- [http-nio-8080-exec-5] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 19:49:10.565 DEBUG 5768 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 19:49:10.566 DEBUG 5768 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:49:10.568 DEBUG 5768 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 19:49:10.569  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 19:49:10.569  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 19:49:12.834  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.toInputPage', args=[{}]}
2019-10-30 19:49:12.835  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/tags-input
2019-10-30 19:49:12.835  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 1
2019-10-30 19:49:19.369  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.addTag', args=[Tag{id=null, name='spring', blogs=null}, {}]}
2019-10-30 19:49:19.371 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag WHERE ( name = ? ) 
2019-10-30 19:49:19.371 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: spring(String)
2019-10-30 19:49:19.372 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : <==      Total: 0
2019-10-30 19:49:19.373 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.insertSelective    : ==>  Preparing: insert into tag ( name ) values ( ? ) 
2019-10-30 19:49:19.373 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.insertSelective    : ==> Parameters: spring(String)
2019-10-30 19:49:19.376 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.insertSelective    : <==    Updates: 1
2019-10-30 19:49:19.383  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : redirect:/admin/tags
2019-10-30 19:49:19.383  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 14
2019-10-30 19:49:19.386  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {message=新增成功}]}
2019-10-30 19:49:19.387 DEBUG 5768 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 19:49:19.387 DEBUG 5768 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 19:49:19.387 DEBUG 5768 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 19:49:19.388 DEBUG 5768 --- [http-nio-8080-exec-6] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 19:49:19.388 DEBUG 5768 --- [http-nio-8080-exec-6] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:49:19.389 DEBUG 5768 --- [http-nio-8080-exec-6] com.pan.dao.TagMapper.selectByExample    : <==      Total: 5
2019-10-30 19:49:19.390  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 19:49:19.390  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 19:49:21.231  INFO 5768 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 19:49:21.232 DEBUG 5768 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 19:49:21.232 DEBUG 5768 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 19:49:21.233 DEBUG 5768 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 19:49:21.235 DEBUG 5768 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 19:49:21.235 DEBUG 5768 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:49:21.236 DEBUG 5768 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:49:21.237  INFO 5768 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 19:49:21.237  INFO 5768 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 19:49:22.801  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:49:22.802 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:49:22.803 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:49:22.804 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:49:22.805 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:49:22.805 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:49:22.807 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 8
2019-10-30 19:49:22.809 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:22.809 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:49:22.810 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:22.811 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:22.811 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:49:22.813 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:22.814 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:22.814 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:49:22.815 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:22.816 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:22.816 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:49:22.817 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:22.818 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:22.818 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:49:22.819 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:22.820 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:22.821 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:49:22.822 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:22.824 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:22.824 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:49:22.825 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:22.827 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:22.827 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:49:22.827 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:22.830 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:49:22.830 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:49:22.831 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:49:22.832  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:49:22.832  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 31
2019-10-30 19:49:26.691  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 19:49:26.726 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 19:49:26.726 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:49:26.727 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:26.728 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:26.728 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:49:26.729 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:26.731 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 19:49:26.731 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 19:49:26.732 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:26.735 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:26.735 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:49:26.736 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:26.738 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 19:49:26.738 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 19:49:26.739 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:26.740 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:26.741 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:49:26.741 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:26.744 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 19:49:26.744 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 19:49:26.745 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 19:49:26.745 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 19:49:26.746 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 19:49:26.746 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 19:49:26.748 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 19:49:26.748 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 19:49:26.749 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 19:49:26.750 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 19:49:26.750 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:49:26.752 DEBUG 5768 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 19:49:26.756 DEBUG 5768 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 19:49:26.756 DEBUG 5768 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 19:49:26.756 DEBUG 5768 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 19:49:26.757 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 19:49:26.757 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 19:49:26.758 DEBUG 5768 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 19:49:26.759  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 19:49:26.759  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 69
2019-10-30 19:49:32.739  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/15', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[15, {}]}
2019-10-30 19:49:32.740 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:49:32.740 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 19:49:32.741 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:32.801 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:49:32.802 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:49:32.803 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:32.804 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 19:49:32.804 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:49:32.805 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:49:32.806 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 19:49:32.807 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 19:49:32.807 DEBUG 5768 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 19:49:32.808  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 19:49:32.808  INFO 5768 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 69
2019-10-30 19:49:32.934 ERROR 5768 --- [http-nio-8080-exec-6] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 19:49:32.935  WARN 5768 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 19:50:21.249  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/15/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[15, {}]}
2019-10-30 19:50:21.251 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 19:50:21.251 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 19:50:21.252 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : <==      Total: 5
2019-10-30 19:50:21.255 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:50:21.255 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:50:21.257 DEBUG 5768 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:50:21.258 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:50:21.258 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 19:50:21.260 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:50:21.261 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:50:21.261 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:50:21.262 DEBUG 5768 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:50:21.263  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 19:50:21.263  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 14
2019-10-30 19:51:14.778  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=15, uid=null, typeid=null, tagids='1', title='spring事务传播行为', description='spring的七种传播行为', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=null, createTime=null, updateTime=null, content='事务传播行为介绍

Spring中的7个事务传播行为:

事务行为	说明
PROPAGATION_REQUIRED	支持当前事务，假设当前没有事务。就新建一个事务
PROPAGATION_SUPPORTS	支持当前事务，假设当前没有事务，就以非事务方式运行
PROPAGATION_MANDATORY	支持当前事务，假设当前没有事务，就抛出异常
PROPAGATION_REQUIRES_NEW	新建事务，假设当前存在事务。把当前事务挂起
PROPAGATION_NOT_SUPPORTED	以非事务方式运行操作。假设当前存在事务，就把当前事务挂起
PROPAGATION_NEVER	以非事务方式运行，假设当前存在事务，则抛出异常
PROPAGATION_NESTED	如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。

Spring异常事务处理机制:

1、事务注解一般用在业务层

2、在业务逻辑中抛出的异常若是被try-catch了，事务是无法回滚的，所以正确的操作是在遇到异常场景需要回滚时，手动抛出RuntimeException(默认情况下Spring 中的事务处理只对RuntimeException 方法进行回滚，所以，如果
将Runtime Exception 替换成普通的Exception 不会产生回滚效果。 )

3、spring中的事务是以AOP为基础的，是应用代理模式实现的

4、Spring实现事务时，提取事务标签的顺序为：方法事务声明-->方法所在类事务声明-->接口方法事务声明-->接口方法所在类事务声明

5、对于事务处理，最重要的是要获取事务对应的属性，如果没有事务对应的属性值，事务将无从处理，事务的所有信息从创建事务开始就保存在transactionInfo中，包括事务回滚都要依赖该信息进行处理。

6、事务回滚处理(Spring处理异常事务机制）
```
(1)事务回滚条件

    Spring事务异常处理机制只会对RuntimeException 和Error 级别的异常执行回滚操作，执行具体回滚的函数如下：

   public boolean rollbackOn(Throwable ex) {
                return (ex instanceof RuntimeException || ex instanceof Error);
   }

  当然我们可以对上述两种类型的异常进行扩展处理，达到自己对指定常的回滚，并利用注解的方式实现

 @Transactional(rollbackFor =  xxxException.class)

(2)事务回滚处理 两步：

    触发器监听函数    

  执行真正的回滚操作，在执行回滚操作的时候要考虑是否有嵌套事务（根据       savePoint来判断，若有嵌套事务，则对嵌套事务单独进行回滚，不回滚外事务。）

(3) 回滚后的信息清除   无论事务是否回滚成功都必须执行

     设置事务状态为完成，避免事务重复执行

     如果当前事务是新的同步状态，则将事务信息从当前线程中清除掉

     释放事务占用的资源(数据库连接资源等)

    如果在当前事务事前有事务挂起，需要将挂起的事务恢复
```

 @', type=Type{id=2, name='null', blogs=null}, tagIds='1'}, org.apache.catalina.session.StandardSessionFacade@1bce50da, {}]}
2019-10-30 19:51:14.779 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:51:14.779 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 19:51:14.780 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:14.782 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:51:14.782 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 19:51:14.783 DEBUG 5768 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:14.785 DEBUG 5768 --- [http-nio-8080-exec-10] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 19:51:14.786 DEBUG 5768 --- [http-nio-8080-exec-10] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 2(Integer), 1(String), spring事务传播行为(String), spring的七种传播行为(String), a(String), 0(Integer), 1(Integer), 原创(String), 2019-10-30 19:51:14.778(Timestamp), 2019-10-30 19:51:14.778(Timestamp), 事务传播行为介绍

Spring中的7个事务传播行为:

事务行为	说明
PROPAGATION_REQUIRED	支持当前事务，假设当前没有事务。就新建一个事务
PROPAGATION_SUPPORTS	支持当前事务，假设当前没有事务，就以非事务方式运行
PROPAGATION_MANDATORY	支持当前事务，假设当前没有事务，就抛出异常
PROPAGATION_REQUIRES_NEW	新建事务，假设当前存在事务。把当前事务挂起
PROPAGATION_NOT_SUPPORTED	以非事务方式运行操作。假设当前存在事务，就把当前事务挂起
PROPAGATION_NEVER	以非事务方式运行，假设当前存在事务，则抛出异常
PROPAGATION_NESTED	如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。

Spring异常事务处理机制:

1、事务注解一般用在业务层

2、在业务逻辑中抛出的异常若是被try-catch了，事务是无法回滚的，所以正确的操作是在遇到异常场景需要回滚时，手动抛出RuntimeException(默认情况下Spring 中的事务处理只对RuntimeException 方法进行回滚，所以，如果
将Runtime Exception 替换成普通的Exception 不会产生回滚效果。 )

3、spring中的事务是以AOP为基础的，是应用代理模式实现的

4、Spring实现事务时，提取事务标签的顺序为：方法事务声明-->方法所在类事务声明-->接口方法事务声明-->接口方法所在类事务声明

5、对于事务处理，最重要的是要获取事务对应的属性，如果没有事务对应的属性值，事务将无从处理，事务的所有信息从创建事务开始就保存在transactionInfo中，包括事务回滚都要依赖该信息进行处理。

6、事务回滚处理(Spring处理异常事务机制）
```
(1)事务回滚条件

    Spring事务异常处理机制只会对RuntimeException 和Error 级别的异常执行回滚操作，执行具体回滚的函数如下：

   public boolean rollbackOn(Throwable ex) {
                return (ex instanceof RuntimeException || ex instanceof Error);
   }

  当然我们可以对上述两种类型的异常进行扩展处理，达到自己对指定常的回滚，并利用注解的方式实现

 @Transactional(rollbackFor =  xxxException.class)

(2)事务回滚处理 两步：

    触发器监听函数    

  执行真正的回滚操作，在执行回滚操作的时候要考虑是否有嵌套事务（根据       savePoint来判断，若有嵌套事务，则对嵌套事务单独进行回滚，不回滚外事务。）

(3) 回滚后的信息清除   无论事务是否回滚成功都必须执行

     设置事务状态为完成，避免事务重复执行

     如果当前事务是新的同步状态，则将事务信息从当前线程中清除掉

     释放事务占用的资源(数据库连接资源等)

    如果在当前事务事前有事务挂起，需要将挂起的事务恢复
```

 @(String), 15(Integer)
2019-10-30 19:51:14.787 DEBUG 5768 --- [http-nio-8080-exec-10] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 19:51:14.914  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 19:51:14.914  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 137
2019-10-30 19:51:14.919  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:51:14.920 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:51:14.920 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:51:14.920 DEBUG 5768 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:51:14.921 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:51:14.922 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:51:14.924 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 8
2019-10-30 19:51:14.926 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:51:14.926 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:51:14.926 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:14.928 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:51:14.928 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:51:14.928 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:14.930 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:51:14.930 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:51:14.932 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:14.934 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:51:14.934 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:51:14.934 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:14.935 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:51:14.935 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:51:14.936 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:14.937 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:51:14.938 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:51:14.938 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:14.940 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:51:14.940 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:51:14.941 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:14.943 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:51:14.943 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:51:14.944 DEBUG 5768 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:14.945 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:51:14.945 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:51:14.946 DEBUG 5768 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:51:14.947  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:51:14.947  INFO 5768 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 28
2019-10-30 19:51:17.017  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/15', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[15, {}]}
2019-10-30 19:51:17.018 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:51:17.018 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 19:51:17.019 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:17.022 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:51:17.022 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:51:17.023 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:17.024 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 19:51:17.025 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:51:17.026 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:51:17.027 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 19:51:17.027 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 19:51:17.028 DEBUG 5768 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 19:51:17.028  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 19:51:17.028  INFO 5768 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 11
2019-10-30 19:51:17.080 ERROR 5768 --- [http-nio-8080-exec-4] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 19:51:17.081  WARN 5768 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 19:52:09.922  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/file-upload', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.FileUploadController.toFileUploadPage', args=[{}]}
2019-10-30 19:52:09.926  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/file-upload
2019-10-30 19:52:09.926  INFO 5768 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 19:52:20.178  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/fileupload', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.FileUploadController.fileUpload', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@9bb2e7a, {}]}
2019-10-30 19:52:20.212  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/file-upload
2019-10-30 19:52:20.212  INFO 5768 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 34
2019-10-30 19:52:38.928  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/fileupload', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.FileUploadController.fileUpload', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5780048b, {}]}
2019-10-30 19:52:38.934 ERROR 5768 --- [http-nio-8080-exec-4] c.g.t.f.domain.conn.ConnectionManager    : Unable to borrow buffer from pool

com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:166)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:109)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:67)
	at com.pan.util.FastdfsClientUtil.upload(FastdfsClientUtil.java:45)
	at com.pan.controller.FileUploadController.fileUpload(FileUploadController.java:30)
	at com.pan.controller.FileUploadController$$FastClassBySpringCGLIB$$81bf60d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.FileUploadController$$EnhancerBySpringCGLIB$$60382663.fileUpload(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 19:52:38.935  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/file-upload
2019-10-30 19:52:38.935  INFO 5768 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 7
2019-10-30 19:55:51.803  INFO 17536 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 17536 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 19:55:51.806 DEBUG 17536 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 19:55:51.806  INFO 17536 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 19:55:51.917  INFO 17536 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 19:55:51.917  INFO 17536 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 19:55:52.875  INFO 17536 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 19:55:52.918  INFO 17536 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
2019-10-30 19:55:53.430  INFO 17536 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$10321b1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 19:55:53.937  INFO 17536 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 19:55:54.017  INFO 17536 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 19:55:54.017  INFO 17536 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 19:55:54.134  INFO 17536 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 19:55:54.134  INFO 17536 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2217 ms
2019-10-30 19:55:54.302  INFO 17536 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 19:55:54.593  INFO 17536 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 19:55:56.007  INFO 17536 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 19:55:56.107  INFO 17536 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 19:55:56.972  INFO 17536 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 19:55:57.038  INFO 17536 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 19:55:57.040  INFO 17536 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.929 seconds (JVM running for 7.045)
2019-10-30 19:56:05.695  INFO 17536 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 19:56:05.695  INFO 17536 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 19:56:05.711  INFO 17536 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2019-10-30 19:56:05.746  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 19:56:05.981 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 19:56:06.011 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:06.040 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:06.046 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:06.046 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:06.047 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:06.049 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 19:56:06.049 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 19:56:06.051 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:06.053 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:06.053 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:06.054 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:06.056 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 19:56:06.056 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 19:56:06.058 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:06.060 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:06.060 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:56:06.061 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:06.100 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 19:56:06.100 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 19:56:06.101 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 19:56:06.104 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 19:56:06.105 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 19:56:06.107 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 19:56:06.111 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 19:56:06.111 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 19:56:06.113 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 19:56:06.114 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 19:56:06.114 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:56:06.116 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 19:56:06.127 DEBUG 17536 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 19:56:06.128 DEBUG 17536 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 19:56:06.130 DEBUG 17536 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 19:56:06.133 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 19:56:06.133 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 19:56:06.135 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 6
2019-10-30 19:56:06.136  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 19:56:06.136  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 393
2019-10-30 19:56:11.059  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 19:56:11.067  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 19:56:11.067  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 19:56:16.465  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.userLogin', args=[pan, 123456, ModelAndView [view=[null]; model=null], org.apache.catalina.session.StandardSessionFacade@5afd86c2]}
2019-10-30 19:56:16.479 DEBUG 17536 --- [http-nio-8080-exec-5] com.pan.dao.UserMapper.selectByExample   : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user WHERE ( username = ? ) 
2019-10-30 19:56:16.480 DEBUG 17536 --- [http-nio-8080-exec-5] com.pan.dao.UserMapper.selectByExample   : ==> Parameters: pan(String)
2019-10-30 19:56:16.482 DEBUG 17536 --- [http-nio-8080-exec-5] com.pan.dao.UserMapper.selectByExample   : <==      Total: 1
2019-10-30 19:56:16.484  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : ModelAndView [view="redirect:/admin/index"; model=null]
2019-10-30 19:56:16.484  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 19
2019-10-30 19:56:16.498  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/index', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.AdminController.indexPage', args=[]}
2019-10-30 19:56:16.502  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/index
2019-10-30 19:56:16.502  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 19:56:19.432  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:56:19.436 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:56:19.436 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:56:19.437 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:56:19.439 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:56:19.439 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:56:19.447 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 8
2019-10-30 19:56:19.450 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:19.451 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:56:19.453 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:19.456 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:19.457 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:56:19.458 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:19.460 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:19.460 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:19.461 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:19.463 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:19.464 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:19.465 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:19.466 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:19.467 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:19.468 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:19.470 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:19.471 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:19.472 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:19.474 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:19.474 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:19.475 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:19.477 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:19.477 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:19.479 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:19.481 DEBUG 17536 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:56:19.481 DEBUG 17536 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:56:19.482 DEBUG 17536 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:56:19.488  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:56:19.488  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 56
2019-10-30 19:56:20.695  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/file-upload', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.FileUploadController.toFileUploadPage', args=[{}]}
2019-10-30 19:56:20.698  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/file-upload
2019-10-30 19:56:20.699  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 19:56:24.513  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/fileupload', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.FileUploadController.fileUpload', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6a4fbf7e, {}]}
2019-10-30 19:56:24.874  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/file-upload
2019-10-30 19:56:24.874  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 361
2019-10-30 19:56:44.575  INFO 17536 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:56:44.576 DEBUG 17536 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:56:44.577 DEBUG 17536 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:56:44.577 DEBUG 17536 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:56:44.579 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:56:44.579 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:56:44.585 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 8
2019-10-30 19:56:44.587 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:44.588 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:56:44.589 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:44.591 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:44.592 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:56:44.593 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:44.595 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:44.596 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:44.596 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:44.599 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:44.599 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:44.600 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:44.602 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:44.603 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:44.604 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:44.606 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:44.606 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:44.607 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:44.608 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:44.609 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:44.609 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:44.611 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:44.611 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:44.612 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:44.614 DEBUG 17536 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:56:44.615 DEBUG 17536 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:56:44.616 DEBUG 17536 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:56:44.617  INFO 17536 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:56:44.617  INFO 17536 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 42
2019-10-30 19:56:56.133  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/2/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[2, {}]}
2019-10-30 19:56:56.135 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:56:56.136 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:56.143 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:56.146 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 19:56:56.146 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 5(Integer)
2019-10-30 19:56:56.147 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 19:56:56.148 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 19:56:56.148 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 开发过程(String), 1(Integer), 5(Integer)
2019-10-30 19:56:56.149 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 19:56:56.152 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 19:56:56.152 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 3(Integer)
2019-10-30 19:56:56.153 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 19:56:56.154 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 19:56:56.154 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: c++(String), 0(Integer), 3(Integer)
2019-10-30 19:56:56.156 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 19:56:56.157 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 19:56:56.157 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 4(Integer)
2019-10-30 19:56:56.159 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 19:56:56.160 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 19:56:56.160 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: 傻逼(String), 0(Integer), 4(Integer)
2019-10-30 19:56:56.161 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 19:56:56.162 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 19:56:56.162 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:56.163 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 19:56:56.186  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 19:56:56.186  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 53
2019-10-30 19:56:56.196  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:56:56.197 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:56:56.197 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:56:56.198 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:56:56.199 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:56:56.199 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:56:56.202 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 19:56:56.204 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:56.204 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 19:56:56.205 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:56.206 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:56.206 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:56.208 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:56.210 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:56.210 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:56.211 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:56.213 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:56.213 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:56.214 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:56.215 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:56.216 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:56.217 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:56.218 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:56.218 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:56.219 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:56.220 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:56.221 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:56.221 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:56.223 DEBUG 17536 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:56:56.224 DEBUG 17536 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:56:56.225 DEBUG 17536 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:56:56.226  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:56:56.226  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 30
2019-10-30 19:56:58.582  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/1/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[1, {}]}
2019-10-30 19:56:58.583 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:56:58.584 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 19:56:58.585 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:58.587 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 19:56:58.587 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 5(Integer)
2019-10-30 19:56:58.588 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 19:56:58.588 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 19:56:58.588 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 开发过程(String), 0(Integer), 5(Integer)
2019-10-30 19:56:58.589 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 19:56:58.594 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 19:56:58.594 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 1(Integer)
2019-10-30 19:56:58.595 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 19:56:58.596 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 19:56:58.596 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: java(String), 0(Integer), 1(Integer)
2019-10-30 19:56:58.598 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 19:56:58.599 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 19:56:58.599 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 19:56:58.599 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 19:56:58.663  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 19:56:58.663  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 81
2019-10-30 19:56:58.668  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:56:58.669 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:56:58.669 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:56:58.670 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:56:58.671 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:56:58.672 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:56:58.674 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 6
2019-10-30 19:56:58.677 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:58.677 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:58.678 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:58.680 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:58.680 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:58.681 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:58.682 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:58.682 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:58.683 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:58.685 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:58.685 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:58.686 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:58.687 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:58.687 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:58.688 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:58.690 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:58.691 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:58.691 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:58.693 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:56:58.693 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:56:58.694 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:56:58.695  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:56:58.695  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 27
2019-10-30 19:56:59.241  INFO 17536 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/4/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[4, {}]}
2019-10-30 19:56:59.242 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:56:59.243 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 4(Integer)
2019-10-30 19:56:59.244 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:59.246 DEBUG 17536 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 19:56:59.246 DEBUG 17536 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.247 DEBUG 17536 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 19:56:59.247 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 19:56:59.247 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 4(Integer), 2(Integer)
2019-10-30 19:56:59.273 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 19:56:59.276 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 19:56:59.277 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.278 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 19:56:59.278 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 19:56:59.279 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: c(String), 3(Integer), 2(Integer)
2019-10-30 19:56:59.280 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 19:56:59.281 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 19:56:59.281 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 4(Integer)
2019-10-30 19:56:59.281 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 19:56:59.301  INFO 17536 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 19:56:59.301  INFO 17536 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 60
2019-10-30 19:56:59.304  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:56:59.305 DEBUG 17536 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:56:59.306 DEBUG 17536 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:56:59.306 DEBUG 17536 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:56:59.308 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:56:59.308 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:56:59.310 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 5
2019-10-30 19:56:59.311 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:59.311 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.312 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:59.313 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:59.314 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.314 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:59.316 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:59.316 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.317 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:59.319 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:59.319 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.320 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:59.321 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:59.322 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.322 DEBUG 17536 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:59.324 DEBUG 17536 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:56:59.325 DEBUG 17536 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:56:59.326 DEBUG 17536 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:56:59.326  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:56:59.326  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 22
2019-10-30 19:56:59.951  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/8/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[8, {}]}
2019-10-30 19:56:59.952 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:56:59.952 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 8(Integer)
2019-10-30 19:56:59.953 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:59.956 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 19:56:59.956 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.957 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 19:56:59.957 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 19:56:59.957 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 3(Integer), 2(Integer)
2019-10-30 19:56:59.958 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 19:56:59.963 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 19:56:59.963 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.963 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 19:56:59.964 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 19:56:59.964 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: c(String), 2(Integer), 2(Integer)
2019-10-30 19:56:59.965 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 19:56:59.966 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 19:56:59.966 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 8(Integer)
2019-10-30 19:56:59.967 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 19:56:59.980  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 19:56:59.980  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 29
2019-10-30 19:56:59.984  INFO 17536 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:56:59.985 DEBUG 17536 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:56:59.985 DEBUG 17536 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:56:59.985 DEBUG 17536 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:56:59.987 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:56:59.987 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:56:59.989 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 4
2019-10-30 19:56:59.991 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:59.991 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.992 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:59.993 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:59.994 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.994 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:59.996 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:59.996 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.997 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:56:59.998 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:56:59.998 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:56:59.999 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:00.001 DEBUG 17536 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:57:00.002 DEBUG 17536 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:57:00.002 DEBUG 17536 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:57:00.004  INFO 17536 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:57:00.004  INFO 17536 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 20
2019-10-30 19:57:00.568  INFO 17536 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/9/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[9, {}]}
2019-10-30 19:57:00.569 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:57:00.569 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 9(Integer)
2019-10-30 19:57:00.571 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:00.602 DEBUG 17536 --- [http-nio-8080-exec-6] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 19:57:00.602 DEBUG 17536 --- [http-nio-8080-exec-6] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:57:00.603 DEBUG 17536 --- [http-nio-8080-exec-6] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 19:57:00.604 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 19:57:00.605 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 2(Integer), 2(Integer)
2019-10-30 19:57:00.605 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 19:57:00.609 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 19:57:00.609 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:57:00.610 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 19:57:00.610 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 19:57:00.611 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: c(String), 1(Integer), 2(Integer)
2019-10-30 19:57:00.612 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 19:57:00.612 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 19:57:00.613 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 9(Integer)
2019-10-30 19:57:00.613 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 19:57:00.628  INFO 17536 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 19:57:00.628  INFO 17536 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 60
2019-10-30 19:57:00.631  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:57:00.632 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:57:00.632 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:57:00.633 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:57:00.634 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:57:00.634 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:57:00.635 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 3
2019-10-30 19:57:00.636 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:57:00.636 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:57:00.637 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:00.638 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:57:00.639 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:57:00.640 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:00.656 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:57:00.656 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:57:00.656 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:00.658 DEBUG 17536 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:57:00.658 DEBUG 17536 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:57:00.658 DEBUG 17536 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:57:00.659  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:57:00.659  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 28
2019-10-30 19:57:01.275  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/12/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[12, {}]}
2019-10-30 19:57:01.276 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:57:01.276 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 12(Integer)
2019-10-30 19:57:01.277 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:01.279 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 19:57:01.279 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:57:01.280 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 19:57:01.280 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 19:57:01.280 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 1(Integer), 2(Integer)
2019-10-30 19:57:01.283 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 19:57:01.285 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 19:57:01.285 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:57:01.287 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 19:57:01.287 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 19:57:01.288 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: c(String), 0(Integer), 2(Integer)
2019-10-30 19:57:01.289 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 19:57:01.290 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 19:57:01.290 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 12(Integer)
2019-10-30 19:57:01.290 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 19:57:01.301  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 19:57:01.301  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 26
2019-10-30 19:57:01.306  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:57:01.307 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:57:01.307 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:57:01.308 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:57:01.309 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:57:01.309 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:57:01.310 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 19:57:01.311 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:57:01.311 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:57:01.312 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:01.314 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:57:01.314 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:57:01.315 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:01.316 DEBUG 17536 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:57:01.316 DEBUG 17536 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:57:01.317 DEBUG 17536 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:57:01.318  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:57:01.318  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 12
2019-10-30 19:57:02.510  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/14/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[14, {}]}
2019-10-30 19:57:02.511 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:57:02.511 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 19:57:02.512 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:02.513 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 19:57:02.513 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:57:02.514 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 19:57:02.514 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 19:57:02.514 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 0(Integer), 2(Integer)
2019-10-30 19:57:02.515 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 19:57:02.519 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 19:57:02.519 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 1(Integer)
2019-10-30 19:57:02.520 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 19:57:02.521 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 19:57:02.521 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: java(String), -1(Integer), 1(Integer)
2019-10-30 19:57:02.631 ERROR 17536 --- [http-nio-8080-exec-4] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/admin/blogs/14/delete Exception : {}

org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TagMapper.xml]
### The error may involve com.pan.dao.TagMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update tag     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy84.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57)
	at com.sun.proxy.$Proxy90.updateByPrimaryKey(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy91.updateByPrimaryKey(Unknown Source)
	at com.pan.service.impl.TagServiceImpl.decreaseBlogNum(TagServiceImpl.java:97)
	at com.pan.service.impl.TagServiceImpl$$FastClassBySpringCGLIB$$78c5f932.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.pan.service.impl.TagServiceImpl$$EnhancerBySpringCGLIB$$2ae157f3.decreaseBlogNum(<generated>)
	at com.pan.controller.BlogController.delete(BlogController.java:197)
	at com.pan.controller.BlogController$$FastClassBySpringCGLIB$$1c3687d2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.BlogController$$EnhancerBySpringCGLIB$$5c7dd389.delete(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy119.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy117.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 93 common frames omitted

2019-10-30 19:57:02.633  WARN 17536 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TagMapper.xml]
### The error may involve com.pan.dao.TagMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update tag     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1]
2019-10-30 19:57:08.791  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 19:57:08.792 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 19:57:08.793 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 19:57:08.794 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 19:57:08.795 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 19:57:08.795 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:57:08.796 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 19:57:08.798 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:57:08.799 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:57:08.800 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:08.802 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:57:08.802 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:57:08.811 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:08.814 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:57:08.814 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:57:08.815 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:57:08.816  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 19:57:08.816  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 25
2019-10-30 19:57:12.299  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/14/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[14, {}]}
2019-10-30 19:57:12.300 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:57:12.301 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 19:57:12.301 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:12.303 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 19:57:12.303 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:57:12.304 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 19:57:12.304 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 19:57:12.304 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), -1(Integer), 2(Integer)
2019-10-30 19:57:12.307 ERROR 17536 --- [http-nio-8080-exec-4] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/admin/blogs/14/delete Exception : {}

org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TypeMapper.xml]
### The error may involve com.pan.dao.TypeMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update type     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy84.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57)
	at com.sun.proxy.$Proxy88.updateByPrimaryKey(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy89.updateByPrimaryKey(Unknown Source)
	at com.pan.service.impl.TypeServiceImpl.decreaseBlogNum(TypeServiceImpl.java:98)
	at com.pan.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$ae10704.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$8598b4a9.decreaseBlogNum(<generated>)
	at com.pan.controller.BlogController.delete(BlogController.java:192)
	at com.pan.controller.BlogController$$FastClassBySpringCGLIB$$1c3687d2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.BlogController$$EnhancerBySpringCGLIB$$5c7dd389.delete(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy119.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy117.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted

2019-10-30 19:57:12.307  WARN 17536 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TypeMapper.xml]
### The error may involve com.pan.dao.TypeMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update type     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1]
2019-10-30 19:57:57.023  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 19:57:57.036 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 19:57:57.036 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:57:57.037 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:57.039 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:57:57.039 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:57:57.040 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:57.042 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 19:57:57.043 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 19:57:57.044 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:57.045 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:57:57.045 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:57:57.047 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:57:57.048 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 19:57:57.048 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 19:57:57.049 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 19:57:57.050 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 19:57:57.050 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 19:57:57.051 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 19:57:57.051 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 19:57:57.051 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 19:57:57.052 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 19:57:57.053 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 19:57:57.053 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 19:57:57.055 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 19:57:57.056 DEBUG 17536 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 19:57:57.056 DEBUG 17536 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 19:57:57.058 DEBUG 17536 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 19:57:57.058 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 19:57:57.058 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 19:57:57.059 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 1
2019-10-30 19:57:57.060  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 19:57:57.060  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 37
2019-10-30 19:58:49.967  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/15', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[15, {}]}
2019-10-30 19:58:49.968 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:58:49.969 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 19:58:49.970 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:58:50.017 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:58:50.018 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:58:50.018 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:58:50.020 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 19:58:50.020 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:58:50.021 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:58:50.022 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 19:58:50.022 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 1(Integer)
2019-10-30 19:58:50.023 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 19:58:50.023  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 19:58:50.023  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 56
2019-10-30 19:58:50.266 ERROR 17536 --- [http-nio-8080-exec-10] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 19:58:50.267  WARN 17536 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 19:59:26.507  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/14/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[14, {}]}
2019-10-30 19:59:26.509 DEBUG 17536 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 19:59:26.509 DEBUG 17536 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 19:59:26.511 DEBUG 17536 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : <==      Total: 5
2019-10-30 19:59:26.512 DEBUG 17536 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 19:59:26.512 DEBUG 17536 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 19:59:26.513 DEBUG 17536 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 19:59:26.515 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:59:26.515 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 19:59:26.517 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:59:26.518 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 19:59:26.519 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 19:59:26.519 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:59:26.520  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 19:59:26.520  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 19:59:32.682  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/15/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[15, {}]}
2019-10-30 19:59:32.683 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:59:32.683 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 19:59:32.684 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:59:32.686 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 19:59:32.686 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:59:32.687 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 19:59:32.688 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 19:59:32.688 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), -1(Integer), 2(Integer)
2019-10-30 19:59:32.691 ERROR 17536 --- [http-nio-8080-exec-5] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/admin/blogs/15/delete Exception : {}

org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TypeMapper.xml]
### The error may involve com.pan.dao.TypeMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update type     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy84.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57)
	at com.sun.proxy.$Proxy88.updateByPrimaryKey(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy89.updateByPrimaryKey(Unknown Source)
	at com.pan.service.impl.TypeServiceImpl.decreaseBlogNum(TypeServiceImpl.java:98)
	at com.pan.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$ae10704.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$8598b4a9.decreaseBlogNum(<generated>)
	at com.pan.controller.BlogController.delete(BlogController.java:192)
	at com.pan.controller.BlogController$$FastClassBySpringCGLIB$$1c3687d2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.BlogController$$EnhancerBySpringCGLIB$$5c7dd389.delete(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy119.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy117.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.GeneratedMethodAccessor146.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted

2019-10-30 19:59:32.691  WARN 17536 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TypeMapper.xml]
### The error may involve com.pan.dao.TypeMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update type     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1]
2019-10-30 19:59:35.938  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/15/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[15, {}]}
2019-10-30 19:59:35.939 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 19:59:35.939 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 19:59:35.940 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 19:59:35.942 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 19:59:35.942 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 19:59:35.942 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 19:59:35.943 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 19:59:35.943 DEBUG 17536 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), -1(Integer), 2(Integer)
2019-10-30 19:59:35.945 ERROR 17536 --- [http-nio-8080-exec-1] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/admin/blogs/15/delete Exception : {}

org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TypeMapper.xml]
### The error may involve com.pan.dao.TypeMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update type     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy84.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57)
	at com.sun.proxy.$Proxy88.updateByPrimaryKey(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy89.updateByPrimaryKey(Unknown Source)
	at com.pan.service.impl.TypeServiceImpl.decreaseBlogNum(TypeServiceImpl.java:98)
	at com.pan.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$ae10704.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$8598b4a9.decreaseBlogNum(<generated>)
	at com.pan.controller.BlogController.delete(BlogController.java:192)
	at com.pan.controller.BlogController$$FastClassBySpringCGLIB$$1c3687d2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.BlogController$$EnhancerBySpringCGLIB$$5c7dd389.delete(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy119.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy117.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.GeneratedMethodAccessor146.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted

2019-10-30 19:59:35.946  WARN 17536 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TypeMapper.xml]
### The error may involve com.pan.dao.TypeMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update type     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1]
2019-10-30 20:02:32.031  INFO 17536 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , null, 0, {}]}
2019-10-30 20:02:32.038 DEBUG 17536 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:02:32.038 DEBUG 17536 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:02:32.039 DEBUG 17536 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:02:32.040 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:02:32.040 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:32.041 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:02:32.043 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:32.043 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:32.043 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:32.045 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:32.045 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:32.045 DEBUG 17536 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:32.047 DEBUG 17536 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:02:32.048 DEBUG 17536 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:02:32.048 DEBUG 17536 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:02:32.049  INFO 17536 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 20:02:32.049  INFO 17536 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 19
2019-10-30 20:02:32.629  INFO 17536 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , null, 0, {}]}
2019-10-30 20:02:32.630 DEBUG 17536 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:02:32.630 DEBUG 17536 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:02:32.631 DEBUG 17536 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:02:32.632 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:02:32.633 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:32.634 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:02:32.636 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:32.636 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:32.636 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:32.638 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:32.638 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:32.639 DEBUG 17536 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:32.642 DEBUG 17536 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:02:32.642 DEBUG 17536 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:02:32.643 DEBUG 17536 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:02:32.643  INFO 17536 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 20:02:32.643  INFO 17536 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 14
2019-10-30 20:02:32.949  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , null, 0, {}]}
2019-10-30 20:02:32.950 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:02:32.950 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:02:32.951 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:02:32.953 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:02:32.953 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:32.954 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:02:32.955 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:32.955 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:32.956 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:32.957 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:32.957 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:32.958 DEBUG 17536 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:32.959 DEBUG 17536 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:02:32.959 DEBUG 17536 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:02:32.960 DEBUG 17536 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:02:32.961  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 20:02:32.961  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 12
2019-10-30 20:02:33.102  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , null, 0, {}]}
2019-10-30 20:02:33.103 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:02:33.103 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:02:33.104 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:02:33.105 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:02:33.105 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:33.106 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:02:33.107 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:33.108 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:33.108 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:33.110 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:33.110 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:33.110 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:33.112 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:02:33.112 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:02:33.112 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:02:33.113  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 20:02:33.114  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 12
2019-10-30 20:02:33.236  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , null, 0, {}]}
2019-10-30 20:02:33.238 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:02:33.238 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:02:33.238 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:02:33.239 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:02:33.239 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:33.240 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:02:33.241 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:33.241 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:33.242 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:33.243 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:33.243 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:33.244 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:33.245 DEBUG 17536 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:02:33.245 DEBUG 17536 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:02:33.246 DEBUG 17536 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:02:33.247  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 20:02:33.247  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 11
2019-10-30 20:02:34.262  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:02:34.263 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:02:34.263 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:02:34.263 DEBUG 17536 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:02:34.265 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:02:34.265 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:34.266 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:02:34.268 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:34.268 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:34.269 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:34.270 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:34.270 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:34.271 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:34.274 DEBUG 17536 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:02:34.274 DEBUG 17536 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:02:34.275 DEBUG 17536 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:02:34.275  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:02:34.275  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:02:40.335  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 20:02:40.340 DEBUG 17536 --- [http-nio-8080-exec-3] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:02:40.340 DEBUG 17536 --- [http-nio-8080-exec-3] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:02:40.341 DEBUG 17536 --- [http-nio-8080-exec-3] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:02:40.342 DEBUG 17536 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:02:40.342 DEBUG 17536 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:40.344 DEBUG 17536 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:02:40.345  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:02:40.345  INFO 17536 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 10
2019-10-30 20:02:41.197  INFO 17536 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {}]}
2019-10-30 20:02:41.201 DEBUG 17536 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:02:41.201 DEBUG 17536 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:02:41.202 DEBUG 17536 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:02:41.202 DEBUG 17536 --- [http-nio-8080-exec-6] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 20:02:41.202 DEBUG 17536 --- [http-nio-8080-exec-6] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:41.203 DEBUG 17536 --- [http-nio-8080-exec-6] com.pan.dao.TagMapper.selectByExample    : <==      Total: 5
2019-10-30 20:02:41.204  INFO 17536 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:02:41.204  INFO 17536 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 7
2019-10-30 20:02:44.676  INFO 17536 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags/2/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.delete', args=[2, {}]}
2019-10-30 20:02:44.678 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.deleteByPrimaryKey   : ==>  Preparing: delete from tag where id = ? 
2019-10-30 20:02:44.678 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.deleteByPrimaryKey   : ==> Parameters: 2(Integer)
2019-10-30 20:02:44.678 DEBUG 17536 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.deleteByPrimaryKey   : <==    Updates: 1
2019-10-30 20:02:44.682  INFO 17536 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : redirect:/admin/tags
2019-10-30 20:02:44.682  INFO 17536 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:02:44.689  INFO 17536 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {message=删除成功}]}
2019-10-30 20:02:44.690 DEBUG 17536 --- [http-nio-8080-exec-9] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:02:44.691 DEBUG 17536 --- [http-nio-8080-exec-9] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:02:44.691 DEBUG 17536 --- [http-nio-8080-exec-9] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:02:44.693 DEBUG 17536 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 20:02:44.693 DEBUG 17536 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:44.694 DEBUG 17536 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 20:02:44.694  INFO 17536 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:02:44.694  INFO 17536 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 20:02:45.725  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags/3/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.delete', args=[3, {}]}
2019-10-30 20:02:45.726 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.deleteByPrimaryKey   : ==>  Preparing: delete from tag where id = ? 
2019-10-30 20:02:45.726 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.deleteByPrimaryKey   : ==> Parameters: 3(Integer)
2019-10-30 20:02:45.727 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.deleteByPrimaryKey   : <==    Updates: 1
2019-10-30 20:02:45.729  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : redirect:/admin/tags
2019-10-30 20:02:45.730  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 20:02:45.733  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {message=删除成功}]}
2019-10-30 20:02:45.734 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:02:45.734 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:02:45.735 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:02:45.736 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 20:02:45.737 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:45.737 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : <==      Total: 3
2019-10-30 20:02:45.738  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:02:45.738  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 20:02:47.351  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags/4/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.delete', args=[4, {}]}
2019-10-30 20:02:47.352 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.deleteByPrimaryKey   : ==>  Preparing: delete from tag where id = ? 
2019-10-30 20:02:47.352 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.deleteByPrimaryKey   : ==> Parameters: 4(Integer)
2019-10-30 20:02:47.352 DEBUG 17536 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.deleteByPrimaryKey   : <==    Updates: 1
2019-10-30 20:02:47.356  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : redirect:/admin/tags
2019-10-30 20:02:47.356  INFO 17536 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 20:02:47.360  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {message=删除成功}]}
2019-10-30 20:02:47.361 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:02:47.361 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:02:47.362 DEBUG 17536 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:02:47.363 DEBUG 17536 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 20:02:47.363 DEBUG 17536 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:47.364 DEBUG 17536 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : <==      Total: 2
2019-10-30 20:02:47.365  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:02:47.365  INFO 17536 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 20:02:48.438  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 20:02:48.438 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:02:48.439 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:02:48.439 DEBUG 17536 --- [http-nio-8080-exec-2] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:02:48.440 DEBUG 17536 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:02:48.440 DEBUG 17536 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:48.441 DEBUG 17536 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:02:48.441  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:02:48.441  INFO 17536 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 3
2019-10-30 20:02:50.406  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:02:50.407 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:02:50.407 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:02:50.408 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:02:50.410 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:02:50.410 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:02:50.411 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:02:50.412 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:50.412 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:50.412 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:50.414 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:02:50.414 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:02:50.416 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:02:50.417 DEBUG 17536 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:02:50.418 DEBUG 17536 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:02:50.418 DEBUG 17536 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:02:50.419  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:02:50.420  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 14
2019-10-30 20:03:20.776  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:03:20.789 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:03:20.790 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:03:20.790 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:03:20.792 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:03:20.792 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:03:20.793 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:03:20.794 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:03:20.794 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 20:03:20.795 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:03:20.796 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:03:20.796 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:03:20.800 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:03:20.801 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:03:20.801 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:03:20.802 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:03:20.802 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:03:20.803 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:03:20.803 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:03:20.804 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:03:20.804 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:03:20.804 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:03:20.805 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:03:20.805 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:03:20.806 DEBUG 17536 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 2
2019-10-30 20:03:20.806 DEBUG 17536 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:03:20.806 DEBUG 17536 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:03:20.807 DEBUG 17536 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:03:20.807 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:03:20.807 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:03:20.808 DEBUG 17536 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 1
2019-10-30 20:03:20.809  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:03:20.809  INFO 17536 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 33
2019-10-30 20:03:34.203  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:03:34.209 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:03:34.209 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:03:34.210 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:03:34.211 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:03:34.211 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:03:34.212 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:03:34.214 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:03:34.214 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 20:03:34.214 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:03:34.216 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:03:34.216 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:03:34.217 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:03:34.219 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:03:34.219 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:03:34.220 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:03:34.221 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:03:34.221 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:03:34.222 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:03:34.222 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:03:34.222 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:03:34.222 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:03:34.223 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:03:34.223 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:03:34.224 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 2
2019-10-30 20:03:34.224 DEBUG 17536 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:03:34.224 DEBUG 17536 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:03:34.225 DEBUG 17536 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:03:34.225 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:03:34.225 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:03:34.225 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 1
2019-10-30 20:03:34.226  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:03:34.226  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 23
2019-10-30 20:03:37.673  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:03:37.674 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:03:37.675 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:03:37.675 DEBUG 17536 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:03:37.676 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:03:37.676 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:03:37.677 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:03:37.679 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:03:37.679 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:03:37.680 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:03:37.682 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:03:37.682 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:03:37.682 DEBUG 17536 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:03:37.684 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:03:37.684 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:03:37.684 DEBUG 17536 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:03:37.685  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:03:37.685  INFO 17536 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 12
2019-10-30 20:03:40.311  INFO 17536 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/14/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[14, {}]}
2019-10-30 20:03:40.312 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:03:40.312 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:03:40.313 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:03:40.314 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:03:40.314 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 20:03:40.315 DEBUG 17536 --- [http-nio-8080-exec-10] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:03:40.315 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:03:40.315 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 1(Integer), 2(Integer)
2019-10-30 20:03:40.316 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:03:40.319 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:03:40.319 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 1(Integer)
2019-10-30 20:03:40.320 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:03:40.321 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:03:40.321 DEBUG 17536 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: java(String), -1(Integer), 1(Integer)
2019-10-30 20:03:40.323 ERROR 17536 --- [http-nio-8080-exec-10] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/admin/blogs/14/delete Exception : {}

org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TagMapper.xml]
### The error may involve com.pan.dao.TagMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update tag     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy84.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57)
	at com.sun.proxy.$Proxy90.updateByPrimaryKey(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy91.updateByPrimaryKey(Unknown Source)
	at com.pan.service.impl.TagServiceImpl.decreaseBlogNum(TagServiceImpl.java:97)
	at com.pan.service.impl.TagServiceImpl$$FastClassBySpringCGLIB$$78c5f932.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.pan.service.impl.TagServiceImpl$$EnhancerBySpringCGLIB$$2ae157f3.decreaseBlogNum(<generated>)
	at com.pan.controller.BlogController.delete(BlogController.java:197)
	at com.pan.controller.BlogController$$FastClassBySpringCGLIB$$1c3687d2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.BlogController$$EnhancerBySpringCGLIB$$5c7dd389.delete(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy119.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy117.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.GeneratedMethodAccessor146.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 93 common frames omitted

2019-10-30 20:03:40.324  WARN 17536 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TagMapper.xml]
### The error may involve com.pan.dao.TagMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update tag     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1]
2019-10-30 20:03:52.732  INFO 39040 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 39040 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 20:03:52.735 DEBUG 39040 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 20:03:52.735  INFO 39040 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 20:03:52.794  INFO 39040 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 20:03:52.794  INFO 39040 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 20:03:53.600  INFO 39040 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 20:03:53.641  INFO 39040 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
2019-10-30 20:03:54.031  INFO 39040 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$652a5b6d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 20:03:54.551  INFO 39040 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 20:03:54.629  INFO 39040 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 20:03:54.630  INFO 39040 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 20:03:54.746  INFO 39040 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 20:03:54.747  INFO 39040 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1953 ms
2019-10-30 20:03:54.902  INFO 39040 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 20:03:55.178  INFO 39040 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 20:03:56.513  INFO 39040 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 20:03:56.616  INFO 39040 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 20:03:57.474  INFO 39040 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 20:03:57.664  INFO 39040 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 20:03:57.669  INFO 39040 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.713 seconds (JVM running for 6.851)
2019-10-30 20:04:06.058  INFO 39040 --- [http-nio-8080-exec-10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 20:04:06.058  INFO 39040 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 20:04:06.075  INFO 39040 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2019-10-30 20:04:06.111  INFO 39040 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:04:06.301 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:04:06.325 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:04:06.348 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:06.354 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:04:06.354 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:04:06.355 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:06.357 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:04:06.357 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 20:04:06.358 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:06.359 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:04:06.360 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:04:06.360 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:06.394 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:04:06.395 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:04:06.395 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:04:06.397 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:04:06.398 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:04:06.400 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:04:06.404 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:04:06.404 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:04:06.405 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:04:06.406 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:04:06.406 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:04:06.408 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 2
2019-10-30 20:04:06.415 DEBUG 39040 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:04:06.415 DEBUG 39040 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:04:06.416 DEBUG 39040 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:04:06.416 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:04:06.416 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:04:06.417 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 1
2019-10-30 20:04:06.418  INFO 39040 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:04:06.418  INFO 39040 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 309
2019-10-30 20:04:40.623  INFO 39040 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 20:04:40.625  INFO 39040 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 20:04:40.626  INFO 39040 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 3
2019-10-30 20:04:46.543  INFO 39040 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.userLogin', args=[pan, 123456, ModelAndView [view=[null]; model=null], org.apache.catalina.session.StandardSessionFacade@edf97dd]}
2019-10-30 20:04:46.557 DEBUG 39040 --- [http-nio-8080-exec-8] com.pan.dao.UserMapper.selectByExample   : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user WHERE ( username = ? ) 
2019-10-30 20:04:46.558 DEBUG 39040 --- [http-nio-8080-exec-8] com.pan.dao.UserMapper.selectByExample   : ==> Parameters: pan(String)
2019-10-30 20:04:46.560 DEBUG 39040 --- [http-nio-8080-exec-8] com.pan.dao.UserMapper.selectByExample   : <==      Total: 1
2019-10-30 20:04:46.562  INFO 39040 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : ModelAndView [view="redirect:/admin/index"; model=null]
2019-10-30 20:04:46.562  INFO 39040 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 19
2019-10-30 20:04:46.581  INFO 39040 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/index;jsessionid=CB734B7144DA4D5F0079C74D1F33E1C5', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.AdminController.indexPage', args=[]}
2019-10-30 20:04:46.605  INFO 39040 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/index
2019-10-30 20:04:46.605  INFO 39040 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 25
2019-10-30 20:04:48.518  INFO 39040 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:04:48.523 DEBUG 39040 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:04:48.523 DEBUG 39040 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:04:48.524 DEBUG 39040 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:04:48.525 DEBUG 39040 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:04:48.525 DEBUG 39040 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:04:48.529 DEBUG 39040 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:04:48.532 DEBUG 39040 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:04:48.532 DEBUG 39040 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:04:48.533 DEBUG 39040 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:48.535 DEBUG 39040 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:04:48.536 DEBUG 39040 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:04:48.537 DEBUG 39040 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:48.540 DEBUG 39040 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:04:48.541 DEBUG 39040 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:04:48.543 DEBUG 39040 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:04:48.545  INFO 39040 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:04:48.545  INFO 39040 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 27
2019-10-30 20:04:54.767  INFO 39040 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , 2, 0, {}]}
2019-10-30 20:04:54.768 DEBUG 39040 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:04:54.769 DEBUG 39040 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:04:54.770 DEBUG 39040 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:54.772 DEBUG 39040 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog WHERE typeid = ? 
2019-10-30 20:04:54.773 DEBUG 39040 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 2(Integer)
2019-10-30 20:04:54.774 DEBUG 39040 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:04:54.776 DEBUG 39040 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog WHERE typeid = ? limit ?,? 
2019-10-30 20:04:54.777 DEBUG 39040 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 2(Integer), 0(Integer), 10(Integer)
2019-10-30 20:04:54.779 DEBUG 39040 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:04:54.782 DEBUG 39040 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:04:54.782 DEBUG 39040 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:04:54.785 DEBUG 39040 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:04:54.786  INFO 39040 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 20:04:54.786  INFO 39040 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 19
2019-10-30 20:04:55.590  INFO 39040 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , 2, 0, {}]}
2019-10-30 20:04:55.592 DEBUG 39040 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:04:55.593 DEBUG 39040 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:04:55.594 DEBUG 39040 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:55.596 DEBUG 39040 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog WHERE typeid = ? 
2019-10-30 20:04:55.597 DEBUG 39040 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 2(Integer)
2019-10-30 20:04:55.598 DEBUG 39040 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:04:55.600 DEBUG 39040 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog WHERE typeid = ? limit ?,? 
2019-10-30 20:04:55.600 DEBUG 39040 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 2(Integer), 0(Integer), 10(Integer)
2019-10-30 20:04:55.602 DEBUG 39040 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:04:55.604 DEBUG 39040 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:04:55.605 DEBUG 39040 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:04:55.606 DEBUG 39040 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:04:55.607  INFO 39040 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 20:04:55.607  INFO 39040 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 17
2019-10-30 20:04:55.837  INFO 39040 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , 2, 0, {}]}
2019-10-30 20:04:55.838 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:04:55.839 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:04:55.840 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:55.842 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog WHERE typeid = ? 
2019-10-30 20:04:55.842 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 2(Integer)
2019-10-30 20:04:55.843 DEBUG 39040 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:04:55.844 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog WHERE typeid = ? limit ?,? 
2019-10-30 20:04:55.845 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 2(Integer), 0(Integer), 10(Integer)
2019-10-30 20:04:55.846 DEBUG 39040 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:04:55.848 DEBUG 39040 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:04:55.848 DEBUG 39040 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:04:55.849 DEBUG 39040 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:04:55.851  INFO 39040 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 20:04:55.851  INFO 39040 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 14
2019-10-30 20:04:55.980  INFO 39040 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , 2, 0, {}]}
2019-10-30 20:04:55.981 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:04:55.981 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:04:55.982 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:55.983 DEBUG 39040 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog WHERE typeid = ? 
2019-10-30 20:04:55.983 DEBUG 39040 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 2(Integer)
2019-10-30 20:04:55.984 DEBUG 39040 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:04:55.985 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog WHERE typeid = ? limit ?,? 
2019-10-30 20:04:55.985 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 2(Integer), 0(Integer), 10(Integer)
2019-10-30 20:04:55.986 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:04:55.989 DEBUG 39040 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:04:55.989 DEBUG 39040 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:04:55.990 DEBUG 39040 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:04:55.991  INFO 39040 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 20:04:55.992  INFO 39040 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 12
2019-10-30 20:04:58.468  INFO 39040 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , 4, 0, {}]}
2019-10-30 20:04:58.471 DEBUG 39040 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:04:58.472 DEBUG 39040 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 4(Integer)
2019-10-30 20:04:58.473 DEBUG 39040 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:58.475 DEBUG 39040 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog WHERE typeid = ? 
2019-10-30 20:04:58.476 DEBUG 39040 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 4(Integer)
2019-10-30 20:04:58.477 DEBUG 39040 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:04:58.478 DEBUG 39040 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:04:58.479 DEBUG 39040 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:04:58.480 DEBUG 39040 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:04:58.481  INFO 39040 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 20:04:58.481  INFO 39040 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:04:59.991  INFO 39040 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogSearch', args=[false, , 2, 0, {}]}
2019-10-30 20:04:59.992 DEBUG 39040 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:04:59.992 DEBUG 39040 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:04:59.993 DEBUG 39040 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:04:59.995 DEBUG 39040 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog WHERE typeid = ? 
2019-10-30 20:04:59.995 DEBUG 39040 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 2(Integer)
2019-10-30 20:04:59.996 DEBUG 39040 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:04:59.997 DEBUG 39040 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog WHERE typeid = ? limit ?,? 
2019-10-30 20:04:59.997 DEBUG 39040 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 2(Integer), 0(Integer), 10(Integer)
2019-10-30 20:04:59.999 DEBUG 39040 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:05:00.000 DEBUG 39040 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:05:00.001 DEBUG 39040 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:05:00.003 DEBUG 39040 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:05:00.010  INFO 39040 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/blogs :: blogList
2019-10-30 20:05:00.010  INFO 39040 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 19
2019-10-30 20:05:43.778  INFO 39040 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/14/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[14, {}]}
2019-10-30 20:05:43.779 DEBUG 39040 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:05:43.780 DEBUG 39040 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:05:43.782 DEBUG 39040 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:05:43.784 DEBUG 39040 --- [http-nio-8080-exec-2] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:05:43.784 DEBUG 39040 --- [http-nio-8080-exec-2] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 20:05:43.785 DEBUG 39040 --- [http-nio-8080-exec-2] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:05:43.786 DEBUG 39040 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:05:43.786 DEBUG 39040 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 0(Integer), 2(Integer)
2019-10-30 20:05:43.787 DEBUG 39040 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:05:43.792 DEBUG 39040 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:05:43.792 DEBUG 39040 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 1(Integer)
2019-10-30 20:05:43.793 DEBUG 39040 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:05:43.794 DEBUG 39040 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:05:43.794 DEBUG 39040 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: java(String), -1(Integer), 1(Integer)
2019-10-30 20:05:43.854 ERROR 39040 --- [http-nio-8080-exec-2] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/admin/blogs/14/delete Exception : {}

org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TagMapper.xml]
### The error may involve com.pan.dao.TagMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update tag     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy84.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57)
	at com.sun.proxy.$Proxy90.updateByPrimaryKey(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy91.updateByPrimaryKey(Unknown Source)
	at com.pan.service.impl.TagServiceImpl.decreaseBlogNum(TagServiceImpl.java:97)
	at com.pan.service.impl.TagServiceImpl$$FastClassBySpringCGLIB$$78c5f932.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.pan.service.impl.TagServiceImpl$$EnhancerBySpringCGLIB$$c1c0c405.decreaseBlogNum(<generated>)
	at com.pan.controller.BlogController.delete(BlogController.java:197)
	at com.pan.controller.BlogController$$FastClassBySpringCGLIB$$1c3687d2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.BlogController$$EnhancerBySpringCGLIB$$a1c9e827.delete(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor90.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy119.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy117.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 93 common frames omitted

2019-10-30 20:05:43.855  WARN 39040 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TagMapper.xml]
### The error may involve com.pan.dao.TagMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update tag     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1]
2019-10-30 20:07:30.551  INFO 39040 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:07:30.565 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:07:30.565 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:07:30.566 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:07:30.571 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:07:30.571 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:07:30.572 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:07:30.574 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:07:30.574 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 20:07:30.575 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:07:30.577 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:07:30.578 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:07:30.578 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:07:30.579 DEBUG 39040 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:07:30.580 DEBUG 39040 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:07:30.580 DEBUG 39040 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:07:30.581 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:07:30.581 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:07:30.583 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:07:30.583 DEBUG 39040 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:07:30.583 DEBUG 39040 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:07:30.584 DEBUG 39040 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:07:30.585 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:07:30.585 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:07:30.586 DEBUG 39040 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 2
2019-10-30 20:07:30.587 DEBUG 39040 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:07:30.587 DEBUG 39040 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:07:30.588 DEBUG 39040 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:07:30.588 DEBUG 39040 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:07:30.588 DEBUG 39040 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:07:30.589 DEBUG 39040 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 1
2019-10-30 20:07:30.590  INFO 39040 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:07:30.590  INFO 39040 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 39
2019-10-30 20:07:35.991  INFO 39040 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/14/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[14, {}]}
2019-10-30 20:07:35.992 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:07:35.992 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:07:35.994 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:07:35.996 DEBUG 39040 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:07:35.996 DEBUG 39040 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 20:07:35.997 DEBUG 39040 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:07:35.997 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:07:35.997 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 1(Integer), 2(Integer)
2019-10-30 20:07:35.998 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:07:36.002 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:07:36.002 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 1(Integer)
2019-10-30 20:07:36.003 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:07:36.003 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:07:36.003 DEBUG 39040 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: java(String), -1(Integer), 1(Integer)
2019-10-30 20:07:36.005 ERROR 39040 --- [http-nio-8080-exec-5] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/admin/blogs/14/delete Exception : {}

org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TagMapper.xml]
### The error may involve com.pan.dao.TagMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update tag     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy84.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57)
	at com.sun.proxy.$Proxy90.updateByPrimaryKey(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy91.updateByPrimaryKey(Unknown Source)
	at com.pan.service.impl.TagServiceImpl.decreaseBlogNum(TagServiceImpl.java:97)
	at com.pan.service.impl.TagServiceImpl$$FastClassBySpringCGLIB$$78c5f932.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.pan.service.impl.TagServiceImpl$$EnhancerBySpringCGLIB$$c1c0c405.decreaseBlogNum(<generated>)
	at com.pan.controller.BlogController.delete(BlogController.java:197)
	at com.pan.controller.BlogController$$FastClassBySpringCGLIB$$1c3687d2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.BlogController$$EnhancerBySpringCGLIB$$a1c9e827.delete(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor90.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy119.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy117.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 93 common frames omitted

2019-10-30 20:07:36.006  WARN 39040 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TagMapper.xml]
### The error may involve com.pan.dao.TagMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update tag     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1]
2019-10-30 20:08:57.767  INFO 12868 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 12868 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 20:08:57.769 DEBUG 12868 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 20:08:57.769  INFO 12868 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 20:08:57.822  INFO 12868 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 20:08:57.822  INFO 12868 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 20:08:58.652  INFO 12868 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 20:08:58.706  INFO 12868 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 40ms. Found 0 repository interfaces.
2019-10-30 20:08:59.059  INFO 12868 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b5116204] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 20:08:59.536  INFO 12868 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 20:08:59.633  INFO 12868 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 20:08:59.633  INFO 12868 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 20:08:59.746  INFO 12868 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 20:08:59.747  INFO 12868 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1924 ms
2019-10-30 20:08:59.906  INFO 12868 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 20:09:00.159  INFO 12868 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 20:09:01.517  INFO 12868 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 20:09:01.619  INFO 12868 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 20:09:02.374  INFO 12868 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 20:09:02.443  INFO 12868 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 20:09:02.446  INFO 12868 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.321 seconds (JVM running for 6.394)
2019-10-30 20:09:15.501  INFO 12868 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 20:09:15.502  INFO 12868 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 20:09:15.516  INFO 12868 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 20:09:15.552  INFO 12868 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:09:15.759 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:09:15.793 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:09:15.822 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:09:15.828 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:09:15.829 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:09:15.830 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:09:15.833 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:09:15.833 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 20:09:15.834 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:09:15.836 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:09:15.837 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:09:15.838 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:09:15.875 DEBUG 12868 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:09:15.875 DEBUG 12868 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:09:15.876 DEBUG 12868 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:09:15.879 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:09:15.879 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:09:15.882 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:09:15.886 DEBUG 12868 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:09:15.887 DEBUG 12868 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:09:15.888 DEBUG 12868 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:09:15.889 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:09:15.889 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:09:15.890 DEBUG 12868 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 2
2019-10-30 20:09:15.899 DEBUG 12868 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:09:15.900 DEBUG 12868 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:09:15.901 DEBUG 12868 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:09:15.901 DEBUG 12868 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:09:15.901 DEBUG 12868 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:09:15.902 DEBUG 12868 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 1
2019-10-30 20:09:15.903  INFO 12868 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:09:15.903  INFO 12868 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 353
2019-10-30 20:09:20.361  INFO 12868 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 20:09:20.369  INFO 12868 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 20:09:20.369  INFO 12868 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 20:09:25.564  INFO 12868 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.userLogin', args=[pan, 123456, ModelAndView [view=[null]; model=null], org.apache.catalina.session.StandardSessionFacade@2ebedfbf]}
2019-10-30 20:09:25.578 DEBUG 12868 --- [http-nio-8080-exec-7] com.pan.dao.UserMapper.selectByExample   : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user WHERE ( username = ? ) 
2019-10-30 20:09:25.579 DEBUG 12868 --- [http-nio-8080-exec-7] com.pan.dao.UserMapper.selectByExample   : ==> Parameters: pan(String)
2019-10-30 20:09:25.581 DEBUG 12868 --- [http-nio-8080-exec-7] com.pan.dao.UserMapper.selectByExample   : <==      Total: 1
2019-10-30 20:09:25.583  INFO 12868 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : ModelAndView [view="redirect:/admin/index"; model=null]
2019-10-30 20:09:25.583  INFO 12868 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 20
2019-10-30 20:09:25.597  INFO 12868 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/index', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.AdminController.indexPage', args=[]}
2019-10-30 20:09:25.601  INFO 12868 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/index
2019-10-30 20:09:25.601  INFO 12868 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 20:09:26.959  INFO 12868 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:09:26.964 DEBUG 12868 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:09:26.965 DEBUG 12868 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:09:26.966 DEBUG 12868 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:09:26.967 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:09:26.968 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:09:26.973 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:09:26.976 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:09:26.976 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:09:26.977 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:09:26.979 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:09:26.980 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:09:26.982 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:09:26.985 DEBUG 12868 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:09:26.986 DEBUG 12868 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:09:26.989 DEBUG 12868 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:09:26.992  INFO 12868 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:09:26.992  INFO 12868 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 33
2019-10-30 20:09:28.497  INFO 12868 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/14/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[14, {}]}
2019-10-30 20:09:28.498 DEBUG 12868 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:09:28.498 DEBUG 12868 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:09:28.500 DEBUG 12868 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:09:28.504 DEBUG 12868 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:09:28.504 DEBUG 12868 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 20:09:28.505 DEBUG 12868 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:09:28.506 DEBUG 12868 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:09:28.507 DEBUG 12868 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 1(Integer), 2(Integer)
2019-10-30 20:09:28.507 DEBUG 12868 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:09:28.513 DEBUG 12868 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:09:28.513 DEBUG 12868 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 1(Integer)
2019-10-30 20:09:28.514 DEBUG 12868 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:09:28.515 DEBUG 12868 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:09:28.515 DEBUG 12868 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: java(String), -1(Integer), 1(Integer)
2019-10-30 20:09:28.577 ERROR 12868 --- [http-nio-8080-exec-4] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/admin/blogs/14/delete Exception : {}

org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TagMapper.xml]
### The error may involve com.pan.dao.TagMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update tag     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy84.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57)
	at com.sun.proxy.$Proxy90.updateByPrimaryKey(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy91.updateByPrimaryKey(Unknown Source)
	at com.pan.service.impl.TagServiceImpl.decreaseBlogNum(TagServiceImpl.java:97)
	at com.pan.service.impl.TagServiceImpl$$FastClassBySpringCGLIB$$78c5f932.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.pan.service.impl.TagServiceImpl$$EnhancerBySpringCGLIB$$9164a185.decreaseBlogNum(<generated>)
	at com.pan.controller.BlogController.delete(BlogController.java:197)
	at com.pan.controller.BlogController$$FastClassBySpringCGLIB$$1c3687d2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.BlogController$$EnhancerBySpringCGLIB$$3dcf2936.delete(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy119.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy117.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 93 common frames omitted

2019-10-30 20:09:28.578  WARN 12868 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
### The error may exist in file [E:\javaworkspace\pan-blog\target\classes\mapping\TagMapper.xml]
### The error may involve com.pan.dao.TagMapper.updateByPrimaryKey-Inline
### The error occurred while setting parameters
### SQL: update tag     set name = ?,       blogs = ?     where id = ?
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1
; Data truncation: Out of range value for column 'blogs' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'blogs' at row 1]
2019-10-30 20:09:56.838  INFO 12868 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/15/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[15, {}]}
2019-10-30 20:09:56.839 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:09:56.840 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:09:56.841 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:09:56.844 DEBUG 12868 --- [http-nio-8080-exec-7] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:09:56.845 DEBUG 12868 --- [http-nio-8080-exec-7] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 20:09:56.847 DEBUG 12868 --- [http-nio-8080-exec-7] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:09:56.848 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:09:56.848 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 0(Integer), 2(Integer)
2019-10-30 20:09:56.849 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:09:56.853 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:09:56.853 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 5(Integer)
2019-10-30 20:09:56.854 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:09:56.854 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:09:56.855 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: spring(String), 0(Integer), 5(Integer)
2019-10-30 20:09:56.856 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 20:09:56.858 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 20:09:56.858 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:09:56.859 DEBUG 12868 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 20:09:56.903  INFO 12868 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:09:56.904  INFO 12868 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 66
2019-10-30 20:09:56.915  INFO 12868 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:09:56.916 DEBUG 12868 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:09:56.917 DEBUG 12868 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:09:56.917 DEBUG 12868 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:09:56.918 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:09:56.919 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:09:56.920 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 1
2019-10-30 20:09:56.922 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:09:56.922 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:09:56.923 DEBUG 12868 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:09:56.925 DEBUG 12868 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:09:56.925 DEBUG 12868 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:09:56.927 DEBUG 12868 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:09:56.928  INFO 12868 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:09:56.928  INFO 12868 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:12:41.118  INFO 12868 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:12:41.130 DEBUG 12868 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:12:41.130 DEBUG 12868 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 20:12:41.132 DEBUG 12868 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:12:41.140 DEBUG 12868 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:12:41.141 DEBUG 12868 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:12:41.142 DEBUG 12868 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:12:41.143 DEBUG 12868 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:12:41.143 DEBUG 12868 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:12:41.144 DEBUG 12868 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:12:41.145 DEBUG 12868 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:12:41.145 DEBUG 12868 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:12:41.146 DEBUG 12868 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:12:41.147 DEBUG 12868 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:12:41.147 DEBUG 12868 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:12:41.148 DEBUG 12868 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:12:41.149 DEBUG 12868 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:12:41.149 DEBUG 12868 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:12:41.149 DEBUG 12868 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:12:41.150  INFO 12868 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:12:41.150  INFO 12868 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 32
2019-10-30 20:12:43.308  INFO 12868 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:12:43.312 DEBUG 12868 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:12:43.313 DEBUG 12868 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 1(Integer)
2019-10-30 20:12:43.315 DEBUG 12868 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:12:43.317 DEBUG 12868 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:12:43.317 DEBUG 12868 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:12:43.318 DEBUG 12868 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:12:43.319 DEBUG 12868 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:12:43.320 DEBUG 12868 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:12:43.321 DEBUG 12868 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:12:43.322 DEBUG 12868 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:12:43.323 DEBUG 12868 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:12:43.324 DEBUG 12868 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:12:43.324 DEBUG 12868 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:12:43.324 DEBUG 12868 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:12:43.325 DEBUG 12868 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:12:43.326 DEBUG 12868 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:12:43.326 DEBUG 12868 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:12:43.327 DEBUG 12868 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:12:43.327  INFO 12868 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:12:43.328  INFO 12868 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 20
2019-10-30 20:13:57.915  INFO 12868 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:13:57.926 DEBUG 12868 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:13:57.927 DEBUG 12868 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:13:57.927 DEBUG 12868 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:13:57.929 DEBUG 12868 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:13:57.929 DEBUG 12868 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:13:57.930 DEBUG 12868 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:13:57.931 DEBUG 12868 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:13:57.931 DEBUG 12868 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:13:57.932 DEBUG 12868 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:13:57.936 DEBUG 12868 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:13:57.937 DEBUG 12868 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:13:57.938 DEBUG 12868 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:13:57.938  INFO 12868 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:13:57.939  INFO 12868 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 24
2019-10-30 20:15:05.307  INFO 8364 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 8364 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 20:15:05.309 DEBUG 8364 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 20:15:05.309  INFO 8364 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 20:15:05.350  INFO 8364 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 20:15:05.351  INFO 8364 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 20:15:06.073  INFO 8364 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 20:15:06.116  INFO 8364 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
2019-10-30 20:15:06.554  INFO 8364 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a51f2205] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 20:15:07.020  INFO 8364 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 20:15:07.096  INFO 8364 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 20:15:07.096  INFO 8364 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 20:15:07.208  INFO 8364 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 20:15:07.208  INFO 8364 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1857 ms
2019-10-30 20:15:07.365  INFO 8364 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 20:15:07.654  INFO 8364 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 20:15:08.932  INFO 8364 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 20:15:09.035  INFO 8364 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 20:15:09.798  INFO 8364 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 20:15:09.873  INFO 8364 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 20:15:09.875  INFO 8364 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.31 seconds (JVM running for 6.469)
2019-10-30 20:15:15.094  INFO 8364 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 20:15:15.095  INFO 8364 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 20:15:15.108  INFO 8364 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2019-10-30 20:15:15.141  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:15:15.365 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:15:15.393 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:15:15.419 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:15:15.421 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:15:15.422 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:15:15.424 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:15:15.431 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:15:15.431 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:15:15.433 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:15:15.447 DEBUG 8364 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:15:15.447 DEBUG 8364 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:15:15.448 DEBUG 8364 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:15:15.450  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:15:15.451  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 311
2019-10-30 20:15:18.193  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 20:15:18.200  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 20:15:18.201  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 20:15:24.950  INFO 8364 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.userLogin', args=[pan, 123456, ModelAndView [view=[null]; model=null], org.apache.catalina.session.StandardSessionFacade@40b2353e]}
2019-10-30 20:15:24.964 DEBUG 8364 --- [http-nio-8080-exec-10] com.pan.dao.UserMapper.selectByExample   : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user WHERE ( username = ? ) 
2019-10-30 20:15:24.965 DEBUG 8364 --- [http-nio-8080-exec-10] com.pan.dao.UserMapper.selectByExample   : ==> Parameters: pan(String)
2019-10-30 20:15:24.968 DEBUG 8364 --- [http-nio-8080-exec-10] com.pan.dao.UserMapper.selectByExample   : <==      Total: 1
2019-10-30 20:15:24.970  INFO 8364 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : ModelAndView [view="redirect:/admin/index"; model=null]
2019-10-30 20:15:24.971  INFO 8364 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 21
2019-10-30 20:15:24.983  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/index', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.AdminController.indexPage', args=[]}
2019-10-30 20:15:24.985  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/index
2019-10-30 20:15:24.985  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 2
2019-10-30 20:15:26.681  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:15:26.685 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:15:26.685 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:15:26.686 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:15:26.692 DEBUG 8364 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:15:26.692 DEBUG 8364 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:15:26.693 DEBUG 8364 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:15:26.694  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:15:26.695  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 14
2019-10-30 20:15:28.351  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {}]}
2019-10-30 20:15:28.357 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:15:28.358 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:15:28.359 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:15:28.360  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:15:28.361  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 10
2019-10-30 20:15:29.549  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 20:15:29.554 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:15:29.554 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:15:29.556 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:15:29.557 DEBUG 8364 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:15:29.557 DEBUG 8364 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:15:29.559 DEBUG 8364 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:15:29.561  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:15:29.562  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:15:53.789  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types/5/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.delete', args=[5, {}]}
2019-10-30 20:15:53.790 DEBUG 8364 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.deleteByPrimaryKey  : ==>  Preparing: delete from type where id = ? 
2019-10-30 20:15:53.791 DEBUG 8364 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.deleteByPrimaryKey  : ==> Parameters: 5(Integer)
2019-10-30 20:15:53.792 DEBUG 8364 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 20:15:53.796  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : redirect:/admin/types
2019-10-30 20:15:53.796  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 7
2019-10-30 20:15:53.805  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {message=删除成功}]}
2019-10-30 20:15:53.806 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:15:53.806 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:15:53.807 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:15:53.809 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:15:53.809 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:15:53.811 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 4
2019-10-30 20:15:53.812  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:15:53.813  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 20:15:56.389  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:15:56.390 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:15:56.391 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:15:56.392 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:15:56.394 DEBUG 8364 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:15:56.394 DEBUG 8364 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:15:56.395 DEBUG 8364 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 4
2019-10-30 20:15:56.397  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:15:56.397  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 20:15:58.430  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {}]}
2019-10-30 20:15:58.432 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:15:58.433 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:15:58.434 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:15:58.436  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:15:58.436  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:15:59.948  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 20:15:59.950 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:15:59.950 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:15:59.952 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:15:59.954 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:15:59.954 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:15:59.955 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 4
2019-10-30 20:15:59.956  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:15:59.956  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 20:16:00.854  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {}]}
2019-10-30 20:16:00.855 DEBUG 8364 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:16:00.855 DEBUG 8364 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:16:00.856 DEBUG 8364 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:16:00.857  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:16:00.857  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 3
2019-10-30 20:16:01.911  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 20:16:01.913 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:16:01.913 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:16:01.914 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:16:01.916 DEBUG 8364 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:16:01.916 DEBUG 8364 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:16:01.917 DEBUG 8364 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 4
2019-10-30 20:16:01.919  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:16:01.919  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 20:16:17.071  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {}]}
2019-10-30 20:16:17.072 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:16:17.072 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:16:17.073 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:16:17.074  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:16:17.074  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 3
2019-10-30 20:16:18.700  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.toInputPage', args=[{}]}
2019-10-30 20:16:18.700  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/tags-input
2019-10-30 20:16:18.701  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 1
2019-10-30 20:16:23.669  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.addTag', args=[Tag{id=null, name='spring', blogs=null}, {}]}
2019-10-30 20:16:23.671 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag WHERE ( name = ? ) 
2019-10-30 20:16:23.672 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: spring(String)
2019-10-30 20:16:23.673 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : <==      Total: 0
2019-10-30 20:16:23.675 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.insertSelective    : ==>  Preparing: insert into tag ( name ) values ( ? ) 
2019-10-30 20:16:23.676 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.insertSelective    : ==> Parameters: spring(String)
2019-10-30 20:16:23.676 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.insertSelective    : <==    Updates: 1
2019-10-30 20:16:23.681  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : redirect:/admin/tags
2019-10-30 20:16:23.682  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:16:23.686  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {message=新增成功}]}
2019-10-30 20:16:23.687 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:16:23.687 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:16:23.688 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:16:23.690 DEBUG 8364 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 20:16:23.690 DEBUG 8364 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:16:23.691 DEBUG 8364 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.selectByExample    : <==      Total: 1
2019-10-30 20:16:23.692  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:16:23.692  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:16:57.486  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:16:57.487 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:16:57.487 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:16:57.488 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:16:57.490 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:16:57.490 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:16:57.491 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 4
2019-10-30 20:16:57.492  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:16:57.492  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:16:59.173  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.input', args=[{}]}
2019-10-30 20:16:59.175 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:16:59.176 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:16:59.176 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : <==      Total: 1
2019-10-30 20:16:59.179 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:16:59.179 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:16:59.181 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 4
2019-10-30 20:16:59.182  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:16:59.182  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 9
2019-10-30 20:18:35.744  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=null, uid=null, typeid=null, tagids='6', title='spring事务的传播行为', description='spring的七种事务传播行为', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='', recommend=null, createTime=null, updateTime=null, content='## 事务传播行为介绍

### Spring中的7个事务传播行为:

事务行为	说明
PROPAGATION_REQUIRED	支持当前事务，假设当前没有事务。就新建一个事务
PROPAGATION_SUPPORTS	支持当前事务，假设当前没有事务，就以非事务方式运行
PROPAGATION_MANDATORY	支持当前事务，假设当前没有事务，就抛出异常
PROPAGATION_REQUIRES_NEW	新建事务，假设当前存在事务。把当前事务挂起
PROPAGATION_NOT_SUPPORTED	以非事务方式运行操作。假设当前存在事务，就把当前事务挂起
PROPAGATION_NEVER	以非事务方式运行，假设当前存在事务，则抛出异常
PROPAGATION_NESTED	如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。

Spring异常事务处理机制:

1、事务注解一般用在业务层

2、在业务逻辑中抛出的异常若是被try-catch了，事务是无法回滚的，所以正确的操作是在遇到异常场景需要回滚时，手动抛出RuntimeException(默认情况下Spring 中的事务处理只对RuntimeException 方法进行回滚，所以，如果
将Runtime Exception 替换成普通的Exception 不会产生回滚效果。 )

3、spring中的事务是以AOP为基础的，是应用代理模式实现的

4、Spring实现事务时，提取事务标签的顺序为：方法事务声明-->方法所在类事务声明-->接口方法事务声明-->接口方法所在类事务声明

5、对于事务处理，最重要的是要获取事务对应的属性，如果没有事务对应的属性值，事务将无从处理，事务的所有信息从创建事务开始就保存在transactionInfo中，包括事务回滚都要依赖该信息进行处理。

6、事务回滚处理(Spring处理异常事务机制）
```
(1)事务回滚条件

    Spring事务异常处理机制只会对RuntimeException 和Error 级别的异常执行回滚操作，执行具体回滚的函数如下：

   public boolean rollbackOn(Throwable ex) {
                return (ex instanceof RuntimeException || ex instanceof Error);
   }

  当然我们可以对上述两种类型的异常进行扩展处理，达到自己对指定常的回滚，并利用注解的方式实现

 @Transactional(rollbackFor =  xxxException.class)

(2)事务回滚处理 两步：

    触发器监听函数    

  执行真正的回滚操作，在执行回滚操作的时候要考虑是否有嵌套事务（根据       savePoint来判断，若有嵌套事务，则对嵌套事务单独进行回滚，不回滚外事务。）

(3) 回滚后的信息清除   无论事务是否回滚成功都必须执行

     设置事务状态为完成，避免事务重复执行

     如果当前事务是新的同步状态，则将事务信息从当前线程中清除掉

     释放事务占用的资源(数据库连接资源等)

    如果在当前事务事前有事务挂起，需要将挂起的事务恢复
```', type=Type{id=2, name='null', blogs=null}, tagIds='6'}, org.apache.catalina.session.StandardSessionFacade@40b2353e, {}]}
2019-10-30 20:18:35.753 DEBUG 8364 --- [http-nio-8080-exec-3] com.pan.dao.BlogMapper.insertSelective   : ==>  Preparing: insert into blog ( uid, typeid, tagids, title, description, first_picture, views, published, flag, create_time, update_time, content ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-10-30 20:18:35.756 DEBUG 8364 --- [http-nio-8080-exec-3] com.pan.dao.BlogMapper.insertSelective   : ==> Parameters: 2(Integer), 2(Integer), 6(String), spring事务的传播行为(String), spring的七种事务传播行为(String), a(String), 0(Integer), 1(Integer), 原创(String), 2019-10-30 20:18:35.745(Timestamp), 2019-10-30 20:18:35.745(Timestamp), ## 事务传播行为介绍

### Spring中的7个事务传播行为:

事务行为	说明
PROPAGATION_REQUIRED	支持当前事务，假设当前没有事务。就新建一个事务
PROPAGATION_SUPPORTS	支持当前事务，假设当前没有事务，就以非事务方式运行
PROPAGATION_MANDATORY	支持当前事务，假设当前没有事务，就抛出异常
PROPAGATION_REQUIRES_NEW	新建事务，假设当前存在事务。把当前事务挂起
PROPAGATION_NOT_SUPPORTED	以非事务方式运行操作。假设当前存在事务，就把当前事务挂起
PROPAGATION_NEVER	以非事务方式运行，假设当前存在事务，则抛出异常
PROPAGATION_NESTED	如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。

Spring异常事务处理机制:

1、事务注解一般用在业务层

2、在业务逻辑中抛出的异常若是被try-catch了，事务是无法回滚的，所以正确的操作是在遇到异常场景需要回滚时，手动抛出RuntimeException(默认情况下Spring 中的事务处理只对RuntimeException 方法进行回滚，所以，如果
将Runtime Exception 替换成普通的Exception 不会产生回滚效果。 )

3、spring中的事务是以AOP为基础的，是应用代理模式实现的

4、Spring实现事务时，提取事务标签的顺序为：方法事务声明-->方法所在类事务声明-->接口方法事务声明-->接口方法所在类事务声明

5、对于事务处理，最重要的是要获取事务对应的属性，如果没有事务对应的属性值，事务将无从处理，事务的所有信息从创建事务开始就保存在transactionInfo中，包括事务回滚都要依赖该信息进行处理。

6、事务回滚处理(Spring处理异常事务机制）
```
(1)事务回滚条件

    Spring事务异常处理机制只会对RuntimeException 和Error 级别的异常执行回滚操作，执行具体回滚的函数如下：

   public boolean rollbackOn(Throwable ex) {
                return (ex instanceof RuntimeException || ex instanceof Error);
   }

  当然我们可以对上述两种类型的异常进行扩展处理，达到自己对指定常的回滚，并利用注解的方式实现

 @Transactional(rollbackFor =  xxxException.class)

(2)事务回滚处理 两步：

    触发器监听函数    

  执行真正的回滚操作，在执行回滚操作的时候要考虑是否有嵌套事务（根据       savePoint来判断，若有嵌套事务，则对嵌套事务单独进行回滚，不回滚外事务。）

(3) 回滚后的信息清除   无论事务是否回滚成功都必须执行

     设置事务状态为完成，避免事务重复执行

     如果当前事务是新的同步状态，则将事务信息从当前线程中清除掉

     释放事务占用的资源(数据库连接资源等)

    如果在当前事务事前有事务挂起，需要将挂起的事务恢复
```(String)
2019-10-30 20:18:35.758 DEBUG 8364 --- [http-nio-8080-exec-3] com.pan.dao.BlogMapper.insertSelective   : <==    Updates: 1
2019-10-30 20:18:35.761 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:18:35.762 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 20:18:35.763 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:18:35.764 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:18:35.765 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 1(Integer), 2(Integer)
2019-10-30 20:18:35.766 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:18:35.768 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:18:35.768 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 6(Integer)
2019-10-30 20:18:35.769 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:18:35.770 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:18:35.770 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: spring(String), 1(Integer), 6(Integer)
2019-10-30 20:18:35.771 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 20:18:35.922  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:18:35.922  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 178
2019-10-30 20:18:35.927  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:18:35.928 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:18:35.928 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:18:35.929 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:18:35.930 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:18:35.931 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:18:35.933 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 1
2019-10-30 20:18:35.935 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:18:35.936 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:18:35.936 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:18:35.938 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:18:35.938 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:18:35.939 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 4
2019-10-30 20:18:35.940  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:18:35.940  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:18:59.748  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:18:59.759 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:18:59.759 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:18:59.760 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:18:59.768 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:18:59.768 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:18:59.770 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:18:59.780 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:18:59.780 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:18:59.781 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:18:59.782 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:18:59.782 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:18:59.783 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 4
2019-10-30 20:18:59.784 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:18:59.784 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:18:59.785 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:18:59.787 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:18:59.787 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:18:59.789 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 1
2019-10-30 20:18:59.790 DEBUG 8364 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:18:59.791 DEBUG 8364 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:18:59.791 DEBUG 8364 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:18:59.792  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:18:59.792  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 44
2019-10-30 20:19:03.439  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:19:03.447 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:19:03.448 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:19:03.450 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:03.453 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:19:03.453 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:19:03.454 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:03.455 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:19:03.456 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:19:03.457 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:19:03.458 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:19:03.458 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:19:03.460 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 4
2019-10-30 20:19:03.460 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:19:03.460 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:19:03.461 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:19:03.462 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:19:03.462 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:19:03.463 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 1
2019-10-30 20:19:03.464 DEBUG 8364 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:19:03.465 DEBUG 8364 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:19:03.465 DEBUG 8364 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:19:03.467  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:19:03.467  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 28
2019-10-30 20:19:45.536  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/16/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[16, {}]}
2019-10-30 20:19:45.537 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:19:45.538 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:19:45.538 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : <==      Total: 1
2019-10-30 20:19:45.540 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:19:45.541 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:19:45.542 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 4
2019-10-30 20:19:45.544 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:19:45.544 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 16(Integer)
2019-10-30 20:19:45.545 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:45.547 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:19:45.548 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:19:45.549 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:45.550  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:19:45.550  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 14
2019-10-30 20:19:49.130  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=16, uid=null, typeid=null, tagids='6', title='spring事务的传播行为', description='spring的七种事务传播行为', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=1, createTime=null, updateTime=null, content='## 事务传播行为介绍

### Spring中的7个事务传播行为:

事务行为	说明
PROPAGATION_REQUIRED	支持当前事务，假设当前没有事务。就新建一个事务
PROPAGATION_SUPPORTS	支持当前事务，假设当前没有事务，就以非事务方式运行
PROPAGATION_MANDATORY	支持当前事务，假设当前没有事务，就抛出异常
PROPAGATION_REQUIRES_NEW	新建事务，假设当前存在事务。把当前事务挂起
PROPAGATION_NOT_SUPPORTED	以非事务方式运行操作。假设当前存在事务，就把当前事务挂起
PROPAGATION_NEVER	以非事务方式运行，假设当前存在事务，则抛出异常
PROPAGATION_NESTED	如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。

Spring异常事务处理机制:

1、事务注解一般用在业务层

2、在业务逻辑中抛出的异常若是被try-catch了，事务是无法回滚的，所以正确的操作是在遇到异常场景需要回滚时，手动抛出RuntimeException(默认情况下Spring 中的事务处理只对RuntimeException 方法进行回滚，所以，如果
将Runtime Exception 替换成普通的Exception 不会产生回滚效果。 )

3、spring中的事务是以AOP为基础的，是应用代理模式实现的

4、Spring实现事务时，提取事务标签的顺序为：方法事务声明-->方法所在类事务声明-->接口方法事务声明-->接口方法所在类事务声明

5、对于事务处理，最重要的是要获取事务对应的属性，如果没有事务对应的属性值，事务将无从处理，事务的所有信息从创建事务开始就保存在transactionInfo中，包括事务回滚都要依赖该信息进行处理。

6、事务回滚处理(Spring处理异常事务机制）
```
(1)事务回滚条件

    Spring事务异常处理机制只会对RuntimeException 和Error 级别的异常执行回滚操作，执行具体回滚的函数如下：

   public boolean rollbackOn(Throwable ex) {
                return (ex instanceof RuntimeException || ex instanceof Error);
   }

  当然我们可以对上述两种类型的异常进行扩展处理，达到自己对指定常的回滚，并利用注解的方式实现

 @Transactional(rollbackFor =  xxxException.class)

(2)事务回滚处理 两步：

    触发器监听函数    

  执行真正的回滚操作，在执行回滚操作的时候要考虑是否有嵌套事务（根据       savePoint来判断，若有嵌套事务，则对嵌套事务单独进行回滚，不回滚外事务。）

(3) 回滚后的信息清除   无论事务是否回滚成功都必须执行

     设置事务状态为完成，避免事务重复执行

     如果当前事务是新的同步状态，则将事务信息从当前线程中清除掉

     释放事务占用的资源(数据库连接资源等)

    如果在当前事务事前有事务挂起，需要将挂起的事务恢复
```', type=Type{id=2, name='null', blogs=null}, tagIds='6'}, org.apache.catalina.session.StandardSessionFacade@40b2353e, {}]}
2019-10-30 20:19:49.131 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:19:49.132 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 16(Integer)
2019-10-30 20:19:49.133 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:49.134 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:19:49.135 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 16(Integer)
2019-10-30 20:19:49.136 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:49.137 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, recommend = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 20:19:49.138 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 2(Integer), 6(String), spring事务的传播行为(String), spring的七种事务传播行为(String), a(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 20:19:49.131(Timestamp), 2019-10-30 20:19:49.131(Timestamp), ## 事务传播行为介绍

### Spring中的7个事务传播行为:

事务行为	说明
PROPAGATION_REQUIRED	支持当前事务，假设当前没有事务。就新建一个事务
PROPAGATION_SUPPORTS	支持当前事务，假设当前没有事务，就以非事务方式运行
PROPAGATION_MANDATORY	支持当前事务，假设当前没有事务，就抛出异常
PROPAGATION_REQUIRES_NEW	新建事务，假设当前存在事务。把当前事务挂起
PROPAGATION_NOT_SUPPORTED	以非事务方式运行操作。假设当前存在事务，就把当前事务挂起
PROPAGATION_NEVER	以非事务方式运行，假设当前存在事务，则抛出异常
PROPAGATION_NESTED	如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。

Spring异常事务处理机制:

1、事务注解一般用在业务层

2、在业务逻辑中抛出的异常若是被try-catch了，事务是无法回滚的，所以正确的操作是在遇到异常场景需要回滚时，手动抛出RuntimeException(默认情况下Spring 中的事务处理只对RuntimeException 方法进行回滚，所以，如果
将Runtime Exception 替换成普通的Exception 不会产生回滚效果。 )

3、spring中的事务是以AOP为基础的，是应用代理模式实现的

4、Spring实现事务时，提取事务标签的顺序为：方法事务声明-->方法所在类事务声明-->接口方法事务声明-->接口方法所在类事务声明

5、对于事务处理，最重要的是要获取事务对应的属性，如果没有事务对应的属性值，事务将无从处理，事务的所有信息从创建事务开始就保存在transactionInfo中，包括事务回滚都要依赖该信息进行处理。

6、事务回滚处理(Spring处理异常事务机制）
```
(1)事务回滚条件

    Spring事务异常处理机制只会对RuntimeException 和Error 级别的异常执行回滚操作，执行具体回滚的函数如下：

   public boolean rollbackOn(Throwable ex) {
                return (ex instanceof RuntimeException || ex instanceof Error);
   }

  当然我们可以对上述两种类型的异常进行扩展处理，达到自己对指定常的回滚，并利用注解的方式实现

 @Transactional(rollbackFor =  xxxException.class)

(2)事务回滚处理 两步：

    触发器监听函数    

  执行真正的回滚操作，在执行回滚操作的时候要考虑是否有嵌套事务（根据       savePoint来判断，若有嵌套事务，则对嵌套事务单独进行回滚，不回滚外事务。）

(3) 回滚后的信息清除   无论事务是否回滚成功都必须执行

     设置事务状态为完成，避免事务重复执行

     如果当前事务是新的同步状态，则将事务信息从当前线程中清除掉

     释放事务占用的资源(数据库连接资源等)

    如果在当前事务事前有事务挂起，需要将挂起的事务恢复
```(String), 16(Integer)
2019-10-30 20:19:49.139 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 20:19:49.199  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:19:49.200  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 70
2019-10-30 20:19:49.203  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:19:49.204 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:19:49.204 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:19:49.205 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:19:49.206 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:19:49.207 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:19:49.208 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 1
2019-10-30 20:19:49.210 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:19:49.211 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:19:49.212 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:49.214 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:19:49.214 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:19:49.215 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 4
2019-10-30 20:19:49.216  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:19:49.216  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:19:52.078  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:19:52.088 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:19:52.088 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:19:52.089 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:52.091 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:19:52.092 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:19:52.092 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:52.094 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:19:52.094 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:19:52.095 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:19:52.096 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:19:52.096 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:19:52.097 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 4
2019-10-30 20:19:52.097 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:19:52.098 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:19:52.098 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:19:52.100 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:19:52.100 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:19:52.101 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 1
2019-10-30 20:19:52.102 DEBUG 8364 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:19:52.102 DEBUG 8364 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:19:52.103 DEBUG 8364 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:19:52.104 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:19:52.104 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:19:52.105 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 1
2019-10-30 20:19:52.106  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:19:52.106  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 28
2019-10-30 20:19:54.067  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/16', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[16, {}]}
2019-10-30 20:19:54.068 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:19:54.068 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 16(Integer)
2019-10-30 20:19:54.069 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:54.107 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:19:54.107 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:19:54.108 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:54.110 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:19:54.110 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:19:54.111 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:19:54.112 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 20:19:54.113 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 6(Integer)
2019-10-30 20:19:54.113 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 20:19:54.114  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 20:19:54.114  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 48
2019-10-30 20:19:54.159 ERROR 8364 --- [http-nio-8080-exec-9] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 20:19:54.160  WARN 8364 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 20:20:24.102  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {}]}
2019-10-30 20:20:24.103 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:20:24.103 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:20:24.104 DEBUG 8364 --- [http-nio-8080-exec-9] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:20:24.105 DEBUG 8364 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 20:20:24.105 DEBUG 8364 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:20:24.109 DEBUG 8364 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : <==      Total: 1
2019-10-30 20:20:24.110  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:20:24.110  INFO 8364 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 20:20:25.869  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.toInputPage', args=[{}]}
2019-10-30 20:20:25.869  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/tags-input
2019-10-30 20:20:25.869  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 0
2019-10-30 20:20:35.509  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.addTag', args=[Tag{id=null, name='java多线程', blogs=null}, {}]}
2019-10-30 20:20:35.511 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag WHERE ( name = ? ) 
2019-10-30 20:20:35.512 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: java多线程(String)
2019-10-30 20:20:35.513 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : <==      Total: 0
2019-10-30 20:20:35.513 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.insertSelective    : ==>  Preparing: insert into tag ( name ) values ( ? ) 
2019-10-30 20:20:35.514 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.insertSelective    : ==> Parameters: java多线程(String)
2019-10-30 20:20:35.514 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.insertSelective    : <==    Updates: 1
2019-10-30 20:20:35.516  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : redirect:/admin/tags
2019-10-30 20:20:35.516  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 7
2019-10-30 20:20:35.521  INFO 8364 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {message=新增成功}]}
2019-10-30 20:20:35.522 DEBUG 8364 --- [http-nio-8080-exec-10] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:20:35.522 DEBUG 8364 --- [http-nio-8080-exec-10] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:20:35.523 DEBUG 8364 --- [http-nio-8080-exec-10] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:20:35.524 DEBUG 8364 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 20:20:35.525 DEBUG 8364 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:20:35.525 DEBUG 8364 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : <==      Total: 2
2019-10-30 20:20:35.526  INFO 8364 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:20:35.527  INFO 8364 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:20:37.388  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 20:20:37.390 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:20:37.391 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:20:37.391 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:20:37.392 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:20:37.392 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:20:37.393 DEBUG 8364 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 4
2019-10-30 20:20:37.394  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:20:37.394  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:20:47.029  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.input', args=[{}]}
2019-10-30 20:20:47.029  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/types-input
2019-10-30 20:20:47.029  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 0
2019-10-30 20:20:53.506  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.post', args=[Type{id=null, name='源码分析', blogs=null}, {}]}
2019-10-30 20:20:53.508 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type WHERE ( name = ? ) 
2019-10-30 20:20:53.508 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 源码分析(String)
2019-10-30 20:20:53.509 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 0
2019-10-30 20:20:53.510 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.insertSelective   : ==>  Preparing: insert into type ( name ) values ( ? ) 
2019-10-30 20:20:53.510 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.insertSelective   : ==> Parameters: 源码分析(String)
2019-10-30 20:20:53.511 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.insertSelective   : <==    Updates: 1
2019-10-30 20:20:53.513  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : redirect:/admin/types
2019-10-30 20:20:53.513  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 7
2019-10-30 20:20:53.519  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {message=操作成功}]}
2019-10-30 20:20:53.520 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:20:53.521 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:20:53.521 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:20:53.523 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:20:53.523 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:20:53.524 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:20:53.525  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:20:53.525  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:20:55.792  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:20:55.793 DEBUG 8364 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:20:55.793 DEBUG 8364 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:20:55.794 DEBUG 8364 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:20:55.795 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:20:55.795 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:20:55.797 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 1
2019-10-30 20:20:55.799 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:20:55.799 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:20:55.800 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:20:55.802 DEBUG 8364 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:20:55.802 DEBUG 8364 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:20:55.803 DEBUG 8364 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:20:55.804  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:20:55.804  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 12
2019-10-30 20:20:57.181  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.input', args=[{}]}
2019-10-30 20:20:57.183 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:20:57.183 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:20:57.184 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : <==      Total: 2
2019-10-30 20:20:57.186 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:20:57.186 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:20:57.187 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:20:57.188  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:20:57.188  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 7
2019-10-30 20:25:55.453  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=null, uid=null, typeid=null, tagids='7,6', title='Threadlocal的源码分析', description='ThreadLocal相关原理和方法的源码分析', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='', recommend=null, createTime=null, updateTime=null, content='首先ThreadLocal官网给出的定义是:

    /** This class provides thread-local variables.
    *These variables differ from * their normal counterparts in that each thread that accesses one (via its * {@code get} or {@code set} method) has its own, independently initialized * copy of the variable.
    *{@code ThreadLocal} instances are typically private * static fields in classes that wish to associate state with a thread (e.g., * a user ID or Transaction ID).

意思是这个类时提供给每一个线程的一个变量,每个线程存放在ThreadLocal中的变量都是独立的,不能被其他线程所访问.

set()方法的源码分析
```
/**
     * Sets the current thread's copy of this thread-local variable
     * to the specified value.  Most subclasses will have no need to
     * override this method, relying solely on the {@link #initialValue}
     * method to set the values of thread-locals.
     *
     * @param value the value to be stored in the current thread's copy of
     *        this thread-local.
     */
    public void set(T value) {
        //获取当前线程
        Thread t = Thread.currentThread();
        获取ThreadLocal中的内部类的map
        ThreadLocalMap map = getMap(t);
        //判断获取的map是否为空
        if (map != null)
        //如果存在就直接以当前ThreadLocal为key,value为value插入map
            map.set(this, value);
        else
        //否则创建一个map
            createMap(t, value);
    }
```
set方法实际执行的是Threadlocal里面的一个内部类的set方法
```java
            //ThreadLocalMap的方法
            private void set(ThreadLocal<?> key, Object value) {

            // We don't use a fast path as with get() because it is at
            // least as common to use set() to create new entries as
            // it is to replace existing ones, in which case, a fast
            // path would fail more often than not.

            //获取Entry键值对数组
            Entry[] tab = table;
            //获取数组的长度
            int len = tab.length;
            int i = key.threadLocalHashCode & (len-1);

            //循环遍历找到对应的ThreadLocal
            for (Entry e = tab[i];
                 e != null;
                 e = tab[i = nextIndex(i, len)]) {
                ThreadLocal<?> k = e.get();

            //如果找到该key,就将新的value进行覆盖
                if (k == key) {
                    e.value = value;
                    return;
                }

            //没有找到的话,,就直接将新的key,value插入覆盖
                if (k == null) {
                    //调用该方法进行对原来的key= null的value进行清除,有利于Gc清除
                    replaceStaleEntry(key, value, i);
                    return;
                }
            }

            //如果超过了该Entry[]的size;
            tab[i] = new Entry(key, value);
            //长度++
            int sz = ++size;
            //需要重新获取哈希
            if (!cleanSomeSlots(i, sz) && sz >= threshold)
                rehash();
        }
    
```

当存放的Entry数组的size满了之后就要执行rehash()这里的逻辑
```java
  /**
         * Re-pack and/or re-size the table. First scan the entire
         * table removing stale entries. If this doesn't sufficiently
         * shrink the size of the table, double the table size.
         *先对该table进行一次旧数据的清除,如果清除完成之后还是超过threshold值
         *则将重新调整为原来的两倍
         */
        private void rehash() {
            expungeStaleEntries(); //清除旧数据

            // Use lower threshold for doubling to avoid hysteresis
            if (size >= threshold - threshold / 4)
                resize();
        }
```
当进行完上面的方法之后,就要进行Entry[]数组的扩容
```java
      /**
         * Double the capacity of the table.
         */
        private void resize() {
            Entry[] oldTab = table;
            int oldLen = oldTab.length;
            //调整table长度为原来的两倍
            int newLen = oldLen * 2;
            Entry[] newTab = new Entry[newLen];
            int count = 0;

            //将原来table的Entry全部复制到newTable
            for (int j = 0; j < oldLen; ++j) {
                Entry e = oldTab[j];
                if (e != null) {
                    ThreadLocal<?> k = e.get();
                    //如果key为空,将其value设为null
                    if (k == null) {
                        e.value = null; // Help the GC
                    } else {
                        //获取哈希值
                        int h = k.threadLocalHashCode & (newLen - 1);
                        //如果当前位置已经存放entry
                        while (newTab[h] != null)
                            //线性表往后查询,找到一个没有存放entry的位置h
                            h = nextIndex(h, newLen);
                        newTab[h] = e;
                        count++;
                    }
                }
            }
            //设置新的threadshold值
            setThreshold(newLen);
            //重新设置当前entry[]已经存放数据的长度
            size = count;
            //更新当前Entry[]
            table = newTab;
        }
```

### 二.get方法的源码分析
```java

    //get操作 ThreadMap中的方法
    /**
     * Returns the value in the current thread's copy of this
     * thread-local variable.  If the variable has no value for the
     * current thread, it is first initialized to the value returned
     * by an invocation of the {@link #initialValue} method.
     *
     * @return the current thread's value of this thread-local
     */
    public T get() {
        //获取当前线程
        Thread t = Thread.currentThread();
        //获取当前的map
        ThreadLocalMap map = getMap(t);
        if (map != null) {
            //根据当前threadLocal的对象,获取Entry的对象
            ThreadLocalMap.Entry e = map.getEntry(this);
            //判断是否为空
            if (e != null) {
                @SuppressWarnings("unchecked")
                //如果不为空,则获取对应的值,并且返回
                T result = (T)e.value;
                return result;
            }
        }
        //当map为空和e为空都会进入初始化方法
        return setInitialValue();
    }
```

```java
  /*
    *根据key获取entry
    */
    private Entry getEntry(ThreadLocal<?> key) {
            //获取哈希值,并计算出存放的位置
            int i = key.threadLocalHashCode & (table.length - 1);
            Entry e = table[i];
            //存在Entry就返回,并且entry的key为所需要的key
            if (e != null && e.get() == key)
                return e;
            else
                return getEntryAfterMiss(key, i, e);
        }


        private Entry getEntryAfterMiss(ThreadLocal<?> key, int i, Entry e) {
            Entry[] tab = table;
            int len = tab.length;

            /*
            *循环查找table数组的不为null的entry,并且判断查出来的entry是否是所查找的
            *直到没找到就返回null
            */
            while (e != null) {
                ThreadLocal<?> k = e.get();
                //再次进行检查
                if (k == key)
                    return e;
                if (k == null)
                    //删除当前数组下标的entry
                    expungeStaleEntry(i);
                else
                    //可能原来这个key位置被其他key占用了,避免查看错误,继续递增的找下去
                    i = nextIndex(i, len);
                e = tab[i];
            }
            //如果该table的位置不存在entry则直接返回null
            return null;
        }


    /*
    * 当map不存在时,创建一个map
    */
private T setInitialValue() {
        //初始化的value值为null
        T value = initialValue();
        Thread t = Thread.currentThread();
        ThreadLocalMap map = getMap(t);
        //对当前超线程的map再进一步判断,防止map已经创建了
        if (map != null)
            map.set(this, value);
        else
            createMap(t, value);
        return value;
    }


    public void remove() {
         ThreadLocalMap m = getMap(Thread.currentThread());
         //当map不为空才执行该方法
         if (m != null)
             m.remove(this);
     }


    private void remove(ThreadLocal<?> key) {
            Entry[] tab = table;
            int len = tab.length;

            int i = key.threadLocalHashCode & (len-1);
            //循环遍历与目标可能一样的entry
            for (Entry e = tab[i];
                 e != null;
                 e = tab[i = nextIndex(i, len)]) {
                if (e.get() == key) {
                    //调用Reference的clear方法
                    //原理是将key值为空,利用gc进行回收
                    e.clear();
                    //删除对应的下标的entry数据
                    expungeStaleEntry(i);
                    return;
                }
            }
        }
```', type=Type{id=14, name='null', blogs=null}, tagIds='7,6'}, org.apache.catalina.session.StandardSessionFacade@40b2353e, {}]}
2019-10-30 20:25:55.458 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.BlogMapper.insertSelective   : ==>  Preparing: insert into blog ( uid, typeid, tagids, title, description, first_picture, views, published, flag, create_time, update_time, content ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-10-30 20:25:55.460 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.BlogMapper.insertSelective   : ==> Parameters: 2(Integer), 14(Integer), 7,6(String), Threadlocal的源码分析(String), ThreadLocal相关原理和方法的源码分析(String), a(String), 0(Integer), 1(Integer), 原创(String), 2019-10-30 20:25:55.453(Timestamp), 2019-10-30 20:25:55.453(Timestamp), 首先ThreadLocal官网给出的定义是:

    /** This class provides thread-local variables.
    *These variables differ from * their normal counterparts in that each thread that accesses one (via its * {@code get} or {@code set} method) has its own, independently initialized * copy of the variable.
    *{@code ThreadLocal} instances are typically private * static fields in classes that wish to associate state with a thread (e.g., * a user ID or Transaction ID).

意思是这个类时提供给每一个线程的一个变量,每个线程存放在ThreadLocal中的变量都是独立的,不能被其他线程所访问.

set()方法的源码分析
```
/**
     * Sets the current thread's copy of this thread-local variable
     * to the specified value.  Most subclasses will have no need to
     * override this method, relying solely on the {@link #initialValue}
     * method to set the values of thread-locals.
     *
     * @param value the value to be stored in the current thread's copy of
     *        this thread-local.
     */
    public void set(T value) {
        //获取当前线程
        Thread t = Thread.currentThread();
        获取ThreadLocal中的内部类的map
        ThreadLocalMap map = getMap(t);
        //判断获取的map是否为空
        if (map != null)
        //如果存在就直接以当前ThreadLocal为key,value为value插入map
            map.set(this, value);
        else
        //否则创建一个map
            createMap(t, value);
    }
```
set方法实际执行的是Threadlocal里面的一个内部类的set方法
```java
            //ThreadLocalMap的方法
            private void set(ThreadLocal<?> key, Object value) {

            // We don't use a fast path as with get() because it is at
            // least as common to use set() to create new entries as
            // it is to replace existing ones, in which case, a fast
            // path would fail more often than not.

            //获取Entry键值对数组
            Entry[] tab = table;
            //获取数组的长度
            int len = tab.length;
            int i = key.threadLocalHashCode & (len-1);

            //循环遍历找到对应的ThreadLocal
            for (Entry e = tab[i];
                 e != null;
                 e = tab[i = nextIndex(i, len)]) {
                ThreadLocal<?> k = e.get();

            //如果找到该key,就将新的value进行覆盖
                if (k == key) {
                    e.value = value;
                    return;
                }

            //没有找到的话,,就直接将新的key,value插入覆盖
                if (k == null) {
                    //调用该方法进行对原来的key= null的value进行清除,有利于Gc清除
                    replaceStaleEntry(key, value, i);
                    return;
                }
            }

            //如果超过了该Entry[]的size;
            tab[i] = new Entry(key, value);
            //长度++
            int sz = ++size;
            //需要重新获取哈希
            if (!cleanSomeSlots(i, sz) && sz >= threshold)
                rehash();
        }
    
```

当存放的Entry数组的size满了之后就要执行rehash()这里的逻辑
```java
  /**
         * Re-pack and/or re-size the table. First scan the entire
         * table removing stale entries. If this doesn't sufficiently
         * shrink the size of the table, double the table size.
         *先对该table进行一次旧数据的清除,如果清除完成之后还是超过threshold值
         *则将重新调整为原来的两倍
         */
        private void rehash() {
            expungeStaleEntries(); //清除旧数据

            // Use lower threshold for doubling to avoid hysteresis
            if (size >= threshold - threshold / 4)
                resize();
        }
```
当进行完上面的方法之后,就要进行Entry[]数组的扩容
```java
      /**
         * Double the capacity of the table.
         */
        private void resize() {
            Entry[] oldTab = table;
            int oldLen = oldTab.length;
            //调整table长度为原来的两倍
            int newLen = oldLen * 2;
            Entry[] newTab = new Entry[newLen];
            int count = 0;

            //将原来table的Entry全部复制到newTable
            for (int j = 0; j < oldLen; ++j) {
                Entry e = oldTab[j];
                if (e != null) {
                    ThreadLocal<?> k = e.get();
                    //如果key为空,将其value设为null
                    if (k == null) {
                        e.value = null; // Help the GC
                    } else {
                        //获取哈希值
                        int h = k.threadLocalHashCode & (newLen - 1);
                        //如果当前位置已经存放entry
                        while (newTab[h] != null)
                            //线性表往后查询,找到一个没有存放entry的位置h
                            h = nextIndex(h, newLen);
                        newTab[h] = e;
                        count++;
                    }
                }
            }
            //设置新的threadshold值
            setThreshold(newLen);
            //重新设置当前entry[]已经存放数据的长度
            size = count;
            //更新当前Entry[]
            table = newTab;
        }
```

### 二.get方法的源码分析
```java

    //get操作 ThreadMap中的方法
    /**
     * Returns the value in the current thread's copy of this
     * thread-local variable.  If the variable has no value for the
     * current thread, it is first initialized to the value returned
     * by an invocation of the {@link #initialValue} method.
     *
     * @return the current thread's value of this thread-local
     */
    public T get() {
        //获取当前线程
        Thread t = Thread.currentThread();
        //获取当前的map
        ThreadLocalMap map = getMap(t);
        if (map != null) {
            //根据当前threadLocal的对象,获取Entry的对象
            ThreadLocalMap.Entry e = map.getEntry(this);
            //判断是否为空
            if (e != null) {
                @SuppressWarnings("unchecked")
                //如果不为空,则获取对应的值,并且返回
                T result = (T)e.value;
                return result;
            }
        }
        //当map为空和e为空都会进入初始化方法
        return setInitialValue();
    }
```

```java
  /*
    *根据key获取entry
    */
    private Entry getEntry(ThreadLocal<?> key) {
            //获取哈希值,并计算出存放的位置
            int i = key.threadLocalHashCode & (table.length - 1);
            Entry e = table[i];
            //存在Entry就返回,并且entry的key为所需要的key
            if (e != null && e.get() == key)
                return e;
            else
                return getEntryAfterMiss(key, i, e);
        }


        private Entry getEntryAfterMiss(ThreadLocal<?> key, int i, Entry e) {
            Entry[] tab = table;
            int len = tab.length;

            /*
            *循环查找table数组的不为null的entry,并且判断查出来的entry是否是所查找的
            *直到没找到就返回null
            */
            while (e != null) {
                ThreadLocal<?> k = e.get();
                //再次进行检查
                if (k == key)
                    return e;
                if (k == null)
                    //删除当前数组下标的entry
                    expungeStaleEntry(i);
                else
                    //可能原来这个key位置被其他key占用了,避免查看错误,继续递增的找下去
                    i = nextIndex(i, len);
                e = tab[i];
            }
            //如果该table的位置不存在entry则直接返回null
            return null;
        }


    /*
    * 当map不存在时,创建一个map
    */
private T setInitialValue() {
        //初始化的value值为null
        T value = initialValue();
        Thread t = Thread.currentThread();
        ThreadLocalMap map = getMap(t);
        //对当前超线程的map再进一步判断,防止map已经创建了
        if (map != null)
            map.set(this, value);
        else
            createMap(t, value);
        return value;
    }


    public void remove() {
         ThreadLocalMap m = getMap(Thread.currentThread());
         //当map不为空才执行该方法
         if (m != null)
             m.remove(this);
     }


    private void remove(ThreadLocal<?> key) {
            Entry[] tab = table;
            int len = tab.length;

            int i = key.threadLocalHashCode & (len-1);
            //循环遍历与目标可能一样的entry
            for (Entry e = tab[i];
                 e != null;
                 e = tab[i = nextIndex(i, len)]) {
                if (e.get() == key) {
                    //调用Reference的clear方法
                    //原理是将key值为空,利用gc进行回收
                    e.clear();
                    //删除对应的下标的entry数据
                    expungeStaleEntry(i);
                    return;
                }
            }
        }
```(String)
2019-10-30 20:25:55.461 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.BlogMapper.insertSelective   : <==    Updates: 1
2019-10-30 20:25:55.466 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:25:55.467 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 14(Integer)
2019-10-30 20:25:55.469 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:25:55.470 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:25:55.471 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 源码分析(String), 1(Integer), 14(Integer)
2019-10-30 20:25:55.483 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:25:55.485 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:25:55.485 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 7(Integer)
2019-10-30 20:25:55.486 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:25:55.487 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:25:55.487 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: java多线程(String), 1(Integer), 7(Integer)
2019-10-30 20:25:55.488 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 20:25:55.489 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:25:55.490 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 6(Integer)
2019-10-30 20:25:55.491 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:25:55.491 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:25:55.491 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: spring(String), 2(Integer), 6(Integer)
2019-10-30 20:25:55.499 DEBUG 8364 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 20:25:55.570  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:25:55.570  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 117
2019-10-30 20:25:55.574  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:25:55.574 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:25:55.575 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:25:55.576 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:25:55.577 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:25:55.577 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:25:55.578 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:25:55.580 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:25:55.580 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:25:55.586 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:25:55.588 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:25:55.588 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:25:55.589 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:25:55.590 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:25:55.591 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:25:55.592 DEBUG 8364 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:25:55.593  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:25:55.593  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 20
2019-10-30 20:26:05.014  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:26:05.028 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:26:05.028 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:26:05.031 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:05.033 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:26:05.033 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:26:05.035 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:05.037 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:26:05.037 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:26:05.038 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:05.039 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:26:05.039 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:26:05.039 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:05.041 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:26:05.041 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:26:05.041 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:26:05.042 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:26:05.042 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:26:05.043 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:26:05.043 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:26:05.043 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:26:05.044 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:26:05.046 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:26:05.046 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:26:05.047 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 2
2019-10-30 20:26:05.048 DEBUG 8364 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:26:05.049 DEBUG 8364 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:26:05.049 DEBUG 8364 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:26:05.050 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:26:05.050 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:26:05.051 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 1
2019-10-30 20:26:05.052  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:26:05.052  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 38
2019-10-30 20:26:24.286  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/17/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[17, {}]}
2019-10-30 20:26:24.287 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:26:24.288 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:26:24.288 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : <==      Total: 2
2019-10-30 20:26:24.290 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:26:24.290 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:26:24.291 DEBUG 8364 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:26:24.292 DEBUG 8364 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:26:24.292 DEBUG 8364 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 17(Integer)
2019-10-30 20:26:24.294 DEBUG 8364 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:24.295 DEBUG 8364 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:26:24.296 DEBUG 8364 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:26:24.296 DEBUG 8364 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:24.299  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:26:24.299  INFO 8364 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:26:31.274  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=17, uid=null, typeid=null, tagids='7', title='Threadlocal的源码分析', description='ThreadLocal相关原理和方法的源码分析', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=null, createTime=null, updateTime=null, content='首先ThreadLocal官网给出的定义是:

    /** This class provides thread-local variables.
    *These variables differ from * their normal counterparts in that each thread that accesses one (via its * {@code get} or {@code set} method) has its own, independently initialized * copy of the variable.
    *{@code ThreadLocal} instances are typically private * static fields in classes that wish to associate state with a thread (e.g., * a user ID or Transaction ID).

意思是这个类时提供给每一个线程的一个变量,每个线程存放在ThreadLocal中的变量都是独立的,不能被其他线程所访问.

set()方法的源码分析
```
/**
     * Sets the current thread's copy of this thread-local variable
     * to the specified value.  Most subclasses will have no need to
     * override this method, relying solely on the {@link #initialValue}
     * method to set the values of thread-locals.
     *
     * @param value the value to be stored in the current thread's copy of
     *        this thread-local.
     */
    public void set(T value) {
        //获取当前线程
        Thread t = Thread.currentThread();
        获取ThreadLocal中的内部类的map
        ThreadLocalMap map = getMap(t);
        //判断获取的map是否为空
        if (map != null)
        //如果存在就直接以当前ThreadLocal为key,value为value插入map
            map.set(this, value);
        else
        //否则创建一个map
            createMap(t, value);
    }
```
set方法实际执行的是Threadlocal里面的一个内部类的set方法
```java
            //ThreadLocalMap的方法
            private void set(ThreadLocal<?> key, Object value) {

            // We don't use a fast path as with get() because it is at
            // least as common to use set() to create new entries as
            // it is to replace existing ones, in which case, a fast
            // path would fail more often than not.

            //获取Entry键值对数组
            Entry[] tab = table;
            //获取数组的长度
            int len = tab.length;
            int i = key.threadLocalHashCode & (len-1);

            //循环遍历找到对应的ThreadLocal
            for (Entry e = tab[i];
                 e != null;
                 e = tab[i = nextIndex(i, len)]) {
                ThreadLocal<?> k = e.get();

            //如果找到该key,就将新的value进行覆盖
                if (k == key) {
                    e.value = value;
                    return;
                }

            //没有找到的话,,就直接将新的key,value插入覆盖
                if (k == null) {
                    //调用该方法进行对原来的key= null的value进行清除,有利于Gc清除
                    replaceStaleEntry(key, value, i);
                    return;
                }
            }

            //如果超过了该Entry[]的size;
            tab[i] = new Entry(key, value);
            //长度++
            int sz = ++size;
            //需要重新获取哈希
            if (!cleanSomeSlots(i, sz) && sz >= threshold)
                rehash();
        }
    
```

当存放的Entry数组的size满了之后就要执行rehash()这里的逻辑
```java
  /**
         * Re-pack and/or re-size the table. First scan the entire
         * table removing stale entries. If this doesn't sufficiently
         * shrink the size of the table, double the table size.
         *先对该table进行一次旧数据的清除,如果清除完成之后还是超过threshold值
         *则将重新调整为原来的两倍
         */
        private void rehash() {
            expungeStaleEntries(); //清除旧数据

            // Use lower threshold for doubling to avoid hysteresis
            if (size >= threshold - threshold / 4)
                resize();
        }
```
当进行完上面的方法之后,就要进行Entry[]数组的扩容
```java
      /**
         * Double the capacity of the table.
         */
        private void resize() {
            Entry[] oldTab = table;
            int oldLen = oldTab.length;
            //调整table长度为原来的两倍
            int newLen = oldLen * 2;
            Entry[] newTab = new Entry[newLen];
            int count = 0;

            //将原来table的Entry全部复制到newTable
            for (int j = 0; j < oldLen; ++j) {
                Entry e = oldTab[j];
                if (e != null) {
                    ThreadLocal<?> k = e.get();
                    //如果key为空,将其value设为null
                    if (k == null) {
                        e.value = null; // Help the GC
                    } else {
                        //获取哈希值
                        int h = k.threadLocalHashCode & (newLen - 1);
                        //如果当前位置已经存放entry
                        while (newTab[h] != null)
                            //线性表往后查询,找到一个没有存放entry的位置h
                            h = nextIndex(h, newLen);
                        newTab[h] = e;
                        count++;
                    }
                }
            }
            //设置新的threadshold值
            setThreshold(newLen);
            //重新设置当前entry[]已经存放数据的长度
            size = count;
            //更新当前Entry[]
            table = newTab;
        }
```

### 二.get方法的源码分析
```java

    //get操作 ThreadMap中的方法
    /**
     * Returns the value in the current thread's copy of this
     * thread-local variable.  If the variable has no value for the
     * current thread, it is first initialized to the value returned
     * by an invocation of the {@link #initialValue} method.
     *
     * @return the current thread's value of this thread-local
     */
    public T get() {
        //获取当前线程
        Thread t = Thread.currentThread();
        //获取当前的map
        ThreadLocalMap map = getMap(t);
        if (map != null) {
            //根据当前threadLocal的对象,获取Entry的对象
            ThreadLocalMap.Entry e = map.getEntry(this);
            //判断是否为空
            if (e != null) {
                @SuppressWarnings("unchecked")
                //如果不为空,则获取对应的值,并且返回
                T result = (T)e.value;
                return result;
            }
        }
        //当map为空和e为空都会进入初始化方法
        return setInitialValue();
    }
```

```java
  /*
    *根据key获取entry
    */
    private Entry getEntry(ThreadLocal<?> key) {
            //获取哈希值,并计算出存放的位置
            int i = key.threadLocalHashCode & (table.length - 1);
            Entry e = table[i];
            //存在Entry就返回,并且entry的key为所需要的key
            if (e != null && e.get() == key)
                return e;
            else
                return getEntryAfterMiss(key, i, e);
        }


        private Entry getEntryAfterMiss(ThreadLocal<?> key, int i, Entry e) {
            Entry[] tab = table;
            int len = tab.length;

            /*
            *循环查找table数组的不为null的entry,并且判断查出来的entry是否是所查找的
            *直到没找到就返回null
            */
            while (e != null) {
                ThreadLocal<?> k = e.get();
                //再次进行检查
                if (k == key)
                    return e;
                if (k == null)
                    //删除当前数组下标的entry
                    expungeStaleEntry(i);
                else
                    //可能原来这个key位置被其他key占用了,避免查看错误,继续递增的找下去
                    i = nextIndex(i, len);
                e = tab[i];
            }
            //如果该table的位置不存在entry则直接返回null
            return null;
        }


    /*
    * 当map不存在时,创建一个map
    */
private T setInitialValue() {
        //初始化的value值为null
        T value = initialValue();
        Thread t = Thread.currentThread();
        ThreadLocalMap map = getMap(t);
        //对当前超线程的map再进一步判断,防止map已经创建了
        if (map != null)
            map.set(this, value);
        else
            createMap(t, value);
        return value;
    }


    public void remove() {
         ThreadLocalMap m = getMap(Thread.currentThread());
         //当map不为空才执行该方法
         if (m != null)
             m.remove(this);
     }


    private void remove(ThreadLocal<?> key) {
            Entry[] tab = table;
            int len = tab.length;

            int i = key.threadLocalHashCode & (len-1);
            //循环遍历与目标可能一样的entry
            for (Entry e = tab[i];
                 e != null;
                 e = tab[i = nextIndex(i, len)]) {
                if (e.get() == key) {
                    //调用Reference的clear方法
                    //原理是将key值为空,利用gc进行回收
                    e.clear();
                    //删除对应的下标的entry数据
                    expungeStaleEntry(i);
                    return;
                }
            }
        }
```', type=Type{id=14, name='null', blogs=null}, tagIds='7'}, org.apache.catalina.session.StandardSessionFacade@40b2353e, {}]}
2019-10-30 20:26:31.275 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:26:31.276 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 17(Integer)
2019-10-30 20:26:31.277 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:31.278 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:26:31.278 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 6(Integer)
2019-10-30 20:26:31.279 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:26:31.280 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:26:31.280 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: spring(String), 1(Integer), 6(Integer)
2019-10-30 20:26:31.283 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 20:26:31.284 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:26:31.284 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 17(Integer)
2019-10-30 20:26:31.286 DEBUG 8364 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:31.286 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 20:26:31.287 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 14(Integer), 7(String), Threadlocal的源码分析(String), ThreadLocal相关原理和方法的源码分析(String), a(String), 0(Integer), 1(Integer), 原创(String), 2019-10-30 20:26:31.274(Timestamp), 2019-10-30 20:26:31.274(Timestamp), 首先ThreadLocal官网给出的定义是:

    /** This class provides thread-local variables.
    *These variables differ from * their normal counterparts in that each thread that accesses one (via its * {@code get} or {@code set} method) has its own, independently initialized * copy of the variable.
    *{@code ThreadLocal} instances are typically private * static fields in classes that wish to associate state with a thread (e.g., * a user ID or Transaction ID).

意思是这个类时提供给每一个线程的一个变量,每个线程存放在ThreadLocal中的变量都是独立的,不能被其他线程所访问.

set()方法的源码分析
```
/**
     * Sets the current thread's copy of this thread-local variable
     * to the specified value.  Most subclasses will have no need to
     * override this method, relying solely on the {@link #initialValue}
     * method to set the values of thread-locals.
     *
     * @param value the value to be stored in the current thread's copy of
     *        this thread-local.
     */
    public void set(T value) {
        //获取当前线程
        Thread t = Thread.currentThread();
        获取ThreadLocal中的内部类的map
        ThreadLocalMap map = getMap(t);
        //判断获取的map是否为空
        if (map != null)
        //如果存在就直接以当前ThreadLocal为key,value为value插入map
            map.set(this, value);
        else
        //否则创建一个map
            createMap(t, value);
    }
```
set方法实际执行的是Threadlocal里面的一个内部类的set方法
```java
            //ThreadLocalMap的方法
            private void set(ThreadLocal<?> key, Object value) {

            // We don't use a fast path as with get() because it is at
            // least as common to use set() to create new entries as
            // it is to replace existing ones, in which case, a fast
            // path would fail more often than not.

            //获取Entry键值对数组
            Entry[] tab = table;
            //获取数组的长度
            int len = tab.length;
            int i = key.threadLocalHashCode & (len-1);

            //循环遍历找到对应的ThreadLocal
            for (Entry e = tab[i];
                 e != null;
                 e = tab[i = nextIndex(i, len)]) {
                ThreadLocal<?> k = e.get();

            //如果找到该key,就将新的value进行覆盖
                if (k == key) {
                    e.value = value;
                    return;
                }

            //没有找到的话,,就直接将新的key,value插入覆盖
                if (k == null) {
                    //调用该方法进行对原来的key= null的value进行清除,有利于Gc清除
                    replaceStaleEntry(key, value, i);
                    return;
                }
            }

            //如果超过了该Entry[]的size;
            tab[i] = new Entry(key, value);
            //长度++
            int sz = ++size;
            //需要重新获取哈希
            if (!cleanSomeSlots(i, sz) && sz >= threshold)
                rehash();
        }
    
```

当存放的Entry数组的size满了之后就要执行rehash()这里的逻辑
```java
  /**
         * Re-pack and/or re-size the table. First scan the entire
         * table removing stale entries. If this doesn't sufficiently
         * shrink the size of the table, double the table size.
         *先对该table进行一次旧数据的清除,如果清除完成之后还是超过threshold值
         *则将重新调整为原来的两倍
         */
        private void rehash() {
            expungeStaleEntries(); //清除旧数据

            // Use lower threshold for doubling to avoid hysteresis
            if (size >= threshold - threshold / 4)
                resize();
        }
```
当进行完上面的方法之后,就要进行Entry[]数组的扩容
```java
      /**
         * Double the capacity of the table.
         */
        private void resize() {
            Entry[] oldTab = table;
            int oldLen = oldTab.length;
            //调整table长度为原来的两倍
            int newLen = oldLen * 2;
            Entry[] newTab = new Entry[newLen];
            int count = 0;

            //将原来table的Entry全部复制到newTable
            for (int j = 0; j < oldLen; ++j) {
                Entry e = oldTab[j];
                if (e != null) {
                    ThreadLocal<?> k = e.get();
                    //如果key为空,将其value设为null
                    if (k == null) {
                        e.value = null; // Help the GC
                    } else {
                        //获取哈希值
                        int h = k.threadLocalHashCode & (newLen - 1);
                        //如果当前位置已经存放entry
                        while (newTab[h] != null)
                            //线性表往后查询,找到一个没有存放entry的位置h
                            h = nextIndex(h, newLen);
                        newTab[h] = e;
                        count++;
                    }
                }
            }
            //设置新的threadshold值
            setThreshold(newLen);
            //重新设置当前entry[]已经存放数据的长度
            size = count;
            //更新当前Entry[]
            table = newTab;
        }
```

### 二.get方法的源码分析
```java

    //get操作 ThreadMap中的方法
    /**
     * Returns the value in the current thread's copy of this
     * thread-local variable.  If the variable has no value for the
     * current thread, it is first initialized to the value returned
     * by an invocation of the {@link #initialValue} method.
     *
     * @return the current thread's value of this thread-local
     */
    public T get() {
        //获取当前线程
        Thread t = Thread.currentThread();
        //获取当前的map
        ThreadLocalMap map = getMap(t);
        if (map != null) {
            //根据当前threadLocal的对象,获取Entry的对象
            ThreadLocalMap.Entry e = map.getEntry(this);
            //判断是否为空
            if (e != null) {
                @SuppressWarnings("unchecked")
                //如果不为空,则获取对应的值,并且返回
                T result = (T)e.value;
                return result;
            }
        }
        //当map为空和e为空都会进入初始化方法
        return setInitialValue();
    }
```

```java
  /*
    *根据key获取entry
    */
    private Entry getEntry(ThreadLocal<?> key) {
            //获取哈希值,并计算出存放的位置
            int i = key.threadLocalHashCode & (table.length - 1);
            Entry e = table[i];
            //存在Entry就返回,并且entry的key为所需要的key
            if (e != null && e.get() == key)
                return e;
            else
                return getEntryAfterMiss(key, i, e);
        }


        private Entry getEntryAfterMiss(ThreadLocal<?> key, int i, Entry e) {
            Entry[] tab = table;
            int len = tab.length;

            /*
            *循环查找table数组的不为null的entry,并且判断查出来的entry是否是所查找的
            *直到没找到就返回null
            */
            while (e != null) {
                ThreadLocal<?> k = e.get();
                //再次进行检查
                if (k == key)
                    return e;
                if (k == null)
                    //删除当前数组下标的entry
                    expungeStaleEntry(i);
                else
                    //可能原来这个key位置被其他key占用了,避免查看错误,继续递增的找下去
                    i = nextIndex(i, len);
                e = tab[i];
            }
            //如果该table的位置不存在entry则直接返回null
            return null;
        }


    /*
    * 当map不存在时,创建一个map
    */
private T setInitialValue() {
        //初始化的value值为null
        T value = initialValue();
        Thread t = Thread.currentThread();
        ThreadLocalMap map = getMap(t);
        //对当前超线程的map再进一步判断,防止map已经创建了
        if (map != null)
            map.set(this, value);
        else
            createMap(t, value);
        return value;
    }


    public void remove() {
         ThreadLocalMap m = getMap(Thread.currentThread());
         //当map不为空才执行该方法
         if (m != null)
             m.remove(this);
     }


    private void remove(ThreadLocal<?> key) {
            Entry[] tab = table;
            int len = tab.length;

            int i = key.threadLocalHashCode & (len-1);
            //循环遍历与目标可能一样的entry
            for (Entry e = tab[i];
                 e != null;
                 e = tab[i = nextIndex(i, len)]) {
                if (e.get() == key) {
                    //调用Reference的clear方法
                    //原理是将key值为空,利用gc进行回收
                    e.clear();
                    //删除对应的下标的entry数据
                    expungeStaleEntry(i);
                    return;
                }
            }
        }
```(String), 17(Integer)
2019-10-30 20:26:31.289 DEBUG 8364 --- [http-nio-8080-exec-2] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 20:26:31.380  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:26:31.380  INFO 8364 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 106
2019-10-30 20:26:31.383  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:26:31.384 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:26:31.384 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:26:31.384 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:26:31.385 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:26:31.385 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:26:31.387 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:26:31.388 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:26:31.388 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:26:31.389 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:31.390 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:26:31.390 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:26:31.391 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:31.392 DEBUG 8364 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:26:31.393 DEBUG 8364 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:26:31.394 DEBUG 8364 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:26:31.395  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:26:31.395  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 12
2019-10-30 20:26:38.998  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/17/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.delete', args=[17, {}]}
2019-10-30 20:26:38.999 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:26:38.999 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 17(Integer)
2019-10-30 20:26:39.000 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:39.002 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:26:39.002 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 14(Integer)
2019-10-30 20:26:39.003 DEBUG 8364 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:26:39.003 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:26:39.003 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 源码分析(String), 0(Integer), 14(Integer)
2019-10-30 20:26:39.004 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:26:39.008 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:26:39.009 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 7(Integer)
2019-10-30 20:26:39.009 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:26:39.010 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:26:39.010 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: java多线程(String), 0(Integer), 7(Integer)
2019-10-30 20:26:39.012 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 20:26:39.013 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==>  Preparing: delete from blog where id = ? 
2019-10-30 20:26:39.013 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.deleteByPrimaryKey  : ==> Parameters: 17(Integer)
2019-10-30 20:26:39.013 DEBUG 8364 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.deleteByPrimaryKey  : <==    Updates: 1
2019-10-30 20:26:39.044  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:26:39.044  INFO 8364 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 46
2019-10-30 20:26:39.047  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:26:39.048 DEBUG 8364 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:26:39.048 DEBUG 8364 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:26:39.049 DEBUG 8364 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:26:39.051 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:26:39.052 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:26:39.056 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 1
2019-10-30 20:26:39.058 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:26:39.059 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:26:39.059 DEBUG 8364 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:39.061 DEBUG 8364 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:26:39.061 DEBUG 8364 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:26:39.062 DEBUG 8364 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:26:39.063  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:26:39.063  INFO 8364 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 16
2019-10-30 20:26:46.885  INFO 8364 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:26:46.886 DEBUG 8364 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:26:46.886 DEBUG 8364 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:26:46.887 DEBUG 8364 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:26:46.889 DEBUG 8364 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:26:46.889 DEBUG 8364 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:26:46.891 DEBUG 8364 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 1
2019-10-30 20:26:46.893 DEBUG 8364 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:26:46.893 DEBUG 8364 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:26:46.894 DEBUG 8364 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:46.896 DEBUG 8364 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:26:46.896 DEBUG 8364 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:26:46.896 DEBUG 8364 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:26:46.897  INFO 8364 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:26:46.897  INFO 8364 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 12
2019-10-30 20:26:50.268  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:26:50.269 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:26:50.269 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:26:50.269 DEBUG 8364 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:26:50.270 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:26:50.270 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:26:50.271 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 1
2019-10-30 20:26:50.272 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:26:50.272 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:26:50.273 DEBUG 8364 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:50.276 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:26:50.276 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:26:50.277 DEBUG 8364 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:26:50.278  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:26:50.278  INFO 8364 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 10
2019-10-30 20:26:51.580  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 20:26:51.581 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:26:51.582 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:26:51.582 DEBUG 8364 --- [http-nio-8080-exec-4] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:26:51.584 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:26:51.584 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:26:51.584 DEBUG 8364 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:26:51.585  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:26:51.586  INFO 8364 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:26:52.628  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:26:52.629 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:26:52.629 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:26:52.630 DEBUG 8364 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:26:52.631 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:26:52.631 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:26:52.632 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 1
2019-10-30 20:26:52.634 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:26:52.634 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:26:52.635 DEBUG 8364 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:52.637 DEBUG 8364 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:26:52.637 DEBUG 8364 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:26:52.638 DEBUG 8364 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:26:52.639  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:26:52.639  INFO 8364 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 11
2019-10-30 20:26:54.450  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:26:54.460 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:26:54.460 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:26:54.461 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:54.463 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:26:54.463 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:26:54.464 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:26:54.465 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:26:54.465 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:26:54.466 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:26:54.467 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:26:54.467 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:26:54.467 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:26:54.468 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:26:54.468 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:26:54.469 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:26:54.469 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:26:54.470 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:26:54.470 DEBUG 8364 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 2
2019-10-30 20:26:54.471 DEBUG 8364 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:26:54.472 DEBUG 8364 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:26:54.473 DEBUG 8364 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:26:54.474 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:26:54.474 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:26:54.475 DEBUG 8364 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 1
2019-10-30 20:26:54.475  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:26:54.475  INFO 8364 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 25
2019-10-30 20:29:52.814  INFO 5160 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 5160 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 20:29:52.818 DEBUG 5160 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 20:29:52.819  INFO 5160 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 20:29:52.927  INFO 5160 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 20:29:52.927  INFO 5160 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 20:29:53.765  INFO 5160 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 20:29:53.811  INFO 5160 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
2019-10-30 20:29:54.194  INFO 5160 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6c4b927d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 20:29:54.690  INFO 5160 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 20:29:54.772  INFO 5160 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 20:29:54.773  INFO 5160 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 20:29:54.882  INFO 5160 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 20:29:54.883  INFO 5160 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1956 ms
2019-10-30 20:29:55.037  INFO 5160 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 20:29:55.290  INFO 5160 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 20:29:56.572  INFO 5160 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 20:29:56.678  INFO 5160 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 20:29:57.453  INFO 5160 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 20:29:57.515  INFO 5160 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 20:29:57.519  INFO 5160 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.447 seconds (JVM running for 6.537)
2019-10-30 20:30:34.882  INFO 5160 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 20:30:34.882  INFO 5160 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 20:30:34.898  INFO 5160 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2019-10-30 20:30:34.918  INFO 5160 --- [http-nio-8080-exec-1] com.pan.interceptor.LoginIntercepter     : 用户没登录或者登录过期,请重新登录
2019-10-30 20:30:34.936  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 20:30:34.940  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 20:30:34.940  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:30:39.410  INFO 5160 --- [http-nio-8080-exec-1] com.pan.interceptor.LoginIntercepter     : 用户没登录或者登录过期,请重新登录
2019-10-30 20:30:39.420  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 20:30:39.420  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 20:30:39.420  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 0
2019-10-30 20:31:04.288  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.userLogin', args=[pan, 123456, ModelAndView [view=[null]; model=null], org.apache.catalina.session.StandardSessionFacade@3e87d917]}
2019-10-30 20:31:04.458 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.UserMapper.selectByExample   : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user WHERE ( username = ? ) 
2019-10-30 20:31:04.488 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.UserMapper.selectByExample   : ==> Parameters: pan(String)
2019-10-30 20:31:04.511 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.UserMapper.selectByExample   : <==      Total: 1
2019-10-30 20:31:04.516  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : ModelAndView [view="redirect:/admin/index"; model=null]
2019-10-30 20:31:04.517  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 229
2019-10-30 20:31:04.529  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/index', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.AdminController.indexPage', args=[]}
2019-10-30 20:31:04.532  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/index
2019-10-30 20:31:04.532  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 3
2019-10-30 20:31:05.935  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:31:05.965 DEBUG 5160 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:31:05.966 DEBUG 5160 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:31:05.967 DEBUG 5160 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:31:05.970 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:31:05.972 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:31:05.976 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 1
2019-10-30 20:31:05.980 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:31:05.981 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:31:05.982 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:31:05.984 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:31:05.985 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:31:05.987 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:31:05.989  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:31:05.989  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 54
2019-10-30 20:31:07.943  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:31:07.945 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:31:07.945 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:31:07.947 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:31:07.948 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:31:07.949 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:31:07.950 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 1
2019-10-30 20:31:07.952 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:31:07.953 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:31:07.954 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:31:07.957 DEBUG 5160 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:31:07.957 DEBUG 5160 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:31:07.958 DEBUG 5160 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:31:07.960  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:31:07.960  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 17
2019-10-30 20:33:43.892  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:33:43.897 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:33:43.898 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:33:43.899 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:33:43.900 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:33:43.901 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:33:43.903 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 1
2019-10-30 20:33:43.904 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:33:43.904 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:33:43.905 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:33:43.917 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:33:43.917 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:33:43.920 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:33:43.921  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:33:43.921  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 29
2019-10-30 20:33:44.931  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.input', args=[{}]}
2019-10-30 20:33:44.938 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:33:44.938 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:33:44.940 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : <==      Total: 2
2019-10-30 20:33:44.942 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:33:44.942 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:33:44.943 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:33:44.944  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:33:44.944  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:36:26.910  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=null, uid=null, typeid=null, tagids='7', title='Threadlocal的源码分析', description='ThreadLocal的常用方法源码分析', firstPicture='a', views=null, appreciation=1, shareStatement=null, commentabled=1, published=1, flag='', recommend=1, createTime=null, updateTime=null, content='Threadlocal的源码分析

首先ThreadLocal官网给出的定义是:
```java
    /** This class provides thread-local variables.
    *These variables differ from * their normal counterparts in that each thread that accesses one (via its * {@code get} or {@code set} method) has its own, independently initialized * copy of the variable.
    *{@code ThreadLocal} instances are typically private * static fields in classes that wish to associate state with a thread (e.g., * a user ID or Transaction ID).
	
```

意思是这个类时提供给每一个线程的一个变量,每个线程存放在ThreadLocal中的变量都是独立的,不能被其他线程所访问.

set()方法的源码分析
```java
        /**
         * Sets the current thread's copy of this thread-local variable
         * to the specified value.  Most subclasses will have no need to
         * override this method, relying solely on the {@link #initialValue}
         * method to set the values of thread-locals.
         *
         * @param value the value to be stored in the current thread's copy of
         *        this thread-local.
         */
        public void set(T value) {
            //获取当前线程
            Thread t = Thread.currentThread();
            获取ThreadLocal中的内部类的map
            ThreadLocalMap map = getMap(t);
            //判断获取的map是否为空
            if (map != null)
            //如果存在就直接以当前ThreadLocal为key,value为value插入map
                map.set(this, value);
            else
            //否则创建一个map
                createMap(t, value);
        }
    
```
set方法实际执行的是Threadlocal里面的一个内部类的set方法

```java
                //ThreadLocalMap的方法
                private void set(ThreadLocal<?> key, Object value) {
    
                // We don't use a fast path as with get() because it is at
                // least as common to use set() to create new entries as
                // it is to replace existing ones, in which case, a fast
                // path would fail more often than not.
    
                //获取Entry键值对数组
                Entry[] tab = table;
                //获取数组的长度
                int len = tab.length;
                int i = key.threadLocalHashCode & (len-1);
    
                //循环遍历找到对应的ThreadLocal
                for (Entry e = tab[i];
                     e != null;
                     e = tab[i = nextIndex(i, len)]) {
                    ThreadLocal<?> k = e.get();
    
                //如果找到该key,就将新的value进行覆盖
                    if (k == key) {
                        e.value = value;
                        return;
                    }
    
                //没有找到的话,,就直接将新的key,value插入覆盖
                    if (k == null) {
                        //调用该方法进行对原来的key= null的value进行清除,有利于Gc清除
                        replaceStaleEntry(key, value, i);
                        return;
                    }
                }
    
                //如果超过了该Entry[]的size;
                tab[i] = new Entry(key, value);
                //长度++
                int sz = ++size;
                //需要重新获取哈希
                if (!cleanSomeSlots(i, sz) && sz >= threshold)
                    rehash();
            }
        
```

当存放的Entry数组的size满了之后就要执行rehash()这里的逻辑

```java
            /**
             * Re-pack and/or re-size the table. First scan the entire
             * table removing stale entries. If this doesn't sufficiently
             * shrink the size of the table, double the table size.
             *先对该table进行一次旧数据的清除,如果清除完成之后还是超过threshold值
             *则将重新调整为原来的两倍
             */
            private void rehash() {
                expungeStaleEntries(); //清除旧数据
    
                // Use lower threshold for doubling to avoid hysteresis
                if (size >= threshold - threshold / 4)
                    resize();
            }
```

当进行完上面的方法之后,就要进行Entry[]数组的扩容
```java

           /**
             * Double the capacity of the table.
             */
            private void resize() {
                Entry[] oldTab = table;
                int oldLen = oldTab.length;
                //调整table长度为原来的两倍
                int newLen = oldLen * 2;
                Entry[] newTab = new Entry[newLen];
                int count = 0;
    
                //将原来table的Entry全部复制到newTable
                for (int j = 0; j < oldLen; ++j) {
                    Entry e = oldTab[j];
                    if (e != null) {
                        ThreadLocal<?> k = e.get();
                        //如果key为空,将其value设为null
                        if (k == null) {
                            e.value = null; // Help the GC
                        } else {
                            //获取哈希值
                            int h = k.threadLocalHashCode & (newLen - 1);
                            //如果当前位置已经存放entry
                            while (newTab[h] != null)
                                //线性表往后查询,找到一个没有存放entry的位置h
                                h = nextIndex(h, newLen);
                            newTab[h] = e;
                            count++;
                        }
                    }
                }
                //设置新的threadshold值
                setThreshold(newLen);
                //重新设置当前entry[]已经存放数据的长度
                size = count;
                //更新当前Entry[]
                table = newTab;
            }
```


二.get方法的源码分析

```java
        //get操作 ThreadMap中的方法
        /**
         * Returns the value in the current thread's copy of this
         * thread-local variable.  If the variable has no value for the
         * current thread, it is first initialized to the value returned
         * by an invocation of the {@link #initialValue} method.
         *
         * @return the current thread's value of this thread-local
         */
        public T get() {
            //获取当前线程
            Thread t = Thread.currentThread();
            //获取当前的map
            ThreadLocalMap map = getMap(t);
            if (map != null) {
                //根据当前threadLocal的对象,获取Entry的对象
                ThreadLocalMap.Entry e = map.getEntry(this);
                //判断是否为空
                if (e != null) {
                    @SuppressWarnings("unchecked")
                    //如果不为空,则获取对应的值,并且返回
                    T result = (T)e.value;
                    return result;
                }
            }
            //当map为空和e为空都会进入初始化方法
            return setInitialValue();
        }



        /*
        *根据key获取entry
        */
        private Entry getEntry(ThreadLocal<?> key) {
                //获取哈希值,并计算出存放的位置
                int i = key.threadLocalHashCode & (table.length - 1);
                Entry e = table[i];
                //存在Entry就返回,并且entry的key为所需要的key
                if (e != null && e.get() == key)
                    return e;
                else
                    return getEntryAfterMiss(key, i, e);
            }
    
    
            private Entry getEntryAfterMiss(ThreadLocal<?> key, int i, Entry e) {
                Entry[] tab = table;
                int len = tab.length;
    
                /*
                *循环查找table数组的不为null的entry,并且判断查出来的entry是否是所查找的
                *直到没找到就返回null
                */
                while (e != null) {
                    ThreadLocal<?> k = e.get();
                    //再次进行检查
                    if (k == key)
                        return e;
                    if (k == null)
                        //删除当前数组下标的entry
                        expungeStaleEntry(i);
                    else
                        //可能原来这个key位置被其他key占用了,避免查看错误,继续递增的找下去
                        i = nextIndex(i, len);
                    e = tab[i];
                }
                //如果该table的位置不存在entry则直接返回null
                return null;
            }
    
    
        /*
        * 当map不存在时,创建一个map
        */
    private T setInitialValue() {
            //初始化的value值为null
            T value = initialValue();
            Thread t = Thread.currentThread();
            ThreadLocalMap map = getMap(t);
            //对当前超线程的map再进一步判断,防止map已经创建了
            if (map != null)
                map.set(this, value);
            else
                createMap(t, value);
            return value;
        }
    
    
        public void remove() {
             ThreadLocalMap m = getMap(Thread.currentThread());
             //当map不为空才执行该方法
             if (m != null)
                 m.remove(this);
         }
    
    
        private void remove(ThreadLocal<?> key) {
                Entry[] tab = table;
                int len = tab.length;
    
                int i = key.threadLocalHashCode & (len-1);
                //循环遍历与目标可能一样的entry
                for (Entry e = tab[i];
                     e != null;
                     e = tab[i = nextIndex(i, len)]) {
                    if (e.get() == key) {
                        //调用Reference的clear方法
                        //原理是将key值为空,利用gc进行回收
                        e.clear();
                        //删除对应的下标的entry数据
                        expungeStaleEntry(i);
                        return;
                    }
                }
            }

```', type=Type{id=14, name='null', blogs=null}, tagIds='7'}, org.apache.catalina.session.StandardSessionFacade@3e87d917, {}]}
2019-10-30 20:36:26.929 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.BlogMapper.insertSelective   : ==>  Preparing: insert into blog ( uid, typeid, tagids, title, description, first_picture, views, appreciation, commentabled, published, flag, recommend, create_time, update_time, content ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-10-30 20:36:26.933 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.BlogMapper.insertSelective   : ==> Parameters: 2(Integer), 14(Integer), 7(String), Threadlocal的源码分析(String), ThreadLocal的常用方法源码分析(String), a(String), 0(Integer), 1(Integer), 1(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 20:36:26.911(Timestamp), 2019-10-30 20:36:26.911(Timestamp), Threadlocal的源码分析

首先ThreadLocal官网给出的定义是:
```java
    /** This class provides thread-local variables.
    *These variables differ from * their normal counterparts in that each thread that accesses one (via its * {@code get} or {@code set} method) has its own, independently initialized * copy of the variable.
    *{@code ThreadLocal} instances are typically private * static fields in classes that wish to associate state with a thread (e.g., * a user ID or Transaction ID).
	
```

意思是这个类时提供给每一个线程的一个变量,每个线程存放在ThreadLocal中的变量都是独立的,不能被其他线程所访问.

set()方法的源码分析
```java
        /**
         * Sets the current thread's copy of this thread-local variable
         * to the specified value.  Most subclasses will have no need to
         * override this method, relying solely on the {@link #initialValue}
         * method to set the values of thread-locals.
         *
         * @param value the value to be stored in the current thread's copy of
         *        this thread-local.
         */
        public void set(T value) {
            //获取当前线程
            Thread t = Thread.currentThread();
            获取ThreadLocal中的内部类的map
            ThreadLocalMap map = getMap(t);
            //判断获取的map是否为空
            if (map != null)
            //如果存在就直接以当前ThreadLocal为key,value为value插入map
                map.set(this, value);
            else
            //否则创建一个map
                createMap(t, value);
        }
    
```
set方法实际执行的是Threadlocal里面的一个内部类的set方法

```java
                //ThreadLocalMap的方法
                private void set(ThreadLocal<?> key, Object value) {
    
                // We don't use a fast path as with get() because it is at
                // least as common to use set() to create new entries as
                // it is to replace existing ones, in which case, a fast
                // path would fail more often than not.
    
                //获取Entry键值对数组
                Entry[] tab = table;
                //获取数组的长度
                int len = tab.length;
                int i = key.threadLocalHashCode & (len-1);
    
                //循环遍历找到对应的ThreadLocal
                for (Entry e = tab[i];
                     e != null;
                     e = tab[i = nextIndex(i, len)]) {
                    ThreadLocal<?> k = e.get();
    
                //如果找到该key,就将新的value进行覆盖
                    if (k == key) {
                        e.value = value;
                        return;
                    }
    
                //没有找到的话,,就直接将新的key,value插入覆盖
                    if (k == null) {
                        //调用该方法进行对原来的key= null的value进行清除,有利于Gc清除
                        replaceStaleEntry(key, value, i);
                        return;
                    }
                }
    
                //如果超过了该Entry[]的size;
                tab[i] = new Entry(key, value);
                //长度++
                int sz = ++size;
                //需要重新获取哈希
                if (!cleanSomeSlots(i, sz) && sz >= threshold)
                    rehash();
            }
        
```

当存放的Entry数组的size满了之后就要执行rehash()这里的逻辑

```java
            /**
             * Re-pack and/or re-size the table. First scan the entire
             * table removing stale entries. If this doesn't sufficiently
             * shrink the size of the table, double the table size.
             *先对该table进行一次旧数据的清除,如果清除完成之后还是超过threshold值
             *则将重新调整为原来的两倍
             */
            private void rehash() {
                expungeStaleEntries(); //清除旧数据
    
                // Use lower threshold for doubling to avoid hysteresis
                if (size >= threshold - threshold / 4)
                    resize();
            }
```

当进行完上面的方法之后,就要进行Entry[]数组的扩容
```java

           /**
             * Double the capacity of the table.
             */
            private void resize() {
                Entry[] oldTab = table;
                int oldLen = oldTab.length;
                //调整table长度为原来的两倍
                int newLen = oldLen * 2;
                Entry[] newTab = new Entry[newLen];
                int count = 0;
    
                //将原来table的Entry全部复制到newTable
                for (int j = 0; j < oldLen; ++j) {
                    Entry e = oldTab[j];
                    if (e != null) {
                        ThreadLocal<?> k = e.get();
                        //如果key为空,将其value设为null
                        if (k == null) {
                            e.value = null; // Help the GC
                        } else {
                            //获取哈希值
                            int h = k.threadLocalHashCode & (newLen - 1);
                            //如果当前位置已经存放entry
                            while (newTab[h] != null)
                                //线性表往后查询,找到一个没有存放entry的位置h
                                h = nextIndex(h, newLen);
                            newTab[h] = e;
                            count++;
                        }
                    }
                }
                //设置新的threadshold值
                setThreshold(newLen);
                //重新设置当前entry[]已经存放数据的长度
                size = count;
                //更新当前Entry[]
                table = newTab;
            }
```


二.get方法的源码分析

```java
        //get操作 ThreadMap中的方法
        /**
         * Returns the value in the current thread's copy of this
         * thread-local variable.  If the variable has no value for the
         * current thread, it is first initialized to the value returned
         * by an invocation of the {@link #initialValue} method.
         *
         * @return the current thread's value of this thread-local
         */
        public T get() {
            //获取当前线程
            Thread t = Thread.currentThread();
            //获取当前的map
            ThreadLocalMap map = getMap(t);
            if (map != null) {
                //根据当前threadLocal的对象,获取Entry的对象
                ThreadLocalMap.Entry e = map.getEntry(this);
                //判断是否为空
                if (e != null) {
                    @SuppressWarnings("unchecked")
                    //如果不为空,则获取对应的值,并且返回
                    T result = (T)e.value;
                    return result;
                }
            }
            //当map为空和e为空都会进入初始化方法
            return setInitialValue();
        }



        /*
        *根据key获取entry
        */
        private Entry getEntry(ThreadLocal<?> key) {
                //获取哈希值,并计算出存放的位置
                int i = key.threadLocalHashCode & (table.length - 1);
                Entry e = table[i];
                //存在Entry就返回,并且entry的key为所需要的key
                if (e != null && e.get() == key)
                    return e;
                else
                    return getEntryAfterMiss(key, i, e);
            }
    
    
            private Entry getEntryAfterMiss(ThreadLocal<?> key, int i, Entry e) {
                Entry[] tab = table;
                int len = tab.length;
    
                /*
                *循环查找table数组的不为null的entry,并且判断查出来的entry是否是所查找的
                *直到没找到就返回null
                */
                while (e != null) {
                    ThreadLocal<?> k = e.get();
                    //再次进行检查
                    if (k == key)
                        return e;
                    if (k == null)
                        //删除当前数组下标的entry
                        expungeStaleEntry(i);
                    else
                        //可能原来这个key位置被其他key占用了,避免查看错误,继续递增的找下去
                        i = nextIndex(i, len);
                    e = tab[i];
                }
                //如果该table的位置不存在entry则直接返回null
                return null;
            }
    
    
        /*
        * 当map不存在时,创建一个map
        */
    private T setInitialValue() {
            //初始化的value值为null
            T value = initialValue();
            Thread t = Thread.currentThread();
            ThreadLocalMap map = getMap(t);
            //对当前超线程的map再进一步判断,防止map已经创建了
            if (map != null)
                map.set(this, value);
            else
                createMap(t, value);
            return value;
        }
    
    
        public void remove() {
             ThreadLocalMap m = getMap(Thread.currentThread());
             //当map不为空才执行该方法
             if (m != null)
                 m.remove(this);
         }
    
    
        private void remove(ThreadLocal<?> key) {
                Entry[] tab = table;
                int len = tab.length;
    
                int i = key.threadLocalHashCode & (len-1);
                //循环遍历与目标可能一样的entry
                for (Entry e = tab[i];
                     e != null;
                     e = tab[i = nextIndex(i, len)]) {
                    if (e.get() == key) {
                        //调用Reference的clear方法
                        //原理是将key值为空,利用gc进行回收
                        e.clear();
                        //删除对应的下标的entry数据
                        expungeStaleEntry(i);
                        return;
                    }
                }
            }

```(String)
2019-10-30 20:36:26.935 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.BlogMapper.insertSelective   : <==    Updates: 1
2019-10-30 20:36:26.941 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:36:26.941 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 14(Integer)
2019-10-30 20:36:26.943 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:36:26.944 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:36:26.945 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 源码分析(String), 1(Integer), 14(Integer)
2019-10-30 20:36:26.945 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:36:26.948 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:36:26.948 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 7(Integer)
2019-10-30 20:36:26.949 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:36:26.950 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:36:26.950 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: java多线程(String), 1(Integer), 7(Integer)
2019-10-30 20:36:26.951 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 20:36:27.062  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:36:27.063  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 153
2019-10-30 20:36:27.069  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:36:27.071 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:36:27.071 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:36:27.072 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:36:27.073 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:36:27.074 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:36:27.075 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:36:27.077 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:36:27.077 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:36:27.078 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:36:27.080 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:36:27.080 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:36:27.081 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:36:27.082 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:36:27.082 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:36:27.083 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:36:27.084  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:36:27.084  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 20:36:29.009  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:36:29.025 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:36:29.026 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:36:29.027 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:36:29.028 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:36:29.028 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:36:29.029 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:36:29.032 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:36:29.032 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:36:29.033 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:36:29.035 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:36:29.036 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:36:29.037 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:36:29.040 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:36:29.040 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:36:29.041 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:36:29.042 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:36:29.042 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:36:29.043 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 5
2019-10-30 20:36:29.045 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:36:29.045 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:36:29.046 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:36:29.046 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:36:29.047 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:36:29.048 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 2
2019-10-30 20:36:29.054 DEBUG 5160 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:36:29.055 DEBUG 5160 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:36:29.055 DEBUG 5160 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:36:29.056 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:36:29.056 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:36:29.057 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 2
2019-10-30 20:36:29.058  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:36:29.058  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 49
2019-10-30 20:36:38.529  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/18', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[18, {}]}
2019-10-30 20:36:38.530 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:36:38.531 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 18(Integer)
2019-10-30 20:36:38.533 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:36:38.578 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:36:38.578 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:36:38.579 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:36:38.581 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:36:38.581 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:36:38.582 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:36:38.584 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 20:36:38.584 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 7(Integer)
2019-10-30 20:36:38.584 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 20:36:38.585  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 20:36:38.585  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 56
2019-10-30 20:36:38.639 ERROR 5160 --- [http-nio-8080-exec-6] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 20:36:38.641  WARN 5160 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 20:38:00.844  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {}]}
2019-10-30 20:38:00.852 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:38:00.852 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:38:00.859 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:38:00.861 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 20:38:00.862 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:38:00.863 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : <==      Total: 2
2019-10-30 20:38:00.864  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:38:00.864  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 20
2019-10-30 20:38:03.299  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.toInputPage', args=[{}]}
2019-10-30 20:38:03.300  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/tags-input
2019-10-30 20:38:03.301  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 2
2019-10-30 20:38:06.639  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.addTag', args=[Tag{id=null, name='ssm', blogs=null}, {}]}
2019-10-30 20:38:06.642 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag WHERE ( name = ? ) 
2019-10-30 20:38:06.643 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: ssm(String)
2019-10-30 20:38:06.644 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : <==      Total: 0
2019-10-30 20:38:06.644 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.insertSelective    : ==>  Preparing: insert into tag ( name ) values ( ? ) 
2019-10-30 20:38:06.645 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.insertSelective    : ==> Parameters: ssm(String)
2019-10-30 20:38:06.646 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.insertSelective    : <==    Updates: 1
2019-10-30 20:38:06.648  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : redirect:/admin/tags
2019-10-30 20:38:06.648  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 9
2019-10-30 20:38:06.654  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {message=新增成功}]}
2019-10-30 20:38:06.655 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:38:06.655 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:38:06.656 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:38:06.657 DEBUG 5160 --- [http-nio-8080-exec-6] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 20:38:06.658 DEBUG 5160 --- [http-nio-8080-exec-6] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:38:06.660 DEBUG 5160 --- [http-nio-8080-exec-6] com.pan.dao.TagMapper.selectByExample    : <==      Total: 3
2019-10-30 20:38:06.661  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:38:06.661  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 7
2019-10-30 20:38:07.291  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 20:38:07.295 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:38:07.295 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:38:07.296 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:38:07.298 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:38:07.298 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:38:07.299 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 5
2019-10-30 20:38:07.300  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:38:07.300  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 9
2019-10-30 20:38:08.988  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.input', args=[{}]}
2019-10-30 20:38:08.989  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/types-input
2019-10-30 20:38:08.989  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 1
2019-10-30 20:38:12.273  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.post', args=[Type{id=null, name='ssm', blogs=null}, {}]}
2019-10-30 20:38:12.275 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type WHERE ( name = ? ) 
2019-10-30 20:38:12.275 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: ssm(String)
2019-10-30 20:38:12.276 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 0
2019-10-30 20:38:12.276 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.insertSelective   : ==>  Preparing: insert into type ( name ) values ( ? ) 
2019-10-30 20:38:12.277 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.insertSelective   : ==> Parameters: ssm(String)
2019-10-30 20:38:12.277 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.insertSelective   : <==    Updates: 1
2019-10-30 20:38:12.279  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : redirect:/admin/types
2019-10-30 20:38:12.279  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:38:12.286  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {message=操作成功}]}
2019-10-30 20:38:12.287 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:38:12.287 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:38:12.288 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:38:12.289 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:38:12.289 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:38:12.290 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:38:12.292  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:38:12.292  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:38:13.931  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:38:13.932 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:38:13.932 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:38:13.933 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:38:13.934 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:38:13.934 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:38:13.936 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 2
2019-10-30 20:38:13.938 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:38:13.938 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:38:13.939 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:38:13.940 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:38:13.940 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:38:13.942 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:38:13.944 DEBUG 5160 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:38:13.944 DEBUG 5160 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:38:13.945 DEBUG 5160 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:38:13.946  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:38:13.946  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 20:38:15.667  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.input', args=[{}]}
2019-10-30 20:38:15.669 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:38:15.669 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:38:15.670 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : <==      Total: 3
2019-10-30 20:38:15.672 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:38:15.672 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:38:15.674 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:38:15.674  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:38:15.674  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 7
2019-10-30 20:39:11.759  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=null, uid=null, typeid=null, tagids='8', title='ssm整合回顾', description='ssm整合回顾', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='', recommend=1, createTime=null, updateTime=null, content='Threadlocal的源码分析

首先ThreadLocal官网给出的定义是:

    /** This class provides thread-local variables.
    *These variables differ from * their normal counterparts in that each thread that accesses one (via its * {@code get} or {@code set} method) has its own, independently initialized * copy of the variable.
    *{@code ThreadLocal} instances are typically private * static fields in classes that wish to associate state with a thread (e.g., * a user ID or Transaction ID).

意思是这个类时提供给每一个线程的一个变量,每个线程存放在ThreadLocal中的变量都是独立的,不能被其他线程所访问.

set()方法的源码分析

        /**
         * Sets the current thread's copy of this thread-local variable
         * to the specified value.  Most subclasses will have no need to
         * override this method, relying solely on the {@link #initialValue}
         * method to set the values of thread-locals.
         *
         * @param value the value to be stored in the current thread's copy of
         *        this thread-local.
         */
        public void set(T value) {
            //获取当前线程
            Thread t = Thread.currentThread();
            获取ThreadLocal中的内部类的map
            ThreadLocalMap map = getMap(t);
            //判断获取的map是否为空
            if (map != null)
            //如果存在就直接以当前ThreadLocal为key,value为value插入map
                map.set(this, value);
            else
            //否则创建一个map
                createMap(t, value);
        }
    

set方法实际执行的是Threadlocal里面的一个内部类的set方法

                //ThreadLocalMap的方法
                private void set(ThreadLocal<?> key, Object value) {
    
                // We don't use a fast path as with get() because it is at
                // least as common to use set() to create new entries as
                // it is to replace existing ones, in which case, a fast
                // path would fail more often than not.
    
                //获取Entry键值对数组
                Entry[] tab = table;
                //获取数组的长度
                int len = tab.length;
                int i = key.threadLocalHashCode & (len-1);
    
                //循环遍历找到对应的ThreadLocal
                for (Entry e = tab[i];
                     e != null;
                     e = tab[i = nextIndex(i, len)]) {
                    ThreadLocal<?> k = e.get();
    
                //如果找到该key,就将新的value进行覆盖
                    if (k == key) {
                        e.value = value;
                        return;
                    }
    
                //没有找到的话,,就直接将新的key,value插入覆盖
                    if (k == null) {
                        //调用该方法进行对原来的key= null的value进行清除,有利于Gc清除
                        replaceStaleEntry(key, value, i);
                        return;
                    }
                }
    
                //如果超过了该Entry[]的size;
                tab[i] = new Entry(key, value);
                //长度++
                int sz = ++size;
                //需要重新获取哈希
                if (!cleanSomeSlots(i, sz) && sz >= threshold)
                    rehash();
            }
        

当存放的Entry数组的size满了之后就要执行rehash()这里的逻辑

            /**
             * Re-pack and/or re-size the table. First scan the entire
             * table removing stale entries. If this doesn't sufficiently
             * shrink the size of the table, double the table size.
             *先对该table进行一次旧数据的清除,如果清除完成之后还是超过threshold值
             *则将重新调整为原来的两倍
             */
            private void rehash() {
                expungeStaleEntries(); //清除旧数据
    
                // Use lower threshold for doubling to avoid hysteresis
                if (size >= threshold - threshold / 4)
                    resize();
            }

当进行完上面的方法之后,就要进行Entry[]数组的扩容

           /**
             * Double the capacity of the table.
             */
            private void resize() {
                Entry[] oldTab = table;
                int oldLen = oldTab.length;
                //调整table长度为原来的两倍
                int newLen = oldLen * 2;
                Entry[] newTab = new Entry[newLen];
                int count = 0;
    
                //将原来table的Entry全部复制到newTable
                for (int j = 0; j < oldLen; ++j) {
                    Entry e = oldTab[j];
                    if (e != null) {
                        ThreadLocal<?> k = e.get();
                        //如果key为空,将其value设为null
                        if (k == null) {
                            e.value = null; // Help the GC
                        } else {
                            //获取哈希值
                            int h = k.threadLocalHashCode & (newLen - 1);
                            //如果当前位置已经存放entry
                            while (newTab[h] != null)
                                //线性表往后查询,找到一个没有存放entry的位置h
                                h = nextIndex(h, newLen);
                            newTab[h] = e;
                            count++;
                        }
                    }
                }
                //设置新的threadshold值
                setThreshold(newLen);
                //重新设置当前entry[]已经存放数据的长度
                size = count;
                //更新当前Entry[]
                table = newTab;
            }



二.get方法的源码分析

        //get操作 ThreadMap中的方法
        /**
         * Returns the value in the current thread's copy of this
         * thread-local variable.  If the variable has no value for the
         * current thread, it is first initialized to the value returned
         * by an invocation of the {@link #initialValue} method.
         *
         * @return the current thread's value of this thread-local
         */
        public T get() {
            //获取当前线程
            Thread t = Thread.currentThread();
            //获取当前的map
            ThreadLocalMap map = getMap(t);
            if (map != null) {
                //根据当前threadLocal的对象,获取Entry的对象
                ThreadLocalMap.Entry e = map.getEntry(this);
                //判断是否为空
                if (e != null) {
                    @SuppressWarnings("unchecked")
                    //如果不为空,则获取对应的值,并且返回
                    T result = (T)e.value;
                    return result;
                }
            }
            //当map为空和e为空都会进入初始化方法
            return setInitialValue();
        }



        /*
        *根据key获取entry
        */
        private Entry getEntry(ThreadLocal<?> key) {
                //获取哈希值,并计算出存放的位置
                int i = key.threadLocalHashCode & (table.length - 1);
                Entry e = table[i];
                //存在Entry就返回,并且entry的key为所需要的key
                if (e != null && e.get() == key)
                    return e;
                else
                    return getEntryAfterMiss(key, i, e);
            }
    
    
            private Entry getEntryAfterMiss(ThreadLocal<?> key, int i, Entry e) {
                Entry[] tab = table;
                int len = tab.length;
    
                /*
                *循环查找table数组的不为null的entry,并且判断查出来的entry是否是所查找的
                *直到没找到就返回null
                */
                while (e != null) {
                    ThreadLocal<?> k = e.get();
                    //再次进行检查
                    if (k == key)
                        return e;
                    if (k == null)
                        //删除当前数组下标的entry
                        expungeStaleEntry(i);
                    else
                        //可能原来这个key位置被其他key占用了,避免查看错误,继续递增的找下去
                        i = nextIndex(i, len);
                    e = tab[i];
                }
                //如果该table的位置不存在entry则直接返回null
                return null;
            }
    
    
        /*
        * 当map不存在时,创建一个map
        */
    private T setInitialValue() {
            //初始化的value值为null
            T value = initialValue();
            Thread t = Thread.currentThread();
            ThreadLocalMap map = getMap(t);
            //对当前超线程的map再进一步判断,防止map已经创建了
            if (map != null)
                map.set(this, value);
            else
                createMap(t, value);
            return value;
        }
    
    
        public void remove() {
             ThreadLocalMap m = getMap(Thread.currentThread());
             //当map不为空才执行该方法
             if (m != null)
                 m.remove(this);
         }
    
    
        private void remove(ThreadLocal<?> key) {
                Entry[] tab = table;
                int len = tab.length;
    
                int i = key.threadLocalHashCode & (len-1);
                //循环遍历与目标可能一样的entry
                for (Entry e = tab[i];
                     e != null;
                     e = tab[i = nextIndex(i, len)]) {
                    if (e.get() == key) {
                        //调用Reference的clear方法
                        //原理是将key值为空,利用gc进行回收
                        e.clear();
                        //删除对应的下标的entry数据
                        expungeStaleEntry(i);
                        return;
                    }
                }
            }', type=Type{id=15, name='null', blogs=null}, tagIds='8'}, org.apache.catalina.session.StandardSessionFacade@3e87d917, {}]}
2019-10-30 20:39:11.760 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.BlogMapper.insertSelective   : ==>  Preparing: insert into blog ( uid, typeid, tagids, title, description, first_picture, views, published, flag, recommend, create_time, update_time, content ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-10-30 20:39:11.762 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.BlogMapper.insertSelective   : ==> Parameters: 2(Integer), 15(Integer), 8(String), ssm整合回顾(String), ssm整合回顾(String), a(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 20:39:11.759(Timestamp), 2019-10-30 20:39:11.759(Timestamp), Threadlocal的源码分析

首先ThreadLocal官网给出的定义是:

    /** This class provides thread-local variables.
    *These variables differ from * their normal counterparts in that each thread that accesses one (via its * {@code get} or {@code set} method) has its own, independently initialized * copy of the variable.
    *{@code ThreadLocal} instances are typically private * static fields in classes that wish to associate state with a thread (e.g., * a user ID or Transaction ID).

意思是这个类时提供给每一个线程的一个变量,每个线程存放在ThreadLocal中的变量都是独立的,不能被其他线程所访问.

set()方法的源码分析

        /**
         * Sets the current thread's copy of this thread-local variable
         * to the specified value.  Most subclasses will have no need to
         * override this method, relying solely on the {@link #initialValue}
         * method to set the values of thread-locals.
         *
         * @param value the value to be stored in the current thread's copy of
         *        this thread-local.
         */
        public void set(T value) {
            //获取当前线程
            Thread t = Thread.currentThread();
            获取ThreadLocal中的内部类的map
            ThreadLocalMap map = getMap(t);
            //判断获取的map是否为空
            if (map != null)
            //如果存在就直接以当前ThreadLocal为key,value为value插入map
                map.set(this, value);
            else
            //否则创建一个map
                createMap(t, value);
        }
    

set方法实际执行的是Threadlocal里面的一个内部类的set方法

                //ThreadLocalMap的方法
                private void set(ThreadLocal<?> key, Object value) {
    
                // We don't use a fast path as with get() because it is at
                // least as common to use set() to create new entries as
                // it is to replace existing ones, in which case, a fast
                // path would fail more often than not.
    
                //获取Entry键值对数组
                Entry[] tab = table;
                //获取数组的长度
                int len = tab.length;
                int i = key.threadLocalHashCode & (len-1);
    
                //循环遍历找到对应的ThreadLocal
                for (Entry e = tab[i];
                     e != null;
                     e = tab[i = nextIndex(i, len)]) {
                    ThreadLocal<?> k = e.get();
    
                //如果找到该key,就将新的value进行覆盖
                    if (k == key) {
                        e.value = value;
                        return;
                    }
    
                //没有找到的话,,就直接将新的key,value插入覆盖
                    if (k == null) {
                        //调用该方法进行对原来的key= null的value进行清除,有利于Gc清除
                        replaceStaleEntry(key, value, i);
                        return;
                    }
                }
    
                //如果超过了该Entry[]的size;
                tab[i] = new Entry(key, value);
                //长度++
                int sz = ++size;
                //需要重新获取哈希
                if (!cleanSomeSlots(i, sz) && sz >= threshold)
                    rehash();
            }
        

当存放的Entry数组的size满了之后就要执行rehash()这里的逻辑

            /**
             * Re-pack and/or re-size the table. First scan the entire
             * table removing stale entries. If this doesn't sufficiently
             * shrink the size of the table, double the table size.
             *先对该table进行一次旧数据的清除,如果清除完成之后还是超过threshold值
             *则将重新调整为原来的两倍
             */
            private void rehash() {
                expungeStaleEntries(); //清除旧数据
    
                // Use lower threshold for doubling to avoid hysteresis
                if (size >= threshold - threshold / 4)
                    resize();
            }

当进行完上面的方法之后,就要进行Entry[]数组的扩容

           /**
             * Double the capacity of the table.
             */
            private void resize() {
                Entry[] oldTab = table;
                int oldLen = oldTab.length;
                //调整table长度为原来的两倍
                int newLen = oldLen * 2;
                Entry[] newTab = new Entry[newLen];
                int count = 0;
    
                //将原来table的Entry全部复制到newTable
                for (int j = 0; j < oldLen; ++j) {
                    Entry e = oldTab[j];
                    if (e != null) {
                        ThreadLocal<?> k = e.get();
                        //如果key为空,将其value设为null
                        if (k == null) {
                            e.value = null; // Help the GC
                        } else {
                            //获取哈希值
                            int h = k.threadLocalHashCode & (newLen - 1);
                            //如果当前位置已经存放entry
                            while (newTab[h] != null)
                                //线性表往后查询,找到一个没有存放entry的位置h
                                h = nextIndex(h, newLen);
                            newTab[h] = e;
                            count++;
                        }
                    }
                }
                //设置新的threadshold值
                setThreshold(newLen);
                //重新设置当前entry[]已经存放数据的长度
                size = count;
                //更新当前Entry[]
                table = newTab;
            }



二.get方法的源码分析

        //get操作 ThreadMap中的方法
        /**
         * Returns the value in the current thread's copy of this
         * thread-local variable.  If the variable has no value for the
         * current thread, it is first initialized to the value returned
         * by an invocation of the {@link #initialValue} method.
         *
         * @return the current thread's value of this thread-local
         */
        public T get() {
            //获取当前线程
            Thread t = Thread.currentThread();
            //获取当前的map
            ThreadLocalMap map = getMap(t);
            if (map != null) {
                //根据当前threadLocal的对象,获取Entry的对象
                ThreadLocalMap.Entry e = map.getEntry(this);
                //判断是否为空
                if (e != null) {
                    @SuppressWarnings("unchecked")
                    //如果不为空,则获取对应的值,并且返回
                    T result = (T)e.value;
                    return result;
                }
            }
            //当map为空和e为空都会进入初始化方法
            return setInitialValue();
        }



        /*
        *根据key获取entry
        */
        private Entry getEntry(ThreadLocal<?> key) {
                //获取哈希值,并计算出存放的位置
                int i = key.threadLocalHashCode & (table.length - 1);
                Entry e = table[i];
                //存在Entry就返回,并且entry的key为所需要的key
                if (e != null && e.get() == key)
                    return e;
                else
                    return getEntryAfterMiss(key, i, e);
            }
    
    
            private Entry getEntryAfterMiss(ThreadLocal<?> key, int i, Entry e) {
                Entry[] tab = table;
                int len = tab.length;
    
                /*
                *循环查找table数组的不为null的entry,并且判断查出来的entry是否是所查找的
                *直到没找到就返回null
                */
                while (e != null) {
                    ThreadLocal<?> k = e.get();
                    //再次进行检查
                    if (k == key)
                        return e;
                    if (k == null)
                        //删除当前数组下标的entry
                        expungeStaleEntry(i);
                    else
                        //可能原来这个key位置被其他key占用了,避免查看错误,继续递增的找下去
                        i = nextIndex(i, len);
                    e = tab[i];
                }
                //如果该table的位置不存在entry则直接返回null
                return null;
            }
    
    
        /*
        * 当map不存在时,创建一个map
        */
    private T setInitialValue() {
            //初始化的value值为null
            T value = initialValue();
            Thread t = Thread.currentThread();
            ThreadLocalMap map = getMap(t);
            //对当前超线程的map再进一步判断,防止map已经创建了
            if (map != null)
                map.set(this, value);
            else
                createMap(t, value);
            return value;
        }
    
    
        public void remove() {
             ThreadLocalMap m = getMap(Thread.currentThread());
             //当map不为空才执行该方法
             if (m != null)
                 m.remove(this);
         }
    
    
        private void remove(ThreadLocal<?> key) {
                Entry[] tab = table;
                int len = tab.length;
    
                int i = key.threadLocalHashCode & (len-1);
                //循环遍历与目标可能一样的entry
                for (Entry e = tab[i];
                     e != null;
                     e = tab[i = nextIndex(i, len)]) {
                    if (e.get() == key) {
                        //调用Reference的clear方法
                        //原理是将key值为空,利用gc进行回收
                        e.clear();
                        //删除对应的下标的entry数据
                        expungeStaleEntry(i);
                        return;
                    }
                }
            }(String)
2019-10-30 20:39:11.763 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.BlogMapper.insertSelective   : <==    Updates: 1
2019-10-30 20:39:11.766 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:39:11.767 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 15(Integer)
2019-10-30 20:39:11.768 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:39:11.769 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:39:11.769 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: ssm(String), 1(Integer), 15(Integer)
2019-10-30 20:39:11.770 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:39:11.772 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:39:11.772 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 8(Integer)
2019-10-30 20:39:11.773 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:39:11.774 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:39:11.774 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: ssm(String), 1(Integer), 8(Integer)
2019-10-30 20:39:11.775 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 20:39:11.838  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:39:11.838  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 79
2019-10-30 20:39:11.841  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:39:11.842 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:39:11.842 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:39:11.843 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:39:11.844 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:39:11.845 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:39:11.846 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 3
2019-10-30 20:39:11.848 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:39:11.848 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:39:11.849 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:11.850 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:39:11.851 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:39:11.852 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:11.854 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:39:11.854 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:39:11.854 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:11.856 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:39:11.856 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:39:11.857 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:39:11.858  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:39:11.858  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 17
2019-10-30 20:39:18.499  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:39:18.517 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:39:18.517 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:39:18.518 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:18.520 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:39:18.520 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:39:18.522 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:18.524 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:39:18.525 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:39:18.527 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:18.528 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:39:18.529 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:39:18.529 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:18.531 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:39:18.531 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:39:18.532 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:18.532 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:39:18.532 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:39:18.534 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:18.534 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:39:18.534 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:39:18.534 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:39:18.536 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:39:18.536 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:39:18.536 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 20:39:18.537 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:39:18.537 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:39:18.538 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:39:18.540 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:39:18.540 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:39:18.542 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 3
2019-10-30 20:39:18.543 DEBUG 5160 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:39:18.543 DEBUG 5160 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:39:18.544 DEBUG 5160 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:39:18.544 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:39:18.545 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:39:18.547 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 3
2019-10-30 20:39:18.548  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:39:18.548  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 49
2019-10-30 20:39:20.240  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/19', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[19, {}]}
2019-10-30 20:39:20.242 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:39:20.242 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:39:20.244 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:20.249 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:39:20.249 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:39:20.250 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:20.252 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:39:20.252 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:39:20.253 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:20.256 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 20:39:20.256 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 8(Integer)
2019-10-30 20:39:20.257 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 20:39:20.258  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 20:39:20.258  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 18
2019-10-30 20:39:20.298 ERROR 5160 --- [http-nio-8080-exec-5] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 20:39:20.300  WARN 5160 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 20:39:38.878  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/19/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[19, {}]}
2019-10-30 20:39:38.880 DEBUG 5160 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:39:38.880 DEBUG 5160 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:39:38.881 DEBUG 5160 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : <==      Total: 3
2019-10-30 20:39:38.883 DEBUG 5160 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:39:38.883 DEBUG 5160 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:39:38.884 DEBUG 5160 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:39:38.886 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:39:38.886 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:39:38.888 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:38.889 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:39:38.889 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:39:38.890 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:38.891  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:39:38.891  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:39:43.796  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/19/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[19, {}]}
2019-10-30 20:39:43.797 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:39:43.797 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:39:43.798 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : <==      Total: 3
2019-10-30 20:39:43.801 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:39:43.801 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:39:43.802 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:39:43.804 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:39:43.804 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:39:43.805 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:43.807 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:39:43.807 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:39:43.808 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:39:43.809  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:39:43.809  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:40:19.915  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=19, uid=null, typeid=null, tagids='8', title='ssm整合回顾', description='ssm整合回顾', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=1, createTime=null, updateTime=null, content='SSM整合的回顾



ModelAndView.addObject底层调用request.setAttribute

SSM整合中web.xml配置的原因

spring的相关配置

为什么要在web.xml文件中添加如下语句

    	<!--配置spring -->
    	<context-param>
    		<param-name>contextConfigLocation</param-name>
    		<param-value>classpath:spring/applicationContext-*.xml</param-value>
    	</context-param>
    	<listener>
    		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    	</listener>

首先，在我们web应用中，servlet是由web容器创建的，也就是说servlet不归spring容器来管理，所以在servlet中无法注入spring容器中的bean（service，dao等）。然而在我们的web应用中，servlet要使用spring容器中的service层和dao层，那就必须得拥有spring容器，再调用spring容器的getBean()方法来获得想要的bean。

那么这就有这么个解决方法，在servlet用到spring容器的时候创建一个，可以，这确实行得通，但是！这样的话就会创建出多个spring容器，每次调用都创建一个，注意了，创建spring容器是属于重量级操作，每次都这么来，那谁顶得住啊？
所以我们寻求的是只创建一次spring容器，然后在所有的servlet中都能使用。所以解决方案就是，在web容器创建的时候，把这个spring容器也创建，并且通过servletContext.setAttribute()将spring容器丢进application域中（jsp的四大域：application，session，request，page）。这样，每次使用到的时候就直接从application域中获取那就行了。而且刚好，java web中，有这么一个listener（ServletContextListener）可以监听到容器的创建，所以我们就可以实现该listener接口来完成上述的想法就行了。

我们想到了这个问题，那么spring也想到了，这个listener spring已经给我们提供了，也就是org.springframework.web.context.ContextLoaderListener。所以我们只需要把这个listener在web.xml中注册给web容器就行了。

springmvc的相关配置

整合ssm，还要往web.xml中丢进去这么一段代码

    <!--配置springmvc -->
    	<servlet>
    		<servlet-name>Dispatcher</servlet-name>
    		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    		<init-param>
    			<param-name>contextConfigLocation</param-name>
    			<param-value>classpath:spring/springmvc.xml</param-value>
    		</init-param>
    		<load-on-startup>1</load-on-startup>
    	</servlet>
    	<servlet-mapping>
    		<servlet-name>Dispatcher</servlet-name>
    		<!-- 1:*.do *.action 拦截以.do结尾的请求 (不拦截 jsp png jpg .js .css) 2:/ 拦截所有请求
                  （不拦截.jsp) 建议使用此种 方式 （拦截 .js.css .png) (放行静态资源） 3:/* 拦截所有请求（包括.jsp) 此种方式 不建议使用 -->
    		<url-pattern>/</url-pattern>
    	</servlet-mapping>

观察这段xml配置，可以发现org.springframework.web.servlet.DispatcherServlet在注册给web容器的时候，用的是servlet标签，那也就是说，springmvc的核心类DispatcherServlet其实也就是一个servlet！

现在打开DispatcherServlet的源码来证明他是一个servlet

    public class DispatcherServlet extends FrameworkServlet {
    	//DispatcherServlet继承于FrameworkServlet

进入其父类

    public abstract class FrameworkServlet extends HttpServletBean implements ApplicationContextAware {
    	//FrameworkServlet继承于HttpServletBean

已经可以看到HttpServlet这样的字眼了，继续跟踪父类

    public abstract class HttpServletBean extends HttpServlet implements EnvironmentCapable, EnvironmentAware {
    	//舒服了HttpServlet

如上，DispatcherServlet其实就是一个servlet。

字符编码过滤器

这个就不用多说了，过滤器，处理字符编码问题

    <!--配置乱码过滤器 -->
    	<filter>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    		<init-param>
    			<param-name>encoding</param-name>
    			<param-value>utf-8</param-value>
    		</init-param>
    	</filter>
    	<filter-mapping>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<url-pattern>/*</url-pattern>
    	</filter-mapping>', type=Type{id=15, name='null', blogs=null}, tagIds='8'}, org.apache.catalina.session.StandardSessionFacade@3e87d917, {}]}
2019-10-30 20:40:19.916 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:40:19.917 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:40:19.918 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:19.919 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:40:19.920 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:40:19.923 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:19.924 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, recommend = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 20:40:19.925 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 15(Integer), 8(String), ssm整合回顾(String), ssm整合回顾(String), a(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 20:40:19.915(Timestamp), 2019-10-30 20:40:19.915(Timestamp), SSM整合的回顾



ModelAndView.addObject底层调用request.setAttribute

SSM整合中web.xml配置的原因

spring的相关配置

为什么要在web.xml文件中添加如下语句

    	<!--配置spring -->
    	<context-param>
    		<param-name>contextConfigLocation</param-name>
    		<param-value>classpath:spring/applicationContext-*.xml</param-value>
    	</context-param>
    	<listener>
    		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    	</listener>

首先，在我们web应用中，servlet是由web容器创建的，也就是说servlet不归spring容器来管理，所以在servlet中无法注入spring容器中的bean（service，dao等）。然而在我们的web应用中，servlet要使用spring容器中的service层和dao层，那就必须得拥有spring容器，再调用spring容器的getBean()方法来获得想要的bean。

那么这就有这么个解决方法，在servlet用到spring容器的时候创建一个，可以，这确实行得通，但是！这样的话就会创建出多个spring容器，每次调用都创建一个，注意了，创建spring容器是属于重量级操作，每次都这么来，那谁顶得住啊？
所以我们寻求的是只创建一次spring容器，然后在所有的servlet中都能使用。所以解决方案就是，在web容器创建的时候，把这个spring容器也创建，并且通过servletContext.setAttribute()将spring容器丢进application域中（jsp的四大域：application，session，request，page）。这样，每次使用到的时候就直接从application域中获取那就行了。而且刚好，java web中，有这么一个listener（ServletContextListener）可以监听到容器的创建，所以我们就可以实现该listener接口来完成上述的想法就行了。

我们想到了这个问题，那么spring也想到了，这个listener spring已经给我们提供了，也就是org.springframework.web.context.ContextLoaderListener。所以我们只需要把这个listener在web.xml中注册给web容器就行了。

springmvc的相关配置

整合ssm，还要往web.xml中丢进去这么一段代码

    <!--配置springmvc -->
    	<servlet>
    		<servlet-name>Dispatcher</servlet-name>
    		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    		<init-param>
    			<param-name>contextConfigLocation</param-name>
    			<param-value>classpath:spring/springmvc.xml</param-value>
    		</init-param>
    		<load-on-startup>1</load-on-startup>
    	</servlet>
    	<servlet-mapping>
    		<servlet-name>Dispatcher</servlet-name>
    		<!-- 1:*.do *.action 拦截以.do结尾的请求 (不拦截 jsp png jpg .js .css) 2:/ 拦截所有请求
                  （不拦截.jsp) 建议使用此种 方式 （拦截 .js.css .png) (放行静态资源） 3:/* 拦截所有请求（包括.jsp) 此种方式 不建议使用 -->
    		<url-pattern>/</url-pattern>
    	</servlet-mapping>

观察这段xml配置，可以发现org.springframework.web.servlet.DispatcherServlet在注册给web容器的时候，用的是servlet标签，那也就是说，springmvc的核心类DispatcherServlet其实也就是一个servlet！

现在打开DispatcherServlet的源码来证明他是一个servlet

    public class DispatcherServlet extends FrameworkServlet {
    	//DispatcherServlet继承于FrameworkServlet

进入其父类

    public abstract class FrameworkServlet extends HttpServletBean implements ApplicationContextAware {
    	//FrameworkServlet继承于HttpServletBean

已经可以看到HttpServlet这样的字眼了，继续跟踪父类

    public abstract class HttpServletBean extends HttpServlet implements EnvironmentCapable, EnvironmentAware {
    	//舒服了HttpServlet

如上，DispatcherServlet其实就是一个servlet。

字符编码过滤器

这个就不用多说了，过滤器，处理字符编码问题

    <!--配置乱码过滤器 -->
    	<filter>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    		<init-param>
    			<param-name>encoding</param-name>
    			<param-value>utf-8</param-value>
    		</init-param>
    	</filter>
    	<filter-mapping>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<url-pattern>/*</url-pattern>
    	</filter-mapping>(String), 19(Integer)
2019-10-30 20:40:19.926 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 20:40:19.981  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:40:19.981  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 66
2019-10-30 20:40:19.984  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:40:19.986 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:40:19.986 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:40:19.987 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:40:19.988 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:40:19.988 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:40:19.990 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 3
2019-10-30 20:40:19.992 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:19.992 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:19.993 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:19.994 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:19.994 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:40:19.995 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:19.996 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:19.996 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:40:19.997 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:19.998 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:40:19.998 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:40:19.999 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:40:20.000  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:40:20.000  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 16
2019-10-30 20:40:23.320  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:40:23.330 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:40:23.330 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:23.331 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:23.333 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:23.333 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:40:23.334 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:23.335 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:40:23.336 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:23.336 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:23.337 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:23.338 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:40:23.338 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:23.340 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:40:23.340 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:23.341 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:23.343 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:23.343 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:23.344 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:23.345 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:40:23.345 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:40:23.346 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:40:23.346 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:40:23.347 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:40:23.348 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 20:40:23.348 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:40:23.349 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:40:23.349 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:40:23.350 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:40:23.350 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:40:23.351 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 3
2019-10-30 20:40:23.352 DEBUG 5160 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:40:23.352 DEBUG 5160 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:40:23.352 DEBUG 5160 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:40:23.352 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:40:23.352 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:40:23.353 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 3
2019-10-30 20:40:23.354  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:40:23.354  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 34
2019-10-30 20:40:24.259  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/19', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[19, {}]}
2019-10-30 20:40:24.260 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:40:24.260 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:40:24.261 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:24.265 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:24.265 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:40:24.266 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:24.268 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:40:24.269 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:24.269 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:24.271 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 20:40:24.271 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 8(Integer)
2019-10-30 20:40:24.271 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 20:40:24.272  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 20:40:24.272  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 14
2019-10-30 20:40:24.324 ERROR 5160 --- [http-nio-8080-exec-4] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 20:40:24.325  WARN 5160 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 20:40:30.374  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/19/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[19, {}]}
2019-10-30 20:40:30.377 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:40:30.377 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:40:30.377 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : <==      Total: 3
2019-10-30 20:40:30.380 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:40:30.380 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:40:30.381 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:40:30.383 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:40:30.383 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:40:30.384 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:30.385 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:30.385 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:40:30.386 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:30.387  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:40:30.387  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:40:46.092  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=19, uid=null, typeid=null, tagids='8', title='ssm整合回顾', description='ssm整合回顾', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=1, createTime=null, updateTime=null, content='SSM整合的回顾



ModelAndView.addObject底层调用request.setAttribute

SSM整合中web.xml配置的原因

spring的相关配置

为什么要在web.xml文件中添加如下语句
```xml
    	<!--配置spring -->
    	<context-param>
    		<param-name>contextConfigLocation</param-name>
    		<param-value>classpath:spring/applicationContext-*.xml</param-value>
    	</context-param>
    	<listener>
    		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    	</listener>
```

首先，在我们web应用中，servlet是由web容器创建的，也就是说servlet不归spring容器来管理，所以在servlet中无法注入spring容器中的bean（service，dao等）。然而在我们的web应用中，servlet要使用spring容器中的service层和dao层，那就必须得拥有spring容器，再调用spring容器的getBean()方法来获得想要的bean。

那么这就有这么个解决方法，在servlet用到spring容器的时候创建一个，可以，这确实行得通，但是！这样的话就会创建出多个spring容器，每次调用都创建一个，注意了，创建spring容器是属于重量级操作，每次都这么来，那谁顶得住啊？
所以我们寻求的是只创建一次spring容器，然后在所有的servlet中都能使用。所以解决方案就是，在web容器创建的时候，把这个spring容器也创建，并且通过servletContext.setAttribute()将spring容器丢进application域中（jsp的四大域：application，session，request，page）。这样，每次使用到的时候就直接从application域中获取那就行了。而且刚好，java web中，有这么一个listener（ServletContextListener）可以监听到容器的创建，所以我们就可以实现该listener接口来完成上述的想法就行了。

我们想到了这个问题，那么spring也想到了，这个listener spring已经给我们提供了，也就是org.springframework.web.context.ContextLoaderListener。所以我们只需要把这个listener在web.xml中注册给web容器就行了。

springmvc的相关配置

整合ssm，还要往web.xml中丢进去这么一段代码

    <!--配置springmvc -->
    	<servlet>
    		<servlet-name>Dispatcher</servlet-name>
    		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    		<init-param>
    			<param-name>contextConfigLocation</param-name>
    			<param-value>classpath:spring/springmvc.xml</param-value>
    		</init-param>
    		<load-on-startup>1</load-on-startup>
    	</servlet>
    	<servlet-mapping>
    		<servlet-name>Dispatcher</servlet-name>
    		<!-- 1:*.do *.action 拦截以.do结尾的请求 (不拦截 jsp png jpg .js .css) 2:/ 拦截所有请求
                  （不拦截.jsp) 建议使用此种 方式 （拦截 .js.css .png) (放行静态资源） 3:/* 拦截所有请求（包括.jsp) 此种方式 不建议使用 -->
    		<url-pattern>/</url-pattern>
    	</servlet-mapping>

观察这段xml配置，可以发现org.springframework.web.servlet.DispatcherServlet在注册给web容器的时候，用的是servlet标签，那也就是说，springmvc的核心类DispatcherServlet其实也就是一个servlet！

现在打开DispatcherServlet的源码来证明他是一个servlet

    public class DispatcherServlet extends FrameworkServlet {
    	//DispatcherServlet继承于FrameworkServlet

进入其父类

    public abstract class FrameworkServlet extends HttpServletBean implements ApplicationContextAware {
    	//FrameworkServlet继承于HttpServletBean

已经可以看到HttpServlet这样的字眼了，继续跟踪父类

    public abstract class HttpServletBean extends HttpServlet implements EnvironmentCapable, EnvironmentAware {
    	//舒服了HttpServlet

如上，DispatcherServlet其实就是一个servlet。

字符编码过滤器

这个就不用多说了，过滤器，处理字符编码问题

    <!--配置乱码过滤器 -->
    	<filter>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    		<init-param>
    			<param-name>encoding</param-name>
    			<param-value>utf-8</param-value>
    		</init-param>
    	</filter>
    	<filter-mapping>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<url-pattern>/*</url-pattern>
    	</filter-mapping>', type=Type{id=15, name='null', blogs=null}, tagIds='8'}, org.apache.catalina.session.StandardSessionFacade@3e87d917, {}]}
2019-10-30 20:40:46.095 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:40:46.095 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:40:46.096 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:46.097 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:40:46.098 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:40:46.098 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:46.100 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, recommend = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 20:40:46.101 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 15(Integer), 8(String), ssm整合回顾(String), ssm整合回顾(String), a(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 20:40:46.093(Timestamp), 2019-10-30 20:40:46.093(Timestamp), SSM整合的回顾



ModelAndView.addObject底层调用request.setAttribute

SSM整合中web.xml配置的原因

spring的相关配置

为什么要在web.xml文件中添加如下语句
```xml
    	<!--配置spring -->
    	<context-param>
    		<param-name>contextConfigLocation</param-name>
    		<param-value>classpath:spring/applicationContext-*.xml</param-value>
    	</context-param>
    	<listener>
    		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    	</listener>
```

首先，在我们web应用中，servlet是由web容器创建的，也就是说servlet不归spring容器来管理，所以在servlet中无法注入spring容器中的bean（service，dao等）。然而在我们的web应用中，servlet要使用spring容器中的service层和dao层，那就必须得拥有spring容器，再调用spring容器的getBean()方法来获得想要的bean。

那么这就有这么个解决方法，在servlet用到spring容器的时候创建一个，可以，这确实行得通，但是！这样的话就会创建出多个spring容器，每次调用都创建一个，注意了，创建spring容器是属于重量级操作，每次都这么来，那谁顶得住啊？
所以我们寻求的是只创建一次spring容器，然后在所有的servlet中都能使用。所以解决方案就是，在web容器创建的时候，把这个spring容器也创建，并且通过servletContext.setAttribute()将spring容器丢进application域中（jsp的四大域：application，session，request，page）。这样，每次使用到的时候就直接从application域中获取那就行了。而且刚好，java web中，有这么一个listener（ServletContextListener）可以监听到容器的创建，所以我们就可以实现该listener接口来完成上述的想法就行了。

我们想到了这个问题，那么spring也想到了，这个listener spring已经给我们提供了，也就是org.springframework.web.context.ContextLoaderListener。所以我们只需要把这个listener在web.xml中注册给web容器就行了。

springmvc的相关配置

整合ssm，还要往web.xml中丢进去这么一段代码

    <!--配置springmvc -->
    	<servlet>
    		<servlet-name>Dispatcher</servlet-name>
    		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    		<init-param>
    			<param-name>contextConfigLocation</param-name>
    			<param-value>classpath:spring/springmvc.xml</param-value>
    		</init-param>
    		<load-on-startup>1</load-on-startup>
    	</servlet>
    	<servlet-mapping>
    		<servlet-name>Dispatcher</servlet-name>
    		<!-- 1:*.do *.action 拦截以.do结尾的请求 (不拦截 jsp png jpg .js .css) 2:/ 拦截所有请求
                  （不拦截.jsp) 建议使用此种 方式 （拦截 .js.css .png) (放行静态资源） 3:/* 拦截所有请求（包括.jsp) 此种方式 不建议使用 -->
    		<url-pattern>/</url-pattern>
    	</servlet-mapping>

观察这段xml配置，可以发现org.springframework.web.servlet.DispatcherServlet在注册给web容器的时候，用的是servlet标签，那也就是说，springmvc的核心类DispatcherServlet其实也就是一个servlet！

现在打开DispatcherServlet的源码来证明他是一个servlet

    public class DispatcherServlet extends FrameworkServlet {
    	//DispatcherServlet继承于FrameworkServlet

进入其父类

    public abstract class FrameworkServlet extends HttpServletBean implements ApplicationContextAware {
    	//FrameworkServlet继承于HttpServletBean

已经可以看到HttpServlet这样的字眼了，继续跟踪父类

    public abstract class HttpServletBean extends HttpServlet implements EnvironmentCapable, EnvironmentAware {
    	//舒服了HttpServlet

如上，DispatcherServlet其实就是一个servlet。

字符编码过滤器

这个就不用多说了，过滤器，处理字符编码问题

    <!--配置乱码过滤器 -->
    	<filter>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    		<init-param>
    			<param-name>encoding</param-name>
    			<param-value>utf-8</param-value>
    		</init-param>
    	</filter>
    	<filter-mapping>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<url-pattern>/*</url-pattern>
    	</filter-mapping>(String), 19(Integer)
2019-10-30 20:40:46.104 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 20:40:46.171  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:40:46.171  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 79
2019-10-30 20:40:46.177  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:40:46.178 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:40:46.178 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:40:46.179 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:40:46.180 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:40:46.180 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:40:46.182 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 3
2019-10-30 20:40:46.183 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:46.183 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:46.184 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:46.185 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:46.185 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:40:46.186 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:46.187 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:46.187 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:40:46.188 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:46.190 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:40:46.190 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:40:46.191 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:40:46.192  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:40:46.192  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 20:40:47.644  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:40:47.653 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:40:47.653 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:47.654 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:47.655 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:47.656 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:40:47.656 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:47.658 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:40:47.658 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:47.659 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:47.660 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:47.661 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:40:47.662 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:47.663 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:40:47.663 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:47.664 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:47.665 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:47.666 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:47.667 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:47.668 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:40:47.668 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:40:47.669 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:40:47.669 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:40:47.670 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:40:47.670 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 20:40:47.671 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:40:47.671 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:40:47.671 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:40:47.672 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:40:47.672 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:40:47.673 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 3
2019-10-30 20:40:47.673 DEBUG 5160 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:40:47.673 DEBUG 5160 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:40:47.674 DEBUG 5160 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:40:47.675 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:40:47.675 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:40:47.675 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 3
2019-10-30 20:40:47.676  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:40:47.676  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 32
2019-10-30 20:40:48.520  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/19', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[19, {}]}
2019-10-30 20:40:48.521 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:40:48.521 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:40:48.522 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:48.525 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:48.525 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:40:48.526 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:48.528 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:40:48.528 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:40:48.530 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:48.531 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 20:40:48.531 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 8(Integer)
2019-10-30 20:40:48.532 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 20:40:48.532  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 20:40:48.532  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 12
2019-10-30 20:40:48.563 ERROR 5160 --- [http-nio-8080-exec-1] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 20:40:48.563  WARN 5160 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 20:40:55.176  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/19/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[19, {}]}
2019-10-30 20:40:55.177 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:40:55.177 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:40:55.178 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : <==      Total: 3
2019-10-30 20:40:55.180 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:40:55.180 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:40:55.181 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:40:55.182 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:40:55.182 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:40:55.182 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:55.183 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:40:55.183 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:40:55.183 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:40:55.184  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:40:55.184  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 20:42:01.643  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=19, uid=null, typeid=null, tagids='8', title='ssm整合回顾', description='ssm整合回顾', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=1, createTime=null, updateTime=null, content='SSM整合的回顾



ModelAndView.addObject底层调用request.setAttribute

SSM整合中web.xml配置的原因

spring的相关配置

为什么要在web.xml文件中添加如下语句
```xml
    	<!--配置spring -->
    	<context-param>
    		<param-name>contextConfigLocation</param-name>
    		<param-value>classpath:spring/applicationContext-*.xml</param-value>
    	</context-param>
    	<listener>
    		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    	</listener>
```

首先，在我们web应用中，servlet是由web容器创建的，也就是说servlet不归spring容器来管理，所以在servlet中无法注入spring容器中的bean（service，dao等）。然而在我们的web应用中，servlet要使用spring容器中的service层和dao层，那就必须得拥有spring容器，再调用spring容器的getBean()方法来获得想要的bean。

那么这就有这么个解决方法，在servlet用到spring容器的时候创建一个，可以，这确实行得通，但是！这样的话就会创建出多个spring容器，每次调用都创建一个，注意了，创建spring容器是属于重量级操作，每次都这么来，那谁顶得住啊？
所以我们寻求的是只创建一次spring容器，然后在所有的servlet中都能使用。所以解决方案就是，在web容器创建的时候，把这个spring容器也创建，并且通过servletContext.setAttribute()将spring容器丢进application域中（jsp的四大域：application，session，request，page）。这样，每次使用到的时候就直接从application域中获取那就行了。而且刚好，java web中，有这么一个listener（ServletContextListener）可以监听到容器的创建，所以我们就可以实现该listener接口来完成上述的想法就行了。

我们想到了这个问题，那么spring也想到了，这个listener spring已经给我们提供了，也就是org.springframework.web.context.ContextLoaderListener。所以我们只需要把这个listener在web.xml中注册给web容器就行了。

springmvc的相关配置

整合ssm，还要往web.xml中丢进去这么一段代码

```xml
    <!--配置springmvc -->
    	<servlet>
    		<servlet-name>Dispatcher</servlet-name>
    		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    		<init-param>
    			<param-name>contextConfigLocation</param-name>
    			<param-value>classpath:spring/springmvc.xml</param-value>
    		</init-param>
    		<load-on-startup>1</load-on-startup>
    	</servlet>
    	<servlet-mapping>
    		<servlet-name>Dispatcher</servlet-name>
    		<!-- 1:*.do *.action 拦截以.do结尾的请求 (不拦截 jsp png jpg .js .css) 2:/ 拦截所有请求
                  （不拦截.jsp) 建议使用此种 方式 （拦截 .js.css .png) (放行静态资源） 3:/* 拦截所有请求（包括.jsp) 此种方式 不建议使用 -->
    		<url-pattern>/</url-pattern>
    	</servlet-mapping>
```

观察这段xml配置，可以发现org.springframework.web.servlet.DispatcherServlet在注册给web容器的时候，用的是servlet标签，那也就是说，springmvc的核心类DispatcherServlet其实也就是一个servlet！

现在打开DispatcherServlet的源码来证明他是一个servlet
```java
    public class DispatcherServlet extends FrameworkServlet {
    	//DispatcherServlet继承于FrameworkServlet
```
进入其父类
```java
    public abstract class FrameworkServlet extends HttpServletBean implements ApplicationContextAware {
    	//FrameworkServlet继承于HttpServletBean
```

已经可以看到HttpServlet这样的字眼了，继续跟踪父类
```java
    public abstract class HttpServletBean extends HttpServlet implements EnvironmentCapable, EnvironmentAware {
    	//舒服了HttpServlet
```

如上，DispatcherServlet其实就是一个servlet。

字符编码过滤器

这个就不用多说了，过滤器，处理字符编码问题

```xml
    <!--配置乱码过滤器 -->
    	<filter>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    		<init-param>
    			<param-name>encoding</param-name>
    			<param-value>utf-8</param-value>
    		</init-param>
    	</filter>
    	<filter-mapping>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<url-pattern>/*</url-pattern>
    	</filter-mapping>
```', type=Type{id=15, name='null', blogs=null}, tagIds='8'}, org.apache.catalina.session.StandardSessionFacade@3e87d917, {}]}
2019-10-30 20:42:01.648 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:42:01.648 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:42:01.649 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:01.655 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:42:01.655 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:42:01.655 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:01.656 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, recommend = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 20:42:01.658 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 15(Integer), 8(String), ssm整合回顾(String), ssm整合回顾(String), a(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 20:42:01.643(Timestamp), 2019-10-30 20:42:01.643(Timestamp), SSM整合的回顾



ModelAndView.addObject底层调用request.setAttribute

SSM整合中web.xml配置的原因

spring的相关配置

为什么要在web.xml文件中添加如下语句
```xml
    	<!--配置spring -->
    	<context-param>
    		<param-name>contextConfigLocation</param-name>
    		<param-value>classpath:spring/applicationContext-*.xml</param-value>
    	</context-param>
    	<listener>
    		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    	</listener>
```

首先，在我们web应用中，servlet是由web容器创建的，也就是说servlet不归spring容器来管理，所以在servlet中无法注入spring容器中的bean（service，dao等）。然而在我们的web应用中，servlet要使用spring容器中的service层和dao层，那就必须得拥有spring容器，再调用spring容器的getBean()方法来获得想要的bean。

那么这就有这么个解决方法，在servlet用到spring容器的时候创建一个，可以，这确实行得通，但是！这样的话就会创建出多个spring容器，每次调用都创建一个，注意了，创建spring容器是属于重量级操作，每次都这么来，那谁顶得住啊？
所以我们寻求的是只创建一次spring容器，然后在所有的servlet中都能使用。所以解决方案就是，在web容器创建的时候，把这个spring容器也创建，并且通过servletContext.setAttribute()将spring容器丢进application域中（jsp的四大域：application，session，request，page）。这样，每次使用到的时候就直接从application域中获取那就行了。而且刚好，java web中，有这么一个listener（ServletContextListener）可以监听到容器的创建，所以我们就可以实现该listener接口来完成上述的想法就行了。

我们想到了这个问题，那么spring也想到了，这个listener spring已经给我们提供了，也就是org.springframework.web.context.ContextLoaderListener。所以我们只需要把这个listener在web.xml中注册给web容器就行了。

springmvc的相关配置

整合ssm，还要往web.xml中丢进去这么一段代码

```xml
    <!--配置springmvc -->
    	<servlet>
    		<servlet-name>Dispatcher</servlet-name>
    		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    		<init-param>
    			<param-name>contextConfigLocation</param-name>
    			<param-value>classpath:spring/springmvc.xml</param-value>
    		</init-param>
    		<load-on-startup>1</load-on-startup>
    	</servlet>
    	<servlet-mapping>
    		<servlet-name>Dispatcher</servlet-name>
    		<!-- 1:*.do *.action 拦截以.do结尾的请求 (不拦截 jsp png jpg .js .css) 2:/ 拦截所有请求
                  （不拦截.jsp) 建议使用此种 方式 （拦截 .js.css .png) (放行静态资源） 3:/* 拦截所有请求（包括.jsp) 此种方式 不建议使用 -->
    		<url-pattern>/</url-pattern>
    	</servlet-mapping>
```

观察这段xml配置，可以发现org.springframework.web.servlet.DispatcherServlet在注册给web容器的时候，用的是servlet标签，那也就是说，springmvc的核心类DispatcherServlet其实也就是一个servlet！

现在打开DispatcherServlet的源码来证明他是一个servlet
```java
    public class DispatcherServlet extends FrameworkServlet {
    	//DispatcherServlet继承于FrameworkServlet
```
进入其父类
```java
    public abstract class FrameworkServlet extends HttpServletBean implements ApplicationContextAware {
    	//FrameworkServlet继承于HttpServletBean
```

已经可以看到HttpServlet这样的字眼了，继续跟踪父类
```java
    public abstract class HttpServletBean extends HttpServlet implements EnvironmentCapable, EnvironmentAware {
    	//舒服了HttpServlet
```

如上，DispatcherServlet其实就是一个servlet。

字符编码过滤器

这个就不用多说了，过滤器，处理字符编码问题

```xml
    <!--配置乱码过滤器 -->
    	<filter>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    		<init-param>
    			<param-name>encoding</param-name>
    			<param-value>utf-8</param-value>
    		</init-param>
    	</filter>
    	<filter-mapping>
    		<filter-name>CharacterEncodingFilter</filter-name>
    		<url-pattern>/*</url-pattern>
    	</filter-mapping>
```(String), 19(Integer)
2019-10-30 20:42:01.662 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 20:42:01.724  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:42:01.724  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 81
2019-10-30 20:42:01.727  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:42:01.729 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:42:01.729 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:42:01.730 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:42:01.731 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:42:01.731 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:42:01.733 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 3
2019-10-30 20:42:01.734 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:42:01.735 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:42:01.736 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:01.737 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:42:01.737 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:42:01.738 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:01.739 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:42:01.739 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:42:01.740 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:01.741 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:42:01.742 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:42:01.742 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:42:01.743  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:42:01.743  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 16
2019-10-30 20:42:04.295  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/19', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[19, {}]}
2019-10-30 20:42:04.298 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:42:04.299 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 19(Integer)
2019-10-30 20:42:04.299 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:04.303 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:42:04.303 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:42:04.304 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:04.305 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:42:04.305 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:42:04.306 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:04.307 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 20:42:04.307 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 8(Integer)
2019-10-30 20:42:04.308 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 20:42:04.308  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 20:42:04.308  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:42:04.375 ERROR 5160 --- [http-nio-8080-exec-3] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 20:42:04.376  WARN 5160 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 20:42:12.143  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:42:12.153 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:42:12.153 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:42:12.154 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:12.155 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:42:12.156 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:42:12.156 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:12.157 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:42:12.158 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:42:12.158 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:12.159 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:42:12.159 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:42:12.161 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:12.161 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:42:12.162 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:42:12.162 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:12.164 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:42:12.164 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:42:12.165 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:42:12.166 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:42:12.166 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:42:12.167 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:42:12.167 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:42:12.167 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:42:12.168 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 20:42:12.168 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:42:12.169 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:42:12.169 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:42:12.170 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:42:12.170 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:42:12.171 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 3
2019-10-30 20:42:12.171 DEBUG 5160 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:42:12.172 DEBUG 5160 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:42:12.172 DEBUG 5160 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:42:12.172 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:42:12.172 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:42:12.173 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 3
2019-10-30 20:42:12.174  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:42:12.174  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 31
2019-10-30 20:43:09.479  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.input', args=[{}]}
2019-10-30 20:43:09.480 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:43:09.480 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:43:09.481 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TagMapper.selectByExample    : <==      Total: 3
2019-10-30 20:43:09.482 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:43:09.482 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:43:09.483 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:43:09.484  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:43:09.484  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 20:49:36.939  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=null, uid=null, typeid=null, tagids='6', title='spring容器初始化源码分析', description='spring容器初始化过程', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='', recommend=1, createTime=null, updateTime=null, content='## Spring容器的初始化过程
流程图:



### 1.执行构造函数,实例化一个容器对象:
```java
    //创建容器对象,并且从spring的所有配置文件中加载definitions
    public ClassPathXmlApplicationContext(String[] configLocations, boolean refresh, ApplicationContext parent)
    			throws BeansException {
    		//使用parent创建
    		super(parent);
        	//将spring有关的配置文件都设置到configLocations
    		setConfigLocations(configLocations);
    		if (refresh) {
                //刷新容器
    			refresh();
    		}
    	}
```

### 2.刷新创建的ClasspathXmlApplicationContext
```java
    	@Override
    	public void refresh() throws BeansException, IllegalStateException {
    		synchronized (this.startupShutdownMonitor) {
    			// 1.Prepare this context for refreshing.刷新容器前的预处理
                 //设置容器的启动时间和加载自定义的一些数据配置文件:*.properties.......
    			prepareRefresh();
    
    			// Tell the subclass to refresh the internal bean factory.
                 // 2.
                 //	   (a)创建ioc容器 (DefaultListableBeanFactory)
                 //    (b)加载xml的信息 (最后转存为Document对象)
                 //    (c)对Document对象解析,在这里完成对BeanDefinition的注册和加载
    			ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
    
    			// Prepare the bean factory for use in this context.
                 // 3.对IOC容器的一些预处理
    			prepareBeanFactory(beanFactory);
    
    			try {
    				// Allows post-processing of the bean factory in context subclasses.
                     // STEP 4： 允许在AbstractApplicationContext的子类中对BeanFactory进行后置处理，                        //      postProcessBeanFactory()这个方法是个空实现。
    				postProcessBeanFactory(beanFactory);
    
                      //STEP 5： 调用BeanFactoryPostProcessor后置处理器处理BeanFactory的实例                                     （BeanDefinition）
    				// Invoke factory processors registered as beans in the context.
    				invokeBeanFactoryPostProcessors(beanFactory);
    
    				// Register bean processors that intercept bean creation.
    				//STEP6  1.注册BeanPostProcessor后置处理器
                      //  2.b）BeanPostProcessors后置处理器用于拦截bean的创建，对创建后的bean实例进行处理
                    registerBeanPostProcessors(beanFactory);
    
    				// Initialize message source for this context.
                     //STEP7 :初始化一些消息资源
    				initMessageSource();
    
    				// Initialize event multicaster for this context.
                     // STEP 8： 
                     //      a)  初始化应用事件广播器
                     //      b)  表明Spring内部基于事件机制
    				initApplicationEventMulticaster();
    
    				// Initialize other special beans in specific context subclasses.
                     //STEP9
                     //初始化一些特殊的bean
    				onRefresh();
    
    				// Check for listener beans and register them.
                     //STEP10 :
                     // 遍历寻找listener并且注册
    				registerListeners();
    
    				// Instantiate all remaining (non-lazy-init) singletons.
                     //STEP11
                     //       实例化剩余(非实例化的)bean
    				finishBeanFactoryInitialization(beanFactory);
    
    				// Last step: publish corresponding event.
                     //STEP12 : 完成容器的刷新,并且发布对应的事件
    				finishRefresh();
    			}
    
    			catch (BeansException ex) {
    				if (logger.isWarnEnabled()) {
    					logger.warn("Exception encountered during context initialization - " +
    							"cancelling refresh attempt: " + ex);
    				}
    
    				// Destroy already created singletons to avoid dangling resources.
    				destroyBeans();
    
    				// Reset 'active' flag.
    				cancelRefresh(ex);
    
    				// Propagate exception to caller.
    				throw ex;
    			}
    
    			finally {
    				// Reset common introspection caches in Spring's core, since we
    				// might not ever need metadata for singleton beans anymore...
    				resetCommonCaches();
    			}
    		}
    	}
    
```

### 创建Beanfactory的源码分析
```java
    ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
```

### 进入AbstractApplication的obtainFreshBeanFactory()的方法:

### 用于创建一个新的Ioc容器,这个Ioc容器就是DefaultListableBeanFactory
```java
    protected ConfigurableListableBeanFactory obtainFreshBeanFactory() {
        	//通过该方法刷新BeanFactory,并且创建一个ioc容器
    		refreshBeanFactory();
             //获取refreshBeanFactory()创建的ioc容器
    		ConfigurableListableBeanFactory beanFactory = getBeanFactory();
    		if (logger.isDebugEnabled()) {
    			logger.debug("Bean factory for " + getDisplayName() + ": " + beanFactory);
    		}
    		return beanFactory;
    	}
```



### 进入AbstractApplication的refreshBeanFactory()方法中:

### 初始化一个BeanFactory
```java
    	/**
    	 * This implementation performs an actual refresh of this context's underlying
    	 * bean factory, shutting down the previous bean factory (if any) and
    	 * initializing a fresh bean factory for the next phase of the context's lifecycle.
    	 */
    	@Override
    	protected final void refreshBeanFactory() throws BeansException {
            //判断是否已经存在BeanFactory
    		if (hasBeanFactory()) {
            //销毁上一个BeanFactory
    			destroyBeans();
            //并且关闭    
    			closeBeanFactory();
    		}
    		try {
            	//创建一个BeanFactory的实例(DefaultListableBeanFactory)
    			DefaultListableBeanFactory beanFactory = createBeanFactory();
    			beanFactory.setSerializationId(getId());
                //设置BeanFactory的属性:是否允许BeanDefinition的覆盖和循环依赖
    			customizeBeanFactory(beanFactory);
                //加载spring的xml文件的BeanDefinition
    			loadBeanDefinitions(beanFactory);
    			synchronized (this.beanFactoryMonitor) {
    				this.beanFactory = beanFactory;
    			}
    		}
    		catch (IOException ex) {
    			throw new ApplicationContextException("I/O error parsing bean definition source for " + getDisplayName(), ex);
    		}
    	}
    
```

### 加载BeanDefinition流程分析:

### 进入AbstractXmlApplicationContext的loadBeanDefinitions(beanFactory)方法:

>创建一个XmlBeanDefinitionReader,真正地去完成BeanDefinition的注册和加载

>配置XmlBeanDefinitionReader的属性

```java
    	/**
    	 * Loads the bean definitions via an XmlBeanDefinitionReader.
    	 * @see org.springframework.beans.factory.xml.XmlBeanDefinitionReader
    	 * @see #initBeanDefinitionReader
    	 * @see #loadBeanDefinitions
    	 */
    	@Override
    	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {
    		// Create a new XmlBeanDefinitionReader for the given BeanFactory
            //为工厂创建一个读取xml的一个reader
    		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);
    
    		// Configure the bean definition reader with this context's
    		// resource loading environment.
             //设置reader的一些环境属性
    		beanDefinitionReader.setEnvironment(this.getEnvironment());
    		beanDefinitionReader.setResourceLoader(this);
    		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));
    
    		// Allow a subclass to provide custom initialization of the reader,
    		// then proceed with actually loading the bean definitions.
             //允许自定义的reader来读取xml的BeanDefinition
    		initBeanDefinitionReader(beanDefinitionReader);
             //委托xml阅读器去加载xml的BeanDefinitions信息
    		loadBeanDefinitions(beanDefinitionReader);
    	}
    
    protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws BeansException,      IOException {
             //获取资源的位置
             //getConfigResources是一个空实现,需要子类去实现
             //获取ClasspathXMLApplicationContext的父类AbstractXmlApplicationContext的
             //配置文件信息,默认返回null
    		Resource[] configResources = getConfigResources();
    		if (configResources != null) {
    			reader.loadBeanDefinitions(configResources);
    		}
             //如果用户指定了spring的xml配置文件的位置就获取用户的自定义配置文件
             //否则就加载父类指定的默认加载位置,默认返回null
    		String[] configLocations = getConfigLocations();
    		if (configLocations != null) {
                 //该方法的参数就是我们在new一个容器实例传入的一个参数,代表spring的xml配置文件的地方
                 //该方法真正地去读取xml的beanDefinition的信息,并且返回读取的一个计数值,来表示读取了多少个
                 //位置的xml
    			reader.loadBeanDefinitions(configLocations);
    		}
    	}
```

### loadBeanDefinitions最终来到了XmlBeanDefinitionReader的doLoadBeanDefinitions方法：

>对XML文件进行解析

>完成BeanDefinition对象的加载与注册

```java
    	protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)
    			throws BeanDefinitionStoreException {
    		try {
                //将XML转换成document对象
    			Document doc = doLoadDocument(inputSource, resource);
                //BeanDefinition对象的加载与注册
    			return registerBeanDefinitions(doc, resource);
    		}
    		catch (BeanDefinitionStoreException ex) {
    			throw ex;
    		}
```



### 进入XmlBeanDefinitionReaderregisterBeanDefinitions

- 创建DefaultBeanDefinitionDocumentReader用来解析Document对象。
- 获得容器中已注册的BeanDefinition数量
- 委托给DefaultBeanDefinitionDocumentReader来完成BeanDefinition的加载、注册工作。
- 统计新注册的BeanDefinition数量
```java
    public int registerBeanDefinitions(Document doc, Resource resource) throws            BeanDefinitionStoreException {
             //创建一个BeanDefinitionDocumentReader来解析Document对象的BeanDefinition信息
    		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader();
            //获取容器已经存在的BeanDefinition的数量
    		int countBefore = getRegistry().getBeanDefinitionCount();
            //注册
    		documentReader.registerBeanDefinitions(doc, createReaderContext(resource));
            //返回注册后的容器中新增的BeanDefintion的个数
    		return getRegistry().getBeanDefinitionCount() - countBefore;
    	   }
```


### 进入DefaultBeanDefinitionDocumentReader

- 获得Document的根元素<beans>标签
- 真正实现BeanDefinition解析和注册工作

    	public void registerBeanDefinitions(Document doc, XmlReaderContext readerContext) {
    		this.readerContext = readerContext;
    		logger.debug("Loading bean definitions");
             //从document对象中获取<bean>的标签
    		Element root = doc.getDocumentElement();
             //对这些标签的真正注册和解析
    		doRegisterBeanDefinitions(root);
    	}



### 接下来就是解析<bean>....的一些标签的过程(源码省略):

> 1.从根标签开始遍历所有的标签

> 2.如果存在默认的标签(<bean>...)的标签就进行解析

> 3.否则就去解析自定义的标签

>  4.解析<bean>标签里面的所有属性(id,name,class....)



### 实例化剩余的(非懒加载的)bean
```java
    	protected void finishBeanFactoryInitialization(ConfigurableListableBeanFactory beanFactory) {
    		// Initialize conversion service for this context.
    		if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &&
    				beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) {
    			beanFactory.setConversionService(
    					beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));
    		}
    
    		// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.
    		String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, false, false);
    		for (String weaverAwareName : weaverAwareNames) {
    			getBean(weaverAwareName);
    		}
    
    		// Stop using the temporary ClassLoader for type matching.
    		beanFactory.setTempClassLoader(null);
    
    		// Allow for caching all bean definition metadata, not expecting further changes.
    		beanFactory.freezeConfiguration();
    
    		// Instantiate all remaining (non-lazy-init) singletons.
             //重点方法:实例化容器剩余(非懒加载的)bean,并且ioc,DI和AOP都发生在这个方法里面
    		beanFactory.preInstantiateSingletons();
    	}
```', type=Type{id=14, name='null', blogs=null}, tagIds='6'}, org.apache.catalina.session.StandardSessionFacade@3e87d917, {}]}
2019-10-30 20:49:36.944 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.BlogMapper.insertSelective   : ==>  Preparing: insert into blog ( uid, typeid, tagids, title, description, first_picture, views, published, flag, recommend, create_time, update_time, content ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-10-30 20:49:36.945 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.BlogMapper.insertSelective   : ==> Parameters: 2(Integer), 14(Integer), 6(String), spring容器初始化源码分析(String), spring容器初始化过程(String), a(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 20:49:36.94(Timestamp), 2019-10-30 20:49:36.94(Timestamp), ## Spring容器的初始化过程
流程图:



### 1.执行构造函数,实例化一个容器对象:
```java
    //创建容器对象,并且从spring的所有配置文件中加载definitions
    public ClassPathXmlApplicationContext(String[] configLocations, boolean refresh, ApplicationContext parent)
    			throws BeansException {
    		//使用parent创建
    		super(parent);
        	//将spring有关的配置文件都设置到configLocations
    		setConfigLocations(configLocations);
    		if (refresh) {
                //刷新容器
    			refresh();
    		}
    	}
```

### 2.刷新创建的ClasspathXmlApplicationContext
```java
    	@Override
    	public void refresh() throws BeansException, IllegalStateException {
    		synchronized (this.startupShutdownMonitor) {
    			// 1.Prepare this context for refreshing.刷新容器前的预处理
                 //设置容器的启动时间和加载自定义的一些数据配置文件:*.properties.......
    			prepareRefresh();
    
    			// Tell the subclass to refresh the internal bean factory.
                 // 2.
                 //	   (a)创建ioc容器 (DefaultListableBeanFactory)
                 //    (b)加载xml的信息 (最后转存为Document对象)
                 //    (c)对Document对象解析,在这里完成对BeanDefinition的注册和加载
    			ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
    
    			// Prepare the bean factory for use in this context.
                 // 3.对IOC容器的一些预处理
    			prepareBeanFactory(beanFactory);
    
    			try {
    				// Allows post-processing of the bean factory in context subclasses.
                     // STEP 4： 允许在AbstractApplicationContext的子类中对BeanFactory进行后置处理，                        //      postProcessBeanFactory()这个方法是个空实现。
    				postProcessBeanFactory(beanFactory);
    
                      //STEP 5： 调用BeanFactoryPostProcessor后置处理器处理BeanFactory的实例                                     （BeanDefinition）
    				// Invoke factory processors registered as beans in the context.
    				invokeBeanFactoryPostProcessors(beanFactory);
    
    				// Register bean processors that intercept bean creation.
    				//STEP6  1.注册BeanPostProcessor后置处理器
                      //  2.b）BeanPostProcessors后置处理器用于拦截bean的创建，对创建后的bean实例进行处理
                    registerBeanPostProcessors(beanFactory);
    
    				// Initialize message source for this context.
                     //STEP7 :初始化一些消息资源
    				initMessageSource();
    
    				// Initialize event multicaster for this context.
                     // STEP 8： 
                     //      a)  初始化应用事件广播器
                     //      b)  表明Spring内部基于事件机制
    				initApplicationEventMulticaster();
    
    				// Initialize other special beans in specific context subclasses.
                     //STEP9
                     //初始化一些特殊的bean
    				onRefresh();
    
    				// Check for listener beans and register them.
                     //STEP10 :
                     // 遍历寻找listener并且注册
    				registerListeners();
    
    				// Instantiate all remaining (non-lazy-init) singletons.
                     //STEP11
                     //       实例化剩余(非实例化的)bean
    				finishBeanFactoryInitialization(beanFactory);
    
    				// Last step: publish corresponding event.
                     //STEP12 : 完成容器的刷新,并且发布对应的事件
    				finishRefresh();
    			}
    
    			catch (BeansException ex) {
    				if (logger.isWarnEnabled()) {
    					logger.warn("Exception encountered during context initialization - " +
    							"cancelling refresh attempt: " + ex);
    				}
    
    				// Destroy already created singletons to avoid dangling resources.
    				destroyBeans();
    
    				// Reset 'active' flag.
    				cancelRefresh(ex);
    
    				// Propagate exception to caller.
    				throw ex;
    			}
    
    			finally {
    				// Reset common introspection caches in Spring's core, since we
    				// might not ever need metadata for singleton beans anymore...
    				resetCommonCaches();
    			}
    		}
    	}
    
```

### 创建Beanfactory的源码分析
```java
    ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
```

### 进入AbstractApplication的obtainFreshBeanFactory()的方法:

### 用于创建一个新的Ioc容器,这个Ioc容器就是DefaultListableBeanFactory
```java
    protected ConfigurableListableBeanFactory obtainFreshBeanFactory() {
        	//通过该方法刷新BeanFactory,并且创建一个ioc容器
    		refreshBeanFactory();
             //获取refreshBeanFactory()创建的ioc容器
    		ConfigurableListableBeanFactory beanFactory = getBeanFactory();
    		if (logger.isDebugEnabled()) {
    			logger.debug("Bean factory for " + getDisplayName() + ": " + beanFactory);
    		}
    		return beanFactory;
    	}
```



### 进入AbstractApplication的refreshBeanFactory()方法中:

### 初始化一个BeanFactory
```java
    	/**
    	 * This implementation performs an actual refresh of this context's underlying
    	 * bean factory, shutting down the previous bean factory (if any) and
    	 * initializing a fresh bean factory for the next phase of the context's lifecycle.
    	 */
    	@Override
    	protected final void refreshBeanFactory() throws BeansException {
            //判断是否已经存在BeanFactory
    		if (hasBeanFactory()) {
            //销毁上一个BeanFactory
    			destroyBeans();
            //并且关闭    
    			closeBeanFactory();
    		}
    		try {
            	//创建一个BeanFactory的实例(DefaultListableBeanFactory)
    			DefaultListableBeanFactory beanFactory = createBeanFactory();
    			beanFactory.setSerializationId(getId());
                //设置BeanFactory的属性:是否允许BeanDefinition的覆盖和循环依赖
    			customizeBeanFactory(beanFactory);
                //加载spring的xml文件的BeanDefinition
    			loadBeanDefinitions(beanFactory);
    			synchronized (this.beanFactoryMonitor) {
    				this.beanFactory = beanFactory;
    			}
    		}
    		catch (IOException ex) {
    			throw new ApplicationContextException("I/O error parsing bean definition source for " + getDisplayName(), ex);
    		}
    	}
    
```

### 加载BeanDefinition流程分析:

### 进入AbstractXmlApplicationContext的loadBeanDefinitions(beanFactory)方法:

>创建一个XmlBeanDefinitionReader,真正地去完成BeanDefinition的注册和加载

>配置XmlBeanDefinitionReader的属性

```java
    	/**
    	 * Loads the bean definitions via an XmlBeanDefinitionReader.
    	 * @see org.springframework.beans.factory.xml.XmlBeanDefinitionReader
    	 * @see #initBeanDefinitionReader
    	 * @see #loadBeanDefinitions
    	 */
    	@Override
    	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {
    		// Create a new XmlBeanDefinitionReader for the given BeanFactory
            //为工厂创建一个读取xml的一个reader
    		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);
    
    		// Configure the bean definition reader with this context's
    		// resource loading environment.
             //设置reader的一些环境属性
    		beanDefinitionReader.setEnvironment(this.getEnvironment());
    		beanDefinitionReader.setResourceLoader(this);
    		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));
    
    		// Allow a subclass to provide custom initialization of the reader,
    		// then proceed with actually loading the bean definitions.
             //允许自定义的reader来读取xml的BeanDefinition
    		initBeanDefinitionReader(beanDefinitionReader);
             //委托xml阅读器去加载xml的BeanDefinitions信息
    		loadBeanDefinitions(beanDefinitionReader);
    	}
    
    protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws BeansException,      IOException {
             //获取资源的位置
             //getConfigResources是一个空实现,需要子类去实现
             //获取ClasspathXMLApplicationContext的父类AbstractXmlApplicationContext的
             //配置文件信息,默认返回null
    		Resource[] configResources = getConfigResources();
    		if (configResources != null) {
    			reader.loadBeanDefinitions(configResources);
    		}
             //如果用户指定了spring的xml配置文件的位置就获取用户的自定义配置文件
             //否则就加载父类指定的默认加载位置,默认返回null
    		String[] configLocations = getConfigLocations();
    		if (configLocations != null) {
                 //该方法的参数就是我们在new一个容器实例传入的一个参数,代表spring的xml配置文件的地方
                 //该方法真正地去读取xml的beanDefinition的信息,并且返回读取的一个计数值,来表示读取了多少个
                 //位置的xml
    			reader.loadBeanDefinitions(configLocations);
    		}
    	}
```

### loadBeanDefinitions最终来到了XmlBeanDefinitionReader的doLoadBeanDefinitions方法：

>对XML文件进行解析

>完成BeanDefinition对象的加载与注册

```java
    	protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)
    			throws BeanDefinitionStoreException {
    		try {
                //将XML转换成document对象
    			Document doc = doLoadDocument(inputSource, resource);
                //BeanDefinition对象的加载与注册
    			return registerBeanDefinitions(doc, resource);
    		}
    		catch (BeanDefinitionStoreException ex) {
    			throw ex;
    		}
```



### 进入XmlBeanDefinitionReaderregisterBeanDefinitions

- 创建DefaultBeanDefinitionDocumentReader用来解析Document对象。
- 获得容器中已注册的BeanDefinition数量
- 委托给DefaultBeanDefinitionDocumentReader来完成BeanDefinition的加载、注册工作。
- 统计新注册的BeanDefinition数量
```java
    public int registerBeanDefinitions(Document doc, Resource resource) throws            BeanDefinitionStoreException {
             //创建一个BeanDefinitionDocumentReader来解析Document对象的BeanDefinition信息
    		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader();
            //获取容器已经存在的BeanDefinition的数量
    		int countBefore = getRegistry().getBeanDefinitionCount();
            //注册
    		documentReader.registerBeanDefinitions(doc, createReaderContext(resource));
            //返回注册后的容器中新增的BeanDefintion的个数
    		return getRegistry().getBeanDefinitionCount() - countBefore;
    	   }
```


### 进入DefaultBeanDefinitionDocumentReader

- 获得Document的根元素<beans>标签
- 真正实现BeanDefinition解析和注册工作

    	public void registerBeanDefinitions(Document doc, XmlReaderContext readerContext) {
    		this.readerContext = readerContext;
    		logger.debug("Loading bean definitions");
             //从document对象中获取<bean>的标签
    		Element root = doc.getDocumentElement();
             //对这些标签的真正注册和解析
    		doRegisterBeanDefinitions(root);
    	}



### 接下来就是解析<bean>....的一些标签的过程(源码省略):

> 1.从根标签开始遍历所有的标签

> 2.如果存在默认的标签(<bean>...)的标签就进行解析

> 3.否则就去解析自定义的标签

>  4.解析<bean>标签里面的所有属性(id,name,class....)



### 实例化剩余的(非懒加载的)bean
```java
    	protected void finishBeanFactoryInitialization(ConfigurableListableBeanFactory beanFactory) {
    		// Initialize conversion service for this context.
    		if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &&
    				beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) {
    			beanFactory.setConversionService(
    					beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));
    		}
    
    		// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.
    		String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, false, false);
    		for (String weaverAwareName : weaverAwareNames) {
    			getBean(weaverAwareName);
    		}
    
    		// Stop using the temporary ClassLoader for type matching.
    		beanFactory.setTempClassLoader(null);
    
    		// Allow for caching all bean definition metadata, not expecting further changes.
    		beanFactory.freezeConfiguration();
    
    		// Instantiate all remaining (non-lazy-init) singletons.
             //重点方法:实例化容器剩余(非懒加载的)bean,并且ioc,DI和AOP都发生在这个方法里面
    		beanFactory.preInstantiateSingletons();
    	}
```(String)
2019-10-30 20:49:36.947 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.BlogMapper.insertSelective   : <==    Updates: 1
2019-10-30 20:49:36.956 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:49:36.957 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 14(Integer)
2019-10-30 20:49:36.957 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:49:36.958 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:49:36.958 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 源码分析(String), 2(Integer), 14(Integer)
2019-10-30 20:49:36.959 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:49:36.961 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:49:36.961 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 6(Integer)
2019-10-30 20:49:36.961 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:49:36.962 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:49:36.962 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: spring(String), 2(Integer), 6(Integer)
2019-10-30 20:49:36.963 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 20:49:37.029  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:49:37.029  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 90
2019-10-30 20:49:37.035  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:49:37.036 DEBUG 5160 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:49:37.036 DEBUG 5160 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:49:37.036 DEBUG 5160 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:49:37.037 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:49:37.037 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:49:37.038 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 4
2019-10-30 20:49:37.040 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:49:37.040 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:49:37.040 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:37.041 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:49:37.042 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:49:37.042 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:37.043 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:49:37.043 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:49:37.043 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:37.044 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:49:37.044 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:49:37.045 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:37.046 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:49:37.046 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:49:37.047 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:49:37.047  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:49:37.048  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:49:41.540  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:49:41.557 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:49:41.557 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:49:41.558 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:41.559 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:49:41.559 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:49:41.560 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:41.563 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:49:41.563 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:49:41.564 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:41.565 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:49:41.565 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:49:41.566 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:41.568 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:49:41.568 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:49:41.569 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:41.570 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:49:41.570 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:49:41.570 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:41.572 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:49:41.572 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:49:41.572 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:41.574 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:49:41.574 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:49:41.574 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:41.575 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:49:41.575 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:49:41.576 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:49:41.576 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:49:41.577 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:49:41.577 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 20:49:41.578 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:49:41.578 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:49:41.578 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:49:41.579 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:49:41.579 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:49:41.579 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 3
2019-10-30 20:49:41.580 DEBUG 5160 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:49:41.580 DEBUG 5160 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:49:41.581 DEBUG 5160 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:49:41.581 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:49:41.581 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:49:41.581 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 4
2019-10-30 20:49:41.582  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:49:41.582  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 42
2019-10-30 20:49:48.029  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[20, {}]}
2019-10-30 20:49:48.030 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:49:48.031 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 20:49:48.032 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:48.038 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:49:48.038 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:49:48.039 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:48.040 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:49:48.040 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:49:48.041 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:49:48.042 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 20:49:48.042 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 6(Integer)
2019-10-30 20:49:48.043 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 20:49:48.043  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 20:49:48.043  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 20:49:48.090 ERROR 5160 --- [http-nio-8080-exec-8] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 20:49:48.091  WARN 5160 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 20:50:19.268  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/20/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[20, {}]}
2019-10-30 20:50:19.269 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:50:19.269 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:50:19.270 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : <==      Total: 3
2019-10-30 20:50:19.271 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:50:19.271 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:50:19.272 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:50:19.273 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:50:19.273 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 20:50:19.274 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:19.275 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:50:19.275 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:50:19.275 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:19.276  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:50:19.276  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 20:50:40.971  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=20, uid=null, typeid=null, tagids='6', title='spring容器初始化源码分析', description='spring容器初始化过程', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=1, createTime=null, updateTime=null, content='## Spring容器的初始化过程
流程图:



### 1.执行构造函数,实例化一个容器对象:
```java
    //创建容器对象,并且从spring的所有配置文件中加载definitions
    public ClassPathXmlApplicationContext(String[] configLocations, boolean refresh, ApplicationContext parent)
    			throws BeansException {
    		//使用parent创建
    		super(parent);
        	//将spring有关的配置文件都设置到configLocations
    		setConfigLocations(configLocations);
    		if (refresh) {
                //刷新容器
    			refresh();
    		}
    	}
```

### 2.刷新创建的ClasspathXmlApplicationContext
```java
    	@Override
    	public void refresh() throws BeansException, IllegalStateException {
    		synchronized (this.startupShutdownMonitor) {
    			// 1.Prepare this context for refreshing.刷新容器前的预处理
                 //设置容器的启动时间和加载自定义的一些数据配置文件:*.properties.......
    			prepareRefresh();
    
    			// Tell the subclass to refresh the internal bean factory.
                 // 2.
                 //	   (a)创建ioc容器 (DefaultListableBeanFactory)
                 //    (b)加载xml的信息 (最后转存为Document对象)
                 //    (c)对Document对象解析,在这里完成对BeanDefinition的注册和加载
    			ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
    
    			// Prepare the bean factory for use in this context.
                 // 3.对IOC容器的一些预处理
    			prepareBeanFactory(beanFactory);
    
    			try {
    				// Allows post-processing of the bean factory in context subclasses.
                     // STEP 4： 允许在AbstractApplicationContext的子类中对BeanFactory进行后置处理，                        //      postProcessBeanFactory()这个方法是个空实现。
    				postProcessBeanFactory(beanFactory);
    
                      //STEP 5： 调用BeanFactoryPostProcessor后置处理器处理BeanFactory的实例                                     （BeanDefinition）
    				// Invoke factory processors registered as beans in the context.
    				invokeBeanFactoryPostProcessors(beanFactory);
    
    				// Register bean processors that intercept bean creation.
    				//STEP6  1.注册BeanPostProcessor后置处理器
                      //  2.b）BeanPostProcessors后置处理器用于拦截bean的创建，对创建后的bean实例进行处理
                    registerBeanPostProcessors(beanFactory);
    
    				// Initialize message source for this context.
                     //STEP7 :初始化一些消息资源
    				initMessageSource();
    
    				// Initialize event multicaster for this context.
                     // STEP 8： 
                     //      a)  初始化应用事件广播器
                     //      b)  表明Spring内部基于事件机制
    				initApplicationEventMulticaster();
    
    				// Initialize other special beans in specific context subclasses.
                     //STEP9
                     //初始化一些特殊的bean
    				onRefresh();
    
    				// Check for listener beans and register them.
                     //STEP10 :
                     // 遍历寻找listener并且注册
    				registerListeners();
    
    				// Instantiate all remaining (non-lazy-init) singletons.
                     //STEP11
                     //       实例化剩余(非实例化的)bean
    				finishBeanFactoryInitialization(beanFactory);
    
    				// Last step: publish corresponding event.
                     //STEP12 : 完成容器的刷新,并且发布对应的事件
    				finishRefresh();
    			}
    
    			catch (BeansException ex) {
    				if (logger.isWarnEnabled()) {
    					logger.warn("Exception encountered during context initialization - " +
    							"cancelling refresh attempt: " + ex);
    				}
    
    				// Destroy already created singletons to avoid dangling resources.
    				destroyBeans();
    
    				// Reset 'active' flag.
    				cancelRefresh(ex);
    
    				// Propagate exception to caller.
    				throw ex;
    			}
    
    			finally {
    				// Reset common introspection caches in Spring's core, since we
    				// might not ever need metadata for singleton beans anymore...
    				resetCommonCaches();
    			}
    		}
    	}
    
```

### 创建Beanfactory的源码分析
```java
    ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
```

### 进入AbstractApplication的obtainFreshBeanFactory()的方法:

### 用于创建一个新的Ioc容器,这个Ioc容器就是DefaultListableBeanFactory
```java
    protected ConfigurableListableBeanFactory obtainFreshBeanFactory() {
        	//通过该方法刷新BeanFactory,并且创建一个ioc容器
    		refreshBeanFactory();
             //获取refreshBeanFactory()创建的ioc容器
    		ConfigurableListableBeanFactory beanFactory = getBeanFactory();
    		if (logger.isDebugEnabled()) {
    			logger.debug("Bean factory for " + getDisplayName() + ": " + beanFactory);
    		}
    		return beanFactory;
    	}
```



### 进入AbstractApplication的refreshBeanFactory()方法中:

### 初始化一个BeanFactory
```java
    	/**
    	 * This implementation performs an actual refresh of this context's underlying
    	 * bean factory, shutting down the previous bean factory (if any) and
    	 * initializing a fresh bean factory for the next phase of the context's lifecycle.
    	 */
    	@Override
    	protected final void refreshBeanFactory() throws BeansException {
            //判断是否已经存在BeanFactory
    		if (hasBeanFactory()) {
            //销毁上一个BeanFactory
    			destroyBeans();
            //并且关闭    
    			closeBeanFactory();
    		}
    		try {
            	//创建一个BeanFactory的实例(DefaultListableBeanFactory)
    			DefaultListableBeanFactory beanFactory = createBeanFactory();
    			beanFactory.setSerializationId(getId());
                //设置BeanFactory的属性:是否允许BeanDefinition的覆盖和循环依赖
    			customizeBeanFactory(beanFactory);
                //加载spring的xml文件的BeanDefinition
    			loadBeanDefinitions(beanFactory);
    			synchronized (this.beanFactoryMonitor) {
    				this.beanFactory = beanFactory;
    			}
    		}
    		catch (IOException ex) {
    			throw new ApplicationContextException("I/O error parsing bean definition source for " + getDisplayName(), ex);
    		}
    	}
    
```

### 加载BeanDefinition流程分析:

### 进入AbstractXmlApplicationContext的loadBeanDefinitions(beanFactory)方法:

>创建一个XmlBeanDefinitionReader,真正地去完成BeanDefinition的注册和加载

>配置XmlBeanDefinitionReader的属性

```java
    	/**
    	 * Loads the bean definitions via an XmlBeanDefinitionReader.
    	 * @see org.springframework.beans.factory.xml.XmlBeanDefinitionReader
    	 * @see #initBeanDefinitionReader
    	 * @see #loadBeanDefinitions
    	 */
    	@Override
    	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {
    		// Create a new XmlBeanDefinitionReader for the given BeanFactory
            //为工厂创建一个读取xml的一个reader
    		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);
    
    		// Configure the bean definition reader with this context's
    		// resource loading environment.
             //设置reader的一些环境属性
    		beanDefinitionReader.setEnvironment(this.getEnvironment());
    		beanDefinitionReader.setResourceLoader(this);
    		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));
    
    		// Allow a subclass to provide custom initialization of the reader,
    		// then proceed with actually loading the bean definitions.
             //允许自定义的reader来读取xml的BeanDefinition
    		initBeanDefinitionReader(beanDefinitionReader);
             //委托xml阅读器去加载xml的BeanDefinitions信息
    		loadBeanDefinitions(beanDefinitionReader);
    	}
    
    protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws BeansException,      IOException {
             //获取资源的位置
             //getConfigResources是一个空实现,需要子类去实现
             //获取ClasspathXMLApplicationContext的父类AbstractXmlApplicationContext的
             //配置文件信息,默认返回null
    		Resource[] configResources = getConfigResources();
    		if (configResources != null) {
    			reader.loadBeanDefinitions(configResources);
    		}
             //如果用户指定了spring的xml配置文件的位置就获取用户的自定义配置文件
             //否则就加载父类指定的默认加载位置,默认返回null
    		String[] configLocations = getConfigLocations();
    		if (configLocations != null) {
                 //该方法的参数就是我们在new一个容器实例传入的一个参数,代表spring的xml配置文件的地方
                 //该方法真正地去读取xml的beanDefinition的信息,并且返回读取的一个计数值,来表示读取了多少个
                 //位置的xml
    			reader.loadBeanDefinitions(configLocations);
    		}
    	}
```

### loadBeanDefinitions最终来到了XmlBeanDefinitionReader的doLoadBeanDefinitions方法：

>对XML文件进行解析

>完成BeanDefinition对象的加载与注册

```java
    	protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)
    			throws BeanDefinitionStoreException {
    		try {
                //将XML转换成document对象
    			Document doc = doLoadDocument(inputSource, resource);
                //BeanDefinition对象的加载与注册
    			return registerBeanDefinitions(doc, resource);
    		}
    		catch (BeanDefinitionStoreException ex) {
    			throw ex;
    		}
```



### 进入XmlBeanDefinitionReaderregisterBeanDefinitions

- 创建DefaultBeanDefinitionDocumentReader用来解析Document对象。
- 获得容器中已注册的BeanDefinition数量
- 委托给DefaultBeanDefinitionDocumentReader来完成BeanDefinition的加载、注册工作。
- 统计新注册的BeanDefinition数量
```java
    public int registerBeanDefinitions(Document doc, Resource resource) throws            BeanDefinitionStoreException {
             //创建一个BeanDefinitionDocumentReader来解析Document对象的BeanDefinition信息
    		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader();
            //获取容器已经存在的BeanDefinition的数量
    		int countBefore = getRegistry().getBeanDefinitionCount();
            //注册
    		documentReader.registerBeanDefinitions(doc, createReaderContext(resource));
            //返回注册后的容器中新增的BeanDefintion的个数
    		return getRegistry().getBeanDefinitionCount() - countBefore;
    	   }
```


### 进入DefaultBeanDefinitionDocumentReader

- 获得Document的根元素<beans>标签
- 真正实现BeanDefinition解析和注册工作

```java
    	public void registerBeanDefinitions(Document doc, XmlReaderContext readerContext) {
    		this.readerContext = readerContext;
    		logger.debug("Loading bean definitions");
             //从document对象中获取<bean>的标签
    		Element root = doc.getDocumentElement();
             //对这些标签的真正注册和解析
    		doRegisterBeanDefinitions(root);
    	}
```


### 接下来就是解析<bean>....的一些标签的过程(源码省略):

> 1.从根标签开始遍历所有的标签

> 2.如果存在默认的标签(<bean>...)的标签就进行解析

> 3.否则就去解析自定义的标签

>  4.解析<bean>标签里面的所有属性(id,name,class....)



### 实例化剩余的(非懒加载的)bean
```java
    	protected void finishBeanFactoryInitialization(ConfigurableListableBeanFactory beanFactory) {
    		// Initialize conversion service for this context.
    		if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &&
    				beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) {
    			beanFactory.setConversionService(
    					beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));
    		}
    
    		// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.
    		String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, false, false);
    		for (String weaverAwareName : weaverAwareNames) {
    			getBean(weaverAwareName);
    		}
    
    		// Stop using the temporary ClassLoader for type matching.
    		beanFactory.setTempClassLoader(null);
    
    		// Allow for caching all bean definition metadata, not expecting further changes.
    		beanFactory.freezeConfiguration();
    
    		// Instantiate all remaining (non-lazy-init) singletons.
             //重点方法:实例化容器剩余(非懒加载的)bean,并且ioc,DI和AOP都发生在这个方法里面
    		beanFactory.preInstantiateSingletons();
    	}
```', type=Type{id=14, name='null', blogs=null}, tagIds='6'}, org.apache.catalina.session.StandardSessionFacade@3e87d917, {}]}
2019-10-30 20:50:40.972 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:50:40.972 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 20:50:40.973 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:40.975 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:50:40.975 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 20:50:40.976 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:40.977 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, recommend = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 20:50:40.978 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 14(Integer), 6(String), spring容器初始化源码分析(String), spring容器初始化过程(String), a(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 20:50:40.971(Timestamp), 2019-10-30 20:50:40.971(Timestamp), ## Spring容器的初始化过程
流程图:



### 1.执行构造函数,实例化一个容器对象:
```java
    //创建容器对象,并且从spring的所有配置文件中加载definitions
    public ClassPathXmlApplicationContext(String[] configLocations, boolean refresh, ApplicationContext parent)
    			throws BeansException {
    		//使用parent创建
    		super(parent);
        	//将spring有关的配置文件都设置到configLocations
    		setConfigLocations(configLocations);
    		if (refresh) {
                //刷新容器
    			refresh();
    		}
    	}
```

### 2.刷新创建的ClasspathXmlApplicationContext
```java
    	@Override
    	public void refresh() throws BeansException, IllegalStateException {
    		synchronized (this.startupShutdownMonitor) {
    			// 1.Prepare this context for refreshing.刷新容器前的预处理
                 //设置容器的启动时间和加载自定义的一些数据配置文件:*.properties.......
    			prepareRefresh();
    
    			// Tell the subclass to refresh the internal bean factory.
                 // 2.
                 //	   (a)创建ioc容器 (DefaultListableBeanFactory)
                 //    (b)加载xml的信息 (最后转存为Document对象)
                 //    (c)对Document对象解析,在这里完成对BeanDefinition的注册和加载
    			ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
    
    			// Prepare the bean factory for use in this context.
                 // 3.对IOC容器的一些预处理
    			prepareBeanFactory(beanFactory);
    
    			try {
    				// Allows post-processing of the bean factory in context subclasses.
                     // STEP 4： 允许在AbstractApplicationContext的子类中对BeanFactory进行后置处理，                        //      postProcessBeanFactory()这个方法是个空实现。
    				postProcessBeanFactory(beanFactory);
    
                      //STEP 5： 调用BeanFactoryPostProcessor后置处理器处理BeanFactory的实例                                     （BeanDefinition）
    				// Invoke factory processors registered as beans in the context.
    				invokeBeanFactoryPostProcessors(beanFactory);
    
    				// Register bean processors that intercept bean creation.
    				//STEP6  1.注册BeanPostProcessor后置处理器
                      //  2.b）BeanPostProcessors后置处理器用于拦截bean的创建，对创建后的bean实例进行处理
                    registerBeanPostProcessors(beanFactory);
    
    				// Initialize message source for this context.
                     //STEP7 :初始化一些消息资源
    				initMessageSource();
    
    				// Initialize event multicaster for this context.
                     // STEP 8： 
                     //      a)  初始化应用事件广播器
                     //      b)  表明Spring内部基于事件机制
    				initApplicationEventMulticaster();
    
    				// Initialize other special beans in specific context subclasses.
                     //STEP9
                     //初始化一些特殊的bean
    				onRefresh();
    
    				// Check for listener beans and register them.
                     //STEP10 :
                     // 遍历寻找listener并且注册
    				registerListeners();
    
    				// Instantiate all remaining (non-lazy-init) singletons.
                     //STEP11
                     //       实例化剩余(非实例化的)bean
    				finishBeanFactoryInitialization(beanFactory);
    
    				// Last step: publish corresponding event.
                     //STEP12 : 完成容器的刷新,并且发布对应的事件
    				finishRefresh();
    			}
    
    			catch (BeansException ex) {
    				if (logger.isWarnEnabled()) {
    					logger.warn("Exception encountered during context initialization - " +
    							"cancelling refresh attempt: " + ex);
    				}
    
    				// Destroy already created singletons to avoid dangling resources.
    				destroyBeans();
    
    				// Reset 'active' flag.
    				cancelRefresh(ex);
    
    				// Propagate exception to caller.
    				throw ex;
    			}
    
    			finally {
    				// Reset common introspection caches in Spring's core, since we
    				// might not ever need metadata for singleton beans anymore...
    				resetCommonCaches();
    			}
    		}
    	}
    
```

### 创建Beanfactory的源码分析
```java
    ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
```

### 进入AbstractApplication的obtainFreshBeanFactory()的方法:

### 用于创建一个新的Ioc容器,这个Ioc容器就是DefaultListableBeanFactory
```java
    protected ConfigurableListableBeanFactory obtainFreshBeanFactory() {
        	//通过该方法刷新BeanFactory,并且创建一个ioc容器
    		refreshBeanFactory();
             //获取refreshBeanFactory()创建的ioc容器
    		ConfigurableListableBeanFactory beanFactory = getBeanFactory();
    		if (logger.isDebugEnabled()) {
    			logger.debug("Bean factory for " + getDisplayName() + ": " + beanFactory);
    		}
    		return beanFactory;
    	}
```



### 进入AbstractApplication的refreshBeanFactory()方法中:

### 初始化一个BeanFactory
```java
    	/**
    	 * This implementation performs an actual refresh of this context's underlying
    	 * bean factory, shutting down the previous bean factory (if any) and
    	 * initializing a fresh bean factory for the next phase of the context's lifecycle.
    	 */
    	@Override
    	protected final void refreshBeanFactory() throws BeansException {
            //判断是否已经存在BeanFactory
    		if (hasBeanFactory()) {
            //销毁上一个BeanFactory
    			destroyBeans();
            //并且关闭    
    			closeBeanFactory();
    		}
    		try {
            	//创建一个BeanFactory的实例(DefaultListableBeanFactory)
    			DefaultListableBeanFactory beanFactory = createBeanFactory();
    			beanFactory.setSerializationId(getId());
                //设置BeanFactory的属性:是否允许BeanDefinition的覆盖和循环依赖
    			customizeBeanFactory(beanFactory);
                //加载spring的xml文件的BeanDefinition
    			loadBeanDefinitions(beanFactory);
    			synchronized (this.beanFactoryMonitor) {
    				this.beanFactory = beanFactory;
    			}
    		}
    		catch (IOException ex) {
    			throw new ApplicationContextException("I/O error parsing bean definition source for " + getDisplayName(), ex);
    		}
    	}
    
```

### 加载BeanDefinition流程分析:

### 进入AbstractXmlApplicationContext的loadBeanDefinitions(beanFactory)方法:

>创建一个XmlBeanDefinitionReader,真正地去完成BeanDefinition的注册和加载

>配置XmlBeanDefinitionReader的属性

```java
    	/**
    	 * Loads the bean definitions via an XmlBeanDefinitionReader.
    	 * @see org.springframework.beans.factory.xml.XmlBeanDefinitionReader
    	 * @see #initBeanDefinitionReader
    	 * @see #loadBeanDefinitions
    	 */
    	@Override
    	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {
    		// Create a new XmlBeanDefinitionReader for the given BeanFactory
            //为工厂创建一个读取xml的一个reader
    		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);
    
    		// Configure the bean definition reader with this context's
    		// resource loading environment.
             //设置reader的一些环境属性
    		beanDefinitionReader.setEnvironment(this.getEnvironment());
    		beanDefinitionReader.setResourceLoader(this);
    		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));
    
    		// Allow a subclass to provide custom initialization of the reader,
    		// then proceed with actually loading the bean definitions.
             //允许自定义的reader来读取xml的BeanDefinition
    		initBeanDefinitionReader(beanDefinitionReader);
             //委托xml阅读器去加载xml的BeanDefinitions信息
    		loadBeanDefinitions(beanDefinitionReader);
    	}
    
    protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws BeansException,      IOException {
             //获取资源的位置
             //getConfigResources是一个空实现,需要子类去实现
             //获取ClasspathXMLApplicationContext的父类AbstractXmlApplicationContext的
             //配置文件信息,默认返回null
    		Resource[] configResources = getConfigResources();
    		if (configResources != null) {
    			reader.loadBeanDefinitions(configResources);
    		}
             //如果用户指定了spring的xml配置文件的位置就获取用户的自定义配置文件
             //否则就加载父类指定的默认加载位置,默认返回null
    		String[] configLocations = getConfigLocations();
    		if (configLocations != null) {
                 //该方法的参数就是我们在new一个容器实例传入的一个参数,代表spring的xml配置文件的地方
                 //该方法真正地去读取xml的beanDefinition的信息,并且返回读取的一个计数值,来表示读取了多少个
                 //位置的xml
    			reader.loadBeanDefinitions(configLocations);
    		}
    	}
```

### loadBeanDefinitions最终来到了XmlBeanDefinitionReader的doLoadBeanDefinitions方法：

>对XML文件进行解析

>完成BeanDefinition对象的加载与注册

```java
    	protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)
    			throws BeanDefinitionStoreException {
    		try {
                //将XML转换成document对象
    			Document doc = doLoadDocument(inputSource, resource);
                //BeanDefinition对象的加载与注册
    			return registerBeanDefinitions(doc, resource);
    		}
    		catch (BeanDefinitionStoreException ex) {
    			throw ex;
    		}
```



### 进入XmlBeanDefinitionReaderregisterBeanDefinitions

- 创建DefaultBeanDefinitionDocumentReader用来解析Document对象。
- 获得容器中已注册的BeanDefinition数量
- 委托给DefaultBeanDefinitionDocumentReader来完成BeanDefinition的加载、注册工作。
- 统计新注册的BeanDefinition数量
```java
    public int registerBeanDefinitions(Document doc, Resource resource) throws            BeanDefinitionStoreException {
             //创建一个BeanDefinitionDocumentReader来解析Document对象的BeanDefinition信息
    		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader();
            //获取容器已经存在的BeanDefinition的数量
    		int countBefore = getRegistry().getBeanDefinitionCount();
            //注册
    		documentReader.registerBeanDefinitions(doc, createReaderContext(resource));
            //返回注册后的容器中新增的BeanDefintion的个数
    		return getRegistry().getBeanDefinitionCount() - countBefore;
    	   }
```


### 进入DefaultBeanDefinitionDocumentReader

- 获得Document的根元素<beans>标签
- 真正实现BeanDefinition解析和注册工作

```java
    	public void registerBeanDefinitions(Document doc, XmlReaderContext readerContext) {
    		this.readerContext = readerContext;
    		logger.debug("Loading bean definitions");
             //从document对象中获取<bean>的标签
    		Element root = doc.getDocumentElement();
             //对这些标签的真正注册和解析
    		doRegisterBeanDefinitions(root);
    	}
```


### 接下来就是解析<bean>....的一些标签的过程(源码省略):

> 1.从根标签开始遍历所有的标签

> 2.如果存在默认的标签(<bean>...)的标签就进行解析

> 3.否则就去解析自定义的标签

>  4.解析<bean>标签里面的所有属性(id,name,class....)



### 实例化剩余的(非懒加载的)bean
```java
    	protected void finishBeanFactoryInitialization(ConfigurableListableBeanFactory beanFactory) {
    		// Initialize conversion service for this context.
    		if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &&
    				beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) {
    			beanFactory.setConversionService(
    					beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));
    		}
    
    		// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.
    		String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, false, false);
    		for (String weaverAwareName : weaverAwareNames) {
    			getBean(weaverAwareName);
    		}
    
    		// Stop using the temporary ClassLoader for type matching.
    		beanFactory.setTempClassLoader(null);
    
    		// Allow for caching all bean definition metadata, not expecting further changes.
    		beanFactory.freezeConfiguration();
    
    		// Instantiate all remaining (non-lazy-init) singletons.
             //重点方法:实例化容器剩余(非懒加载的)bean,并且ioc,DI和AOP都发生在这个方法里面
    		beanFactory.preInstantiateSingletons();
    	}
```(String), 20(Integer)
2019-10-30 20:50:40.979 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 20:50:41.081  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:50:41.081  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 110
2019-10-30 20:50:41.084  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:50:41.084 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:50:41.085 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:50:41.085 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:50:41.086 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:50:41.086 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:50:41.087 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 4
2019-10-30 20:50:41.088 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:50:41.089 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:50:41.089 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:41.090 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:50:41.090 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:50:41.091 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:41.092 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:50:41.092 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:50:41.093 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:41.094 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:50:41.094 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:50:41.095 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:41.096 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:50:41.096 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:50:41.097 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:50:41.097  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:50:41.097  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 20:50:43.680  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:50:43.702 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:50:43.702 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:50:43.703 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:43.705 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:50:43.705 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:50:43.706 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:43.707 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:50:43.707 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:50:43.708 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:43.709 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:50:43.709 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:50:43.710 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:43.711 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:50:43.711 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:50:43.712 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:43.713 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:50:43.713 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:50:43.713 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:43.714 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:50:43.714 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:50:43.715 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:43.716 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:50:43.716 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:50:43.717 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:43.718 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:50:43.718 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:50:43.718 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:50:43.719 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:50:43.719 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:50:43.720 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 20:50:43.720 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:50:43.720 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:50:43.721 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:50:43.721 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:50:43.721 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:50:43.722 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 3
2019-10-30 20:50:43.723 DEBUG 5160 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:50:43.723 DEBUG 5160 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:50:43.724 DEBUG 5160 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:50:43.724 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:50:43.724 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:50:43.724 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 4
2019-10-30 20:50:43.725  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:50:43.725  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 45
2019-10-30 20:50:44.526  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[20, {}]}
2019-10-30 20:50:44.527 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:50:44.527 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 20:50:44.528 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:44.533 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:50:44.533 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:50:44.534 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:44.535 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:50:44.535 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:50:44.536 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:50:44.537 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 20:50:44.537 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 6(Integer)
2019-10-30 20:50:44.537 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 20:50:44.537  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 20:50:44.537  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 11
2019-10-30 20:50:44.579 ERROR 5160 --- [http-nio-8080-exec-8] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 20:50:44.579  WARN 5160 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 20:51:28.981  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {}]}
2019-10-30 20:51:28.982 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:51:28.982 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:51:28.982 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:51:28.984 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 20:51:28.985 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:51:28.986 DEBUG 5160 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : <==      Total: 3
2019-10-30 20:51:28.987  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:51:28.987  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:51:30.838  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.toInputPage', args=[{}]}
2019-10-30 20:51:30.838  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/tags-input
2019-10-30 20:51:30.838  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 0
2019-10-30 20:51:35.077  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.addTag', args=[Tag{id=null, name='springmvc', blogs=null}, {}]}
2019-10-30 20:51:35.079 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag WHERE ( name = ? ) 
2019-10-30 20:51:35.079 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: springmvc(String)
2019-10-30 20:51:35.080 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.selectByExample    : <==      Total: 0
2019-10-30 20:51:35.080 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.insertSelective    : ==>  Preparing: insert into tag ( name ) values ( ? ) 
2019-10-30 20:51:35.081 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.insertSelective    : ==> Parameters: springmvc(String)
2019-10-30 20:51:35.081 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.insertSelective    : <==    Updates: 1
2019-10-30 20:51:35.083  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : redirect:/admin/tags
2019-10-30 20:51:35.083  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:51:35.086  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {message=新增成功}]}
2019-10-30 20:51:35.087 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:51:35.087 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 20:51:35.092 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 20:51:35.093 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 20:51:35.093 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:51:35.094 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 20:51:35.094  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 20:51:35.094  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 20:51:35.841  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TypeController.types', args=[null, {}]}
2019-10-30 20:51:35.841 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.TypeMapper.selectByExample_COUNT   : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:51:35.843 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.TypeMapper.selectByExample_COUNT   : ==> Parameters: 
2019-10-30 20:51:35.843 DEBUG 5160 --- [http-nio-8080-exec-8] c.p.d.TypeMapper.selectByExample_COUNT   : <==      Total: 1
2019-10-30 20:51:35.843 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type limit ?,? 
2019-10-30 20:51:35.843 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:51:35.844 DEBUG 5160 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:51:35.845  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/types
2019-10-30 20:51:35.845  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 20:51:37.026  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:51:37.027 DEBUG 5160 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:51:37.027 DEBUG 5160 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:51:37.028 DEBUG 5160 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:51:37.030 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:51:37.030 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:51:37.032 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 4
2019-10-30 20:51:37.033 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:51:37.033 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:51:37.034 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:51:37.035 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:51:37.035 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:51:37.036 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:51:37.038 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:51:37.038 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:51:37.039 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:51:37.040 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:51:37.040 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:51:37.041 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:51:37.043 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:51:37.043 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:51:37.044 DEBUG 5160 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:51:37.045  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:51:37.046  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 20
2019-10-30 20:51:38.155  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.input', args=[{}]}
2019-10-30 20:51:38.157 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:51:38.157 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:51:38.158 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 20:51:38.160 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:51:38.160 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:51:38.161 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:51:38.161  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:51:38.161  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 6
2019-10-30 20:57:54.962  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=null, uid=null, typeid=null, tagids='9', title='springmvc请求过程的源码分析', description='springmvc请求过程的分析', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='', recommend=null, createTime=null, updateTime=null, content='## DispatcherServlet是springMvc中的一个关键角色,被称为中央调度器,每个请求都要经过该Servlet的如下方法(至至原生的Servlet在后面会讲解)

### doPatcher()方法:

所有请求到达这里之后会根据这个方法来找到对应的处理器进行处理.

执行的步骤:

1.对请求进行判断,是否为mutilpart请求

2.寻找对应的处理器映射器(HandleMapping),并且和执行器链包装成一个HandlerExecutionChain返回

3.根据handler来遍历寻找对应的处理器适配器(HandlerAdapter)

3.执行拦截器的preHandle方法

4.执行处理器方法,得到一个ModelAndView对象

5.根据处理器返回结果来设置ViewName,也就是解析出View视图

6.执行拦截器的postHandle方法

7.对mv对象进行一些处理,查看是否存在异常情况,如果出现则使用异常解析器进行相关的处理

8.调用拦截器的afterCompletion方法
```java
    	/**
    	 * Process the actual dispatching to the handler.
    	 * <p>The handler will be obtained by applying the servlet's HandlerMappings in order.
    	 * The HandlerAdapter will be obtained by querying the servlet's installed HandlerAdapters
    	 * to find the first that supports the handler class.
    	 * <p>All HTTP methods are handled by this method. It's up to HandlerAdapters or handlers
    	 * themselves to decide which methods are acceptable.
    	 * @param request current HTTP request
    	 * @param response current HTTP response
    	 * @throws Exception in case of any kind of processing failure
    	 */
    	protected void doDispatch(HttpServletRequest request, HttpServletResponse response) throws Exception {
             //先保留一份进来的请求,因为后面用来判断是否是Mutipart请求
    		HttpServletRequest processedRequest = request;
             //定义执行器链,这个类包装了handlemapping在里面
    		HandlerExecutionChain mappedHandler = null;
             //标志是否为MultipartRequest
    		boolean multipartRequestParsed = false;
    
    		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request);
    
    		try {
    			ModelAndView mv = null;
    			Exception dispatchException = null;
    
    			try {
                     //这里真正判断是否为MultipartRequest
    				processedRequest = checkMultipart(request);
    				multipartRequestParsed = (processedRequest != request);
    
    				// Determine handler for the current request.
                     // 获取Request对应的处理器映射器
    				mappedHandler = getHandler(processedRequest);
    				if (mappedHandler == null || mappedHandler.getHandler() == null) {
    					noHandlerFound(processedRequest, response);
    					return;
    				}
    
    				// Determine handler adapter for the current request.
                     //能执行到这里需要找到对应的handle
                     //根据上面的方法匹配到的handle来找到对应的处理器适配器
    				HandlerAdapter ha = getHandlerAdapter(mappedHandler.getHandler());
    
    				// Process last-modified header, if supported by the handler.
    				String method = request.getMethod();
    				boolean isGet = "GET".equals(method);
    				if (isGet || "HEAD".equals(method)) {
    					long lastModified = ha.getLastModified(request, mappedHandler.getHandler());
    					if (logger.isDebugEnabled()) {
    						logger.debug("Last-Modified value for [" + getRequestUri(request) + "] is: " + lastModified);
    					}
    					if (new ServletWebRequest(request, response).checkNotModified(lastModified) && isGet) {
    						return;
    					}
    				}
    
                     //执行拦截器的PreHandle方法()
                     //由此可见,该方法在处理器执行之前执行,并且return false之后就不会执行处理器方法
    				if (!mappedHandler.applyPreHandle(processedRequest, response)) {
    					return;
    				}
    
    				// Actually invoke the handler.
                     //真正执行Handler对应的方法,并且返回ModelAndView
    				mv = ha.handle(processedRequest, response, mappedHandler.getHandler());
    
    				if (asyncManager.isConcurrentHandlingStarted()) {
    					return;
    				}
    
                     //判断mv中是否设置了viewName,如果没有就默认帮你设置
    				applyDefaultViewName(processedRequest, mv);
                     //执行拦截器的postHandle方法(拦截处理程序的执行。在HandlerAdapter实际调用处理程序之后调                  // 用，但是在DispatcherServlet呈现视图之前调用。)
    				mappedHandler.applyPostHandle(processedRequest, response, mv);
    			}
    			catch (Exception ex) {
    				dispatchException = ex;
    			}
                 //对handler执行方法完成之后返回的结果进行处理,针对返回ModelAndView和异常的发生
                 //这个方法的最后一步是对前面拦截器的PostHandle方法成功的拦截器进行回调,去执行拦截器
                 //的另一个方法afterCompletion
    			processDispatchResult(processedRequest, response, mappedHandler, mv, dispatchException);
    		}
    		catch (Exception ex) {
    			triggerAfterCompletion(processedRequest, response, mappedHandler, ex);
    		}
    		catch (Error err) {
    			triggerAfterCompletionWithError(processedRequest, response, mappedHandler, err);
    		}
    		finally {
    			if (asyncManager.isConcurrentHandlingStarted()) {
    				// Instead of postHandle and afterCompletion
    				if (mappedHandler != null) {
    					mappedHandler.applyAfterConcurrentHandlingStarted(processedRequest, response);
    				}
    			}
    			else {
    				// Clean up any resources used by a multipart request.
    				if (multipartRequestParsed) {
    					cleanupMultipart(processedRequest);
    				}
    			}
    		}
    	}
    
```


### 获取处理器映射器的方法(最终返回的是与处理器执行链的包装对象)

### getHandle()方法:
```java
     1.遍历一个有所有HandleMapping的List: List<HandlerMapping> handlerMappings;

		HandleMapping是一个接口有许多的实现,根据不同的情况来选择不同的处理器映射器

     2.一个HandMapping中许多个Handle,要根据url来寻找对应的Handle

    	/**
    	 * Return the HandlerExecutionChain for this request.
    	 * <p>Tries all handler mappings in order.
    	 * @param request current HTTP request
    	 * @return the HandlerExecutionChain, or {@code null} if no handler could be found
    	 */
    	protected HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {
    		for (HandlerMapping hm : this.handlerMappings) {
    			if (logger.isTraceEnabled()) {
    				logger.trace(
    						"Testing handler map [" + hm + "] in DispatcherServlet with name '" + getServletName() + "'");
    			}
                 //根据对应的处理器映射器获取对应的处理器
                 //这里特指那些自定义的Controller,xml形式的或注解形式的
    			HandlerExecutionChain handler = hm.getHandler(request);
    			if (handler != null) {
    				return handler;
    			}
    		}
    		return null;
    	}
```


### getHandler(request):根据URL获取对应的Handle

#### 1.根据URL来查询对应的Handle

#### 2.获取处理器执行链(其实将handle的封装在同一个对象)
```java
    	/**
    	 * Look up a handler for the given request, falling back to the default
    	 * handler if no specific one is found.
    	 * @param request current HTTP request
    	 * @return the corresponding handler instance, or the default handler
    	 * @see #getHandlerInternal
    	 */
    	@Override
    	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {
             
    		Object handler = getHandlerInternal(request);
    		if (handler == null) {
    			handler = getDefaultHandler();
    		}
    		if (handler == null) {
    			return null;
    		}
    		// Bean name or resolved handler?
    		if (handler instanceof String) {
    			String handlerName = (String) handler;
    			handler = getApplicationContext().getBean(handlerName);
    		}
    
             //获取处理器执行链(其实将handle的封装在同一个对象)
    		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request);
    		if (CorsUtils.isCorsRequest(request)) {
    			CorsConfiguration globalConfig = this.corsConfigSource.getCorsConfiguration(request);
    			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request);
    			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig);
    			executionChain = getCorsHandlerExecutionChain(request, executionChain, config);
    		}
    		return executionChain;
    	}
```


 

### getHandlerInternal(request)：根据URL真正查找用户定义的Controller(Handle)

全程都需要加锁

1.获取请求的url

2.获取对应url所定义的方法

3.如果找到对应的方法则返回Handle(Controller)实例
```java
    	/**
    	 * Look up a handler method for the given request.
    	 */
    	@Override
    	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {
             //获取@RequestMapping中对应的url
    		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request);
    		if (logger.isDebugEnabled()) {
    			logger.debug("Looking up handler method for path " + lookupPath);
    		}
             //mappingRegistry:这个类用来保存所有注册的处理器映射器;类里面存在hashMap来存放处理器映射器
             //key为url,value为对应的方法
             //这里对该对象加了一个读锁
    		this.mappingRegistry.acquireReadLock();
    		try {
                 //获取对应url所定义的方法(执行的方法)
    			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request);
    			if (logger.isDebugEnabled()) {
    				if (handlerMethod != null) {
    					logger.debug("Returning handler method [" + handlerMethod + "]");
    				}
    				else {
    					logger.debug("Did not find handler method for [" + lookupPath + "]");
    				}
    			}
                 //如果根据url找到对应的handleMethod(处理器方法)
                 //createWithResolvedBean():根据getBean方法获取容器中对应的Handle实例
    			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null);
    		}
    		finally {
                 //释放锁
    			this.mappingRegistry.releaseReadLock();
    		}
    	}
```




### getHandlerAdapter(Object handler):获取对应的处理器适配器

1.遍历一个Servlet中所有处理器适配器的List;private List<HandlerAdapter> handlerAdapters;

2.找到一个与handler对应的处理器适配器

这里涉及到适配器设计模式:根据不同的适配器做不同的东西
```java
    	/**
    	 * Return the HandlerAdapter for this handler object.
    	 * @param handler the handler object to find an adapter for
    	 * @throws ServletException if no HandlerAdapter can be found for the handler. This is a fatal error.
    	 */
    	protected HandlerAdapter getHandlerAdapter(Object handler) throws ServletException {
    		for (HandlerAdapter ha : this.handlerAdapters) {
    			if (logger.isTraceEnabled()) {
    				logger.trace("Testing handler adapter [" + ha + "]");
    			}
                 //根据handler来匹配相应的处理器适配器
    			if (ha.supports(handler)) {
    				return ha;
    			}
    		}
    		throw new ServletException("No adapter for handler [" + handler +
    				"]: The DispatcherServlet configuration needs to include a HandlerAdapter that supports this handler");
    	}
```', type=Type{id=14, name='null', blogs=null}, tagIds='9'}, org.apache.catalina.session.StandardSessionFacade@3e87d917, {}]}
2019-10-30 20:57:54.969 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.BlogMapper.insertSelective   : ==>  Preparing: insert into blog ( uid, typeid, tagids, title, description, first_picture, views, published, flag, create_time, update_time, content ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-10-30 20:57:54.970 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.BlogMapper.insertSelective   : ==> Parameters: 2(Integer), 14(Integer), 9(String), springmvc请求过程的源码分析(String), springmvc请求过程的分析(String), a(String), 0(Integer), 1(Integer), 原创(String), 2019-10-30 20:57:54.963(Timestamp), 2019-10-30 20:57:54.963(Timestamp), ## DispatcherServlet是springMvc中的一个关键角色,被称为中央调度器,每个请求都要经过该Servlet的如下方法(至至原生的Servlet在后面会讲解)

### doPatcher()方法:

所有请求到达这里之后会根据这个方法来找到对应的处理器进行处理.

执行的步骤:

1.对请求进行判断,是否为mutilpart请求

2.寻找对应的处理器映射器(HandleMapping),并且和执行器链包装成一个HandlerExecutionChain返回

3.根据handler来遍历寻找对应的处理器适配器(HandlerAdapter)

3.执行拦截器的preHandle方法

4.执行处理器方法,得到一个ModelAndView对象

5.根据处理器返回结果来设置ViewName,也就是解析出View视图

6.执行拦截器的postHandle方法

7.对mv对象进行一些处理,查看是否存在异常情况,如果出现则使用异常解析器进行相关的处理

8.调用拦截器的afterCompletion方法
```java
    	/**
    	 * Process the actual dispatching to the handler.
    	 * <p>The handler will be obtained by applying the servlet's HandlerMappings in order.
    	 * The HandlerAdapter will be obtained by querying the servlet's installed HandlerAdapters
    	 * to find the first that supports the handler class.
    	 * <p>All HTTP methods are handled by this method. It's up to HandlerAdapters or handlers
    	 * themselves to decide which methods are acceptable.
    	 * @param request current HTTP request
    	 * @param response current HTTP response
    	 * @throws Exception in case of any kind of processing failure
    	 */
    	protected void doDispatch(HttpServletRequest request, HttpServletResponse response) throws Exception {
             //先保留一份进来的请求,因为后面用来判断是否是Mutipart请求
    		HttpServletRequest processedRequest = request;
             //定义执行器链,这个类包装了handlemapping在里面
    		HandlerExecutionChain mappedHandler = null;
             //标志是否为MultipartRequest
    		boolean multipartRequestParsed = false;
    
    		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request);
    
    		try {
    			ModelAndView mv = null;
    			Exception dispatchException = null;
    
    			try {
                     //这里真正判断是否为MultipartRequest
    				processedRequest = checkMultipart(request);
    				multipartRequestParsed = (processedRequest != request);
    
    				// Determine handler for the current request.
                     // 获取Request对应的处理器映射器
    				mappedHandler = getHandler(processedRequest);
    				if (mappedHandler == null || mappedHandler.getHandler() == null) {
    					noHandlerFound(processedRequest, response);
    					return;
    				}
    
    				// Determine handler adapter for the current request.
                     //能执行到这里需要找到对应的handle
                     //根据上面的方法匹配到的handle来找到对应的处理器适配器
    				HandlerAdapter ha = getHandlerAdapter(mappedHandler.getHandler());
    
    				// Process last-modified header, if supported by the handler.
    				String method = request.getMethod();
    				boolean isGet = "GET".equals(method);
    				if (isGet || "HEAD".equals(method)) {
    					long lastModified = ha.getLastModified(request, mappedHandler.getHandler());
    					if (logger.isDebugEnabled()) {
    						logger.debug("Last-Modified value for [" + getRequestUri(request) + "] is: " + lastModified);
    					}
    					if (new ServletWebRequest(request, response).checkNotModified(lastModified) && isGet) {
    						return;
    					}
    				}
    
                     //执行拦截器的PreHandle方法()
                     //由此可见,该方法在处理器执行之前执行,并且return false之后就不会执行处理器方法
    				if (!mappedHandler.applyPreHandle(processedRequest, response)) {
    					return;
    				}
    
    				// Actually invoke the handler.
                     //真正执行Handler对应的方法,并且返回ModelAndView
    				mv = ha.handle(processedRequest, response, mappedHandler.getHandler());
    
    				if (asyncManager.isConcurrentHandlingStarted()) {
    					return;
    				}
    
                     //判断mv中是否设置了viewName,如果没有就默认帮你设置
    				applyDefaultViewName(processedRequest, mv);
                     //执行拦截器的postHandle方法(拦截处理程序的执行。在HandlerAdapter实际调用处理程序之后调                  // 用，但是在DispatcherServlet呈现视图之前调用。)
    				mappedHandler.applyPostHandle(processedRequest, response, mv);
    			}
    			catch (Exception ex) {
    				dispatchException = ex;
    			}
                 //对handler执行方法完成之后返回的结果进行处理,针对返回ModelAndView和异常的发生
                 //这个方法的最后一步是对前面拦截器的PostHandle方法成功的拦截器进行回调,去执行拦截器
                 //的另一个方法afterCompletion
    			processDispatchResult(processedRequest, response, mappedHandler, mv, dispatchException);
    		}
    		catch (Exception ex) {
    			triggerAfterCompletion(processedRequest, response, mappedHandler, ex);
    		}
    		catch (Error err) {
    			triggerAfterCompletionWithError(processedRequest, response, mappedHandler, err);
    		}
    		finally {
    			if (asyncManager.isConcurrentHandlingStarted()) {
    				// Instead of postHandle and afterCompletion
    				if (mappedHandler != null) {
    					mappedHandler.applyAfterConcurrentHandlingStarted(processedRequest, response);
    				}
    			}
    			else {
    				// Clean up any resources used by a multipart request.
    				if (multipartRequestParsed) {
    					cleanupMultipart(processedRequest);
    				}
    			}
    		}
    	}
    
```


### 获取处理器映射器的方法(最终返回的是与处理器执行链的包装对象)

### getHandle()方法:
```java
     1.遍历一个有所有HandleMapping的List: List<HandlerMapping> handlerMappings;

		HandleMapping是一个接口有许多的实现,根据不同的情况来选择不同的处理器映射器

     2.一个HandMapping中许多个Handle,要根据url来寻找对应的Handle

    	/**
    	 * Return the HandlerExecutionChain for this request.
    	 * <p>Tries all handler mappings in order.
    	 * @param request current HTTP request
    	 * @return the HandlerExecutionChain, or {@code null} if no handler could be found
    	 */
    	protected HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {
    		for (HandlerMapping hm : this.handlerMappings) {
    			if (logger.isTraceEnabled()) {
    				logger.trace(
    						"Testing handler map [" + hm + "] in DispatcherServlet with name '" + getServletName() + "'");
    			}
                 //根据对应的处理器映射器获取对应的处理器
                 //这里特指那些自定义的Controller,xml形式的或注解形式的
    			HandlerExecutionChain handler = hm.getHandler(request);
    			if (handler != null) {
    				return handler;
    			}
    		}
    		return null;
    	}
```


### getHandler(request):根据URL获取对应的Handle

#### 1.根据URL来查询对应的Handle

#### 2.获取处理器执行链(其实将handle的封装在同一个对象)
```java
    	/**
    	 * Look up a handler for the given request, falling back to the default
    	 * handler if no specific one is found.
    	 * @param request current HTTP request
    	 * @return the corresponding handler instance, or the default handler
    	 * @see #getHandlerInternal
    	 */
    	@Override
    	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {
             
    		Object handler = getHandlerInternal(request);
    		if (handler == null) {
    			handler = getDefaultHandler();
    		}
    		if (handler == null) {
    			return null;
    		}
    		// Bean name or resolved handler?
    		if (handler instanceof String) {
    			String handlerName = (String) handler;
    			handler = getApplicationContext().getBean(handlerName);
    		}
    
             //获取处理器执行链(其实将handle的封装在同一个对象)
    		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request);
    		if (CorsUtils.isCorsRequest(request)) {
    			CorsConfiguration globalConfig = this.corsConfigSource.getCorsConfiguration(request);
    			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request);
    			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig);
    			executionChain = getCorsHandlerExecutionChain(request, executionChain, config);
    		}
    		return executionChain;
    	}
```


 

### getHandlerInternal(request)：根据URL真正查找用户定义的Controller(Handle)

全程都需要加锁

1.获取请求的url

2.获取对应url所定义的方法

3.如果找到对应的方法则返回Handle(Controller)实例
```java
    	/**
    	 * Look up a handler method for the given request.
    	 */
    	@Override
    	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {
             //获取@RequestMapping中对应的url
    		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request);
    		if (logger.isDebugEnabled()) {
    			logger.debug("Looking up handler method for path " + lookupPath);
    		}
             //mappingRegistry:这个类用来保存所有注册的处理器映射器;类里面存在hashMap来存放处理器映射器
             //key为url,value为对应的方法
             //这里对该对象加了一个读锁
    		this.mappingRegistry.acquireReadLock();
    		try {
                 //获取对应url所定义的方法(执行的方法)
    			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request);
    			if (logger.isDebugEnabled()) {
    				if (handlerMethod != null) {
    					logger.debug("Returning handler method [" + handlerMethod + "]");
    				}
    				else {
    					logger.debug("Did not find handler method for [" + lookupPath + "]");
    				}
    			}
                 //如果根据url找到对应的handleMethod(处理器方法)
                 //createWithResolvedBean():根据getBean方法获取容器中对应的Handle实例
    			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null);
    		}
    		finally {
                 //释放锁
    			this.mappingRegistry.releaseReadLock();
    		}
    	}
```




### getHandlerAdapter(Object handler):获取对应的处理器适配器

1.遍历一个Servlet中所有处理器适配器的List;private List<HandlerAdapter> handlerAdapters;

2.找到一个与handler对应的处理器适配器

这里涉及到适配器设计模式:根据不同的适配器做不同的东西
```java
    	/**
    	 * Return the HandlerAdapter for this handler object.
    	 * @param handler the handler object to find an adapter for
    	 * @throws ServletException if no HandlerAdapter can be found for the handler. This is a fatal error.
    	 */
    	protected HandlerAdapter getHandlerAdapter(Object handler) throws ServletException {
    		for (HandlerAdapter ha : this.handlerAdapters) {
    			if (logger.isTraceEnabled()) {
    				logger.trace("Testing handler adapter [" + ha + "]");
    			}
                 //根据handler来匹配相应的处理器适配器
    			if (ha.supports(handler)) {
    				return ha;
    			}
    		}
    		throw new ServletException("No adapter for handler [" + handler +
    				"]: The DispatcherServlet configuration needs to include a HandlerAdapter that supports this handler");
    	}
```(String)
2019-10-30 20:57:54.972 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.BlogMapper.insertSelective   : <==    Updates: 1
2019-10-30 20:57:54.975 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 20:57:54.976 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 14(Integer)
2019-10-30 20:57:54.977 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 20:57:54.977 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 20:57:54.977 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 源码分析(String), 3(Integer), 14(Integer)
2019-10-30 20:57:54.978 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 20:57:54.979 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 20:57:54.980 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 9(Integer)
2019-10-30 20:57:54.981 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 20:57:54.982 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 20:57:54.982 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: springmvc(String), 1(Integer), 9(Integer)
2019-10-30 20:57:54.983 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 20:57:55.071  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 20:57:55.071  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 109
2019-10-30 20:57:55.074  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 20:57:55.075 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 20:57:55.075 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 20:57:55.076 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 20:57:55.076 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 20:57:55.077 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:57:55.078 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 5
2019-10-30 20:57:55.079 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:57:55.079 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:57:55.080 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:55.081 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:57:55.081 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:57:55.082 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:55.083 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:57:55.083 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:57:55.083 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:55.085 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:57:55.085 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:57:55.085 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:55.086 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:57:55.087 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:57:55.087 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:55.088 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:57:55.088 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:57:55.089 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:57:55.089  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 20:57:55.089  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 20:57:57.216  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 20:57:57.232 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:57:57.232 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:57:57.233 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:57.234 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:57:57.234 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:57:57.235 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:57.237 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:57:57.237 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:57:57.238 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:57.239 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:57:57.239 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:57:57.240 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:57.241 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:57:57.241 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:57:57.242 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:57.244 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:57:57.244 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 20:57:57.245 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:57.246 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:57:57.246 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:57:57.247 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:57.248 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:57:57.248 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:57:57.248 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:57.250 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:57:57.250 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:57:57.250 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:57.252 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:57:57.252 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:57:57.252 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:57.253 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 20:57:57.253 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:57:57.254 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:57:57.254 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 20:57:57.254 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:57:57.255 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 20:57:57.255 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 20:57:57.255 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 20:57:57.256 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 20:57:57.257 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 20:57:57.257 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 20:57:57.257 DEBUG 5160 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 20:57:57.258 DEBUG 5160 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 20:57:57.258 DEBUG 5160 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 20:57:57.258 DEBUG 5160 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 20:57:57.259 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 20:57:57.259 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 20:57:57.259 DEBUG 5160 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 4
2019-10-30 20:57:57.260  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 20:57:57.260  INFO 5160 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 44
2019-10-30 20:57:58.550  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/21', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[21, {}]}
2019-10-30 20:57:58.551 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:57:58.551 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 21(Integer)
2019-10-30 20:57:58.551 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:58.554 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:57:58.555 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:57:58.555 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:58.556 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 20:57:58.557 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 20:57:58.557 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:57:58.558 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 20:57:58.559 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 9(Integer)
2019-10-30 20:57:58.559 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 20:57:58.559  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 20:57:58.559  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 9
2019-10-30 20:57:58.596 ERROR 5160 --- [http-nio-8080-exec-6] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 20:57:58.597  WARN 5160 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 20:59:22.510  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/file-upload', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.FileUploadController.toFileUploadPage', args=[{}]}
2019-10-30 20:59:22.513  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/file-upload
2019-10-30 20:59:22.513  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 20:59:29.144  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/fileupload', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.FileUploadController.fileUpload', args=[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@438d5db5, {}]}
2019-10-30 20:59:29.668  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/file-upload
2019-10-30 20:59:29.669  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 525
2019-10-30 20:59:35.554  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/21/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[21, {}]}
2019-10-30 20:59:35.559 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:59:35.559 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:59:35.560 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 20:59:35.561 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:59:35.562 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:59:35.563 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:59:35.564 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:59:35.565 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 21(Integer)
2019-10-30 20:59:35.566 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:59:35.567 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:59:35.567 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:59:35.568 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:59:35.569  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:59:35.569  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 20:59:38.108  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/20/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[20, {}]}
2019-10-30 20:59:38.109 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 20:59:38.109 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 20:59:38.110 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 20:59:38.112 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 20:59:38.112 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 20:59:38.112 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 20:59:38.114 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 20:59:38.114 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 20:59:38.115 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:59:38.116 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 20:59:38.116 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 20:59:38.116 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 20:59:38.117  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 20:59:38.117  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 9
2019-10-30 21:01:16.150  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=20, uid=null, typeid=null, tagids='6', title='spring容器初始化源码分析', description='spring容器初始化过程', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=1, createTime=null, updateTime=null, content='## Spring容器的初始化过程
流程图:
[![spring容器初始化流程图](11 "spring容器初始化流程图")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH125iTGAQXwAAALNXHk6u1A644.png "spring容器初始化流程图")


### 1.执行构造函数,实例化一个容器对象:
```java
    //创建容器对象,并且从spring的所有配置文件中加载definitions
    public ClassPathXmlApplicationContext(String[] configLocations, boolean refresh, ApplicationContext parent)
    			throws BeansException {
    		//使用parent创建
    		super(parent);
        	//将spring有关的配置文件都设置到configLocations
    		setConfigLocations(configLocations);
    		if (refresh) {
                //刷新容器
    			refresh();
    		}
    	}
```

### 2.刷新创建的ClasspathXmlApplicationContext
```java
    	@Override
    	public void refresh() throws BeansException, IllegalStateException {
    		synchronized (this.startupShutdownMonitor) {
    			// 1.Prepare this context for refreshing.刷新容器前的预处理
                 //设置容器的启动时间和加载自定义的一些数据配置文件:*.properties.......
    			prepareRefresh();
    
    			// Tell the subclass to refresh the internal bean factory.
                 // 2.
                 //	   (a)创建ioc容器 (DefaultListableBeanFactory)
                 //    (b)加载xml的信息 (最后转存为Document对象)
                 //    (c)对Document对象解析,在这里完成对BeanDefinition的注册和加载
    			ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
    
    			// Prepare the bean factory for use in this context.
                 // 3.对IOC容器的一些预处理
    			prepareBeanFactory(beanFactory);
    
    			try {
    				// Allows post-processing of the bean factory in context subclasses.
                     // STEP 4： 允许在AbstractApplicationContext的子类中对BeanFactory进行后置处理，                        //      postProcessBeanFactory()这个方法是个空实现。
    				postProcessBeanFactory(beanFactory);
    
                      //STEP 5： 调用BeanFactoryPostProcessor后置处理器处理BeanFactory的实例                                     （BeanDefinition）
    				// Invoke factory processors registered as beans in the context.
    				invokeBeanFactoryPostProcessors(beanFactory);
    
    				// Register bean processors that intercept bean creation.
    				//STEP6  1.注册BeanPostProcessor后置处理器
                      //  2.b）BeanPostProcessors后置处理器用于拦截bean的创建，对创建后的bean实例进行处理
                    registerBeanPostProcessors(beanFactory);
    
    				// Initialize message source for this context.
                     //STEP7 :初始化一些消息资源
    				initMessageSource();
    
    				// Initialize event multicaster for this context.
                     // STEP 8： 
                     //      a)  初始化应用事件广播器
                     //      b)  表明Spring内部基于事件机制
    				initApplicationEventMulticaster();
    
    				// Initialize other special beans in specific context subclasses.
                     //STEP9
                     //初始化一些特殊的bean
    				onRefresh();
    
    				// Check for listener beans and register them.
                     //STEP10 :
                     // 遍历寻找listener并且注册
    				registerListeners();
    
    				// Instantiate all remaining (non-lazy-init) singletons.
                     //STEP11
                     //       实例化剩余(非实例化的)bean
    				finishBeanFactoryInitialization(beanFactory);
    
    				// Last step: publish corresponding event.
                     //STEP12 : 完成容器的刷新,并且发布对应的事件
    				finishRefresh();
    			}
    
    			catch (BeansException ex) {
    				if (logger.isWarnEnabled()) {
    					logger.warn("Exception encountered during context initialization - " +
    							"cancelling refresh attempt: " + ex);
    				}
    
    				// Destroy already created singletons to avoid dangling resources.
    				destroyBeans();
    
    				// Reset 'active' flag.
    				cancelRefresh(ex);
    
    				// Propagate exception to caller.
    				throw ex;
    			}
    
    			finally {
    				// Reset common introspection caches in Spring's core, since we
    				// might not ever need metadata for singleton beans anymore...
    				resetCommonCaches();
    			}
    		}
    	}
    
```

### 创建Beanfactory的源码分析
```java
    ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
```

### 进入AbstractApplication的obtainFreshBeanFactory()的方法:

### 用于创建一个新的Ioc容器,这个Ioc容器就是DefaultListableBeanFactory
```java
    protected ConfigurableListableBeanFactory obtainFreshBeanFactory() {
        	//通过该方法刷新BeanFactory,并且创建一个ioc容器
    		refreshBeanFactory();
             //获取refreshBeanFactory()创建的ioc容器
    		ConfigurableListableBeanFactory beanFactory = getBeanFactory();
    		if (logger.isDebugEnabled()) {
    			logger.debug("Bean factory for " + getDisplayName() + ": " + beanFactory);
    		}
    		return beanFactory;
    	}
```



### 进入AbstractApplication的refreshBeanFactory()方法中:

### 初始化一个BeanFactory
```java
    	/**
    	 * This implementation performs an actual refresh of this context's underlying
    	 * bean factory, shutting down the previous bean factory (if any) and
    	 * initializing a fresh bean factory for the next phase of the context's lifecycle.
    	 */
    	@Override
    	protected final void refreshBeanFactory() throws BeansException {
            //判断是否已经存在BeanFactory
    		if (hasBeanFactory()) {
            //销毁上一个BeanFactory
    			destroyBeans();
            //并且关闭    
    			closeBeanFactory();
    		}
    		try {
            	//创建一个BeanFactory的实例(DefaultListableBeanFactory)
    			DefaultListableBeanFactory beanFactory = createBeanFactory();
    			beanFactory.setSerializationId(getId());
                //设置BeanFactory的属性:是否允许BeanDefinition的覆盖和循环依赖
    			customizeBeanFactory(beanFactory);
                //加载spring的xml文件的BeanDefinition
    			loadBeanDefinitions(beanFactory);
    			synchronized (this.beanFactoryMonitor) {
    				this.beanFactory = beanFactory;
    			}
    		}
    		catch (IOException ex) {
    			throw new ApplicationContextException("I/O error parsing bean definition source for " + getDisplayName(), ex);
    		}
    	}
    
```

### 加载BeanDefinition流程分析:

### 进入AbstractXmlApplicationContext的loadBeanDefinitions(beanFactory)方法:

>创建一个XmlBeanDefinitionReader,真正地去完成BeanDefinition的注册和加载

>配置XmlBeanDefinitionReader的属性

```java
    	/**
    	 * Loads the bean definitions via an XmlBeanDefinitionReader.
    	 * @see org.springframework.beans.factory.xml.XmlBeanDefinitionReader
    	 * @see #initBeanDefinitionReader
    	 * @see #loadBeanDefinitions
    	 */
    	@Override
    	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {
    		// Create a new XmlBeanDefinitionReader for the given BeanFactory
            //为工厂创建一个读取xml的一个reader
    		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);
    
    		// Configure the bean definition reader with this context's
    		// resource loading environment.
             //设置reader的一些环境属性
    		beanDefinitionReader.setEnvironment(this.getEnvironment());
    		beanDefinitionReader.setResourceLoader(this);
    		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));
    
    		// Allow a subclass to provide custom initialization of the reader,
    		// then proceed with actually loading the bean definitions.
             //允许自定义的reader来读取xml的BeanDefinition
    		initBeanDefinitionReader(beanDefinitionReader);
             //委托xml阅读器去加载xml的BeanDefinitions信息
    		loadBeanDefinitions(beanDefinitionReader);
    	}
    
    protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws BeansException,      IOException {
             //获取资源的位置
             //getConfigResources是一个空实现,需要子类去实现
             //获取ClasspathXMLApplicationContext的父类AbstractXmlApplicationContext的
             //配置文件信息,默认返回null
    		Resource[] configResources = getConfigResources();
    		if (configResources != null) {
    			reader.loadBeanDefinitions(configResources);
    		}
             //如果用户指定了spring的xml配置文件的位置就获取用户的自定义配置文件
             //否则就加载父类指定的默认加载位置,默认返回null
    		String[] configLocations = getConfigLocations();
    		if (configLocations != null) {
                 //该方法的参数就是我们在new一个容器实例传入的一个参数,代表spring的xml配置文件的地方
                 //该方法真正地去读取xml的beanDefinition的信息,并且返回读取的一个计数值,来表示读取了多少个
                 //位置的xml
    			reader.loadBeanDefinitions(configLocations);
    		}
    	}
```

### loadBeanDefinitions最终来到了XmlBeanDefinitionReader的doLoadBeanDefinitions方法：

>对XML文件进行解析

>完成BeanDefinition对象的加载与注册

```java
    	protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)
    			throws BeanDefinitionStoreException {
    		try {
                //将XML转换成document对象
    			Document doc = doLoadDocument(inputSource, resource);
                //BeanDefinition对象的加载与注册
    			return registerBeanDefinitions(doc, resource);
    		}
    		catch (BeanDefinitionStoreException ex) {
    			throw ex;
    		}
```



### 进入XmlBeanDefinitionReaderregisterBeanDefinitions

- 创建DefaultBeanDefinitionDocumentReader用来解析Document对象。
- 获得容器中已注册的BeanDefinition数量
- 委托给DefaultBeanDefinitionDocumentReader来完成BeanDefinition的加载、注册工作。
- 统计新注册的BeanDefinition数量
```java
    public int registerBeanDefinitions(Document doc, Resource resource) throws            BeanDefinitionStoreException {
             //创建一个BeanDefinitionDocumentReader来解析Document对象的BeanDefinition信息
    		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader();
            //获取容器已经存在的BeanDefinition的数量
    		int countBefore = getRegistry().getBeanDefinitionCount();
            //注册
    		documentReader.registerBeanDefinitions(doc, createReaderContext(resource));
            //返回注册后的容器中新增的BeanDefintion的个数
    		return getRegistry().getBeanDefinitionCount() - countBefore;
    	   }
```


### 进入DefaultBeanDefinitionDocumentReader

- 获得Document的根元素<beans>标签
- 真正实现BeanDefinition解析和注册工作

```java
    	public void registerBeanDefinitions(Document doc, XmlReaderContext readerContext) {
    		this.readerContext = readerContext;
    		logger.debug("Loading bean definitions");
             //从document对象中获取<bean>的标签
    		Element root = doc.getDocumentElement();
             //对这些标签的真正注册和解析
    		doRegisterBeanDefinitions(root);
    	}
```


### 接下来就是解析<bean>....的一些标签的过程(源码省略):

> 1.从根标签开始遍历所有的标签

> 2.如果存在默认的标签(<bean>...)的标签就进行解析

> 3.否则就去解析自定义的标签

>  4.解析<bean>标签里面的所有属性(id,name,class....)



### 实例化剩余的(非懒加载的)bean
```java
    	protected void finishBeanFactoryInitialization(ConfigurableListableBeanFactory beanFactory) {
    		// Initialize conversion service for this context.
    		if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &&
    				beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) {
    			beanFactory.setConversionService(
    					beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));
    		}
    
    		// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.
    		String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, false, false);
    		for (String weaverAwareName : weaverAwareNames) {
    			getBean(weaverAwareName);
    		}
    
    		// Stop using the temporary ClassLoader for type matching.
    		beanFactory.setTempClassLoader(null);
    
    		// Allow for caching all bean definition metadata, not expecting further changes.
    		beanFactory.freezeConfiguration();
    
    		// Instantiate all remaining (non-lazy-init) singletons.
             //重点方法:实例化容器剩余(非懒加载的)bean,并且ioc,DI和AOP都发生在这个方法里面
    		beanFactory.preInstantiateSingletons();
    	}
```', type=Type{id=14, name='null', blogs=null}, tagIds='6'}, org.apache.catalina.session.StandardSessionFacade@3e87d917, {}]}
2019-10-30 21:01:16.156 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:01:16.156 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 21:01:16.157 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:16.158 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:01:16.158 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 21:01:16.159 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:16.160 DEBUG 5160 --- [http-nio-8080-exec-9] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, recommend = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 21:01:16.161 DEBUG 5160 --- [http-nio-8080-exec-9] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 14(Integer), 6(String), spring容器初始化源码分析(String), spring容器初始化过程(String), a(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 21:01:16.151(Timestamp), 2019-10-30 21:01:16.151(Timestamp), ## Spring容器的初始化过程
流程图:
[![spring容器初始化流程图](11 "spring容器初始化流程图")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH125iTGAQXwAAALNXHk6u1A644.png "spring容器初始化流程图")


### 1.执行构造函数,实例化一个容器对象:
```java
    //创建容器对象,并且从spring的所有配置文件中加载definitions
    public ClassPathXmlApplicationContext(String[] configLocations, boolean refresh, ApplicationContext parent)
    			throws BeansException {
    		//使用parent创建
    		super(parent);
        	//将spring有关的配置文件都设置到configLocations
    		setConfigLocations(configLocations);
    		if (refresh) {
                //刷新容器
    			refresh();
    		}
    	}
```

### 2.刷新创建的ClasspathXmlApplicationContext
```java
    	@Override
    	public void refresh() throws BeansException, IllegalStateException {
    		synchronized (this.startupShutdownMonitor) {
    			// 1.Prepare this context for refreshing.刷新容器前的预处理
                 //设置容器的启动时间和加载自定义的一些数据配置文件:*.properties.......
    			prepareRefresh();
    
    			// Tell the subclass to refresh the internal bean factory.
                 // 2.
                 //	   (a)创建ioc容器 (DefaultListableBeanFactory)
                 //    (b)加载xml的信息 (最后转存为Document对象)
                 //    (c)对Document对象解析,在这里完成对BeanDefinition的注册和加载
    			ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
    
    			// Prepare the bean factory for use in this context.
                 // 3.对IOC容器的一些预处理
    			prepareBeanFactory(beanFactory);
    
    			try {
    				// Allows post-processing of the bean factory in context subclasses.
                     // STEP 4： 允许在AbstractApplicationContext的子类中对BeanFactory进行后置处理，                        //      postProcessBeanFactory()这个方法是个空实现。
    				postProcessBeanFactory(beanFactory);
    
                      //STEP 5： 调用BeanFactoryPostProcessor后置处理器处理BeanFactory的实例                                     （BeanDefinition）
    				// Invoke factory processors registered as beans in the context.
    				invokeBeanFactoryPostProcessors(beanFactory);
    
    				// Register bean processors that intercept bean creation.
    				//STEP6  1.注册BeanPostProcessor后置处理器
                      //  2.b）BeanPostProcessors后置处理器用于拦截bean的创建，对创建后的bean实例进行处理
                    registerBeanPostProcessors(beanFactory);
    
    				// Initialize message source for this context.
                     //STEP7 :初始化一些消息资源
    				initMessageSource();
    
    				// Initialize event multicaster for this context.
                     // STEP 8： 
                     //      a)  初始化应用事件广播器
                     //      b)  表明Spring内部基于事件机制
    				initApplicationEventMulticaster();
    
    				// Initialize other special beans in specific context subclasses.
                     //STEP9
                     //初始化一些特殊的bean
    				onRefresh();
    
    				// Check for listener beans and register them.
                     //STEP10 :
                     // 遍历寻找listener并且注册
    				registerListeners();
    
    				// Instantiate all remaining (non-lazy-init) singletons.
                     //STEP11
                     //       实例化剩余(非实例化的)bean
    				finishBeanFactoryInitialization(beanFactory);
    
    				// Last step: publish corresponding event.
                     //STEP12 : 完成容器的刷新,并且发布对应的事件
    				finishRefresh();
    			}
    
    			catch (BeansException ex) {
    				if (logger.isWarnEnabled()) {
    					logger.warn("Exception encountered during context initialization - " +
    							"cancelling refresh attempt: " + ex);
    				}
    
    				// Destroy already created singletons to avoid dangling resources.
    				destroyBeans();
    
    				// Reset 'active' flag.
    				cancelRefresh(ex);
    
    				// Propagate exception to caller.
    				throw ex;
    			}
    
    			finally {
    				// Reset common introspection caches in Spring's core, since we
    				// might not ever need metadata for singleton beans anymore...
    				resetCommonCaches();
    			}
    		}
    	}
    
```

### 创建Beanfactory的源码分析
```java
    ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
```

### 进入AbstractApplication的obtainFreshBeanFactory()的方法:

### 用于创建一个新的Ioc容器,这个Ioc容器就是DefaultListableBeanFactory
```java
    protected ConfigurableListableBeanFactory obtainFreshBeanFactory() {
        	//通过该方法刷新BeanFactory,并且创建一个ioc容器
    		refreshBeanFactory();
             //获取refreshBeanFactory()创建的ioc容器
    		ConfigurableListableBeanFactory beanFactory = getBeanFactory();
    		if (logger.isDebugEnabled()) {
    			logger.debug("Bean factory for " + getDisplayName() + ": " + beanFactory);
    		}
    		return beanFactory;
    	}
```



### 进入AbstractApplication的refreshBeanFactory()方法中:

### 初始化一个BeanFactory
```java
    	/**
    	 * This implementation performs an actual refresh of this context's underlying
    	 * bean factory, shutting down the previous bean factory (if any) and
    	 * initializing a fresh bean factory for the next phase of the context's lifecycle.
    	 */
    	@Override
    	protected final void refreshBeanFactory() throws BeansException {
            //判断是否已经存在BeanFactory
    		if (hasBeanFactory()) {
            //销毁上一个BeanFactory
    			destroyBeans();
            //并且关闭    
    			closeBeanFactory();
    		}
    		try {
            	//创建一个BeanFactory的实例(DefaultListableBeanFactory)
    			DefaultListableBeanFactory beanFactory = createBeanFactory();
    			beanFactory.setSerializationId(getId());
                //设置BeanFactory的属性:是否允许BeanDefinition的覆盖和循环依赖
    			customizeBeanFactory(beanFactory);
                //加载spring的xml文件的BeanDefinition
    			loadBeanDefinitions(beanFactory);
    			synchronized (this.beanFactoryMonitor) {
    				this.beanFactory = beanFactory;
    			}
    		}
    		catch (IOException ex) {
    			throw new ApplicationContextException("I/O error parsing bean definition source for " + getDisplayName(), ex);
    		}
    	}
    
```

### 加载BeanDefinition流程分析:

### 进入AbstractXmlApplicationContext的loadBeanDefinitions(beanFactory)方法:

>创建一个XmlBeanDefinitionReader,真正地去完成BeanDefinition的注册和加载

>配置XmlBeanDefinitionReader的属性

```java
    	/**
    	 * Loads the bean definitions via an XmlBeanDefinitionReader.
    	 * @see org.springframework.beans.factory.xml.XmlBeanDefinitionReader
    	 * @see #initBeanDefinitionReader
    	 * @see #loadBeanDefinitions
    	 */
    	@Override
    	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {
    		// Create a new XmlBeanDefinitionReader for the given BeanFactory
            //为工厂创建一个读取xml的一个reader
    		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);
    
    		// Configure the bean definition reader with this context's
    		// resource loading environment.
             //设置reader的一些环境属性
    		beanDefinitionReader.setEnvironment(this.getEnvironment());
    		beanDefinitionReader.setResourceLoader(this);
    		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));
    
    		// Allow a subclass to provide custom initialization of the reader,
    		// then proceed with actually loading the bean definitions.
             //允许自定义的reader来读取xml的BeanDefinition
    		initBeanDefinitionReader(beanDefinitionReader);
             //委托xml阅读器去加载xml的BeanDefinitions信息
    		loadBeanDefinitions(beanDefinitionReader);
    	}
    
    protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws BeansException,      IOException {
             //获取资源的位置
             //getConfigResources是一个空实现,需要子类去实现
             //获取ClasspathXMLApplicationContext的父类AbstractXmlApplicationContext的
             //配置文件信息,默认返回null
    		Resource[] configResources = getConfigResources();
    		if (configResources != null) {
    			reader.loadBeanDefinitions(configResources);
    		}
             //如果用户指定了spring的xml配置文件的位置就获取用户的自定义配置文件
             //否则就加载父类指定的默认加载位置,默认返回null
    		String[] configLocations = getConfigLocations();
    		if (configLocations != null) {
                 //该方法的参数就是我们在new一个容器实例传入的一个参数,代表spring的xml配置文件的地方
                 //该方法真正地去读取xml的beanDefinition的信息,并且返回读取的一个计数值,来表示读取了多少个
                 //位置的xml
    			reader.loadBeanDefinitions(configLocations);
    		}
    	}
```

### loadBeanDefinitions最终来到了XmlBeanDefinitionReader的doLoadBeanDefinitions方法：

>对XML文件进行解析

>完成BeanDefinition对象的加载与注册

```java
    	protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)
    			throws BeanDefinitionStoreException {
    		try {
                //将XML转换成document对象
    			Document doc = doLoadDocument(inputSource, resource);
                //BeanDefinition对象的加载与注册
    			return registerBeanDefinitions(doc, resource);
    		}
    		catch (BeanDefinitionStoreException ex) {
    			throw ex;
    		}
```



### 进入XmlBeanDefinitionReaderregisterBeanDefinitions

- 创建DefaultBeanDefinitionDocumentReader用来解析Document对象。
- 获得容器中已注册的BeanDefinition数量
- 委托给DefaultBeanDefinitionDocumentReader来完成BeanDefinition的加载、注册工作。
- 统计新注册的BeanDefinition数量
```java
    public int registerBeanDefinitions(Document doc, Resource resource) throws            BeanDefinitionStoreException {
             //创建一个BeanDefinitionDocumentReader来解析Document对象的BeanDefinition信息
    		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader();
            //获取容器已经存在的BeanDefinition的数量
    		int countBefore = getRegistry().getBeanDefinitionCount();
            //注册
    		documentReader.registerBeanDefinitions(doc, createReaderContext(resource));
            //返回注册后的容器中新增的BeanDefintion的个数
    		return getRegistry().getBeanDefinitionCount() - countBefore;
    	   }
```


### 进入DefaultBeanDefinitionDocumentReader

- 获得Document的根元素<beans>标签
- 真正实现BeanDefinition解析和注册工作

```java
    	public void registerBeanDefinitions(Document doc, XmlReaderContext readerContext) {
    		this.readerContext = readerContext;
    		logger.debug("Loading bean definitions");
             //从document对象中获取<bean>的标签
    		Element root = doc.getDocumentElement();
             //对这些标签的真正注册和解析
    		doRegisterBeanDefinitions(root);
    	}
```


### 接下来就是解析<bean>....的一些标签的过程(源码省略):

> 1.从根标签开始遍历所有的标签

> 2.如果存在默认的标签(<bean>...)的标签就进行解析

> 3.否则就去解析自定义的标签

>  4.解析<bean>标签里面的所有属性(id,name,class....)



### 实例化剩余的(非懒加载的)bean
```java
    	protected void finishBeanFactoryInitialization(ConfigurableListableBeanFactory beanFactory) {
    		// Initialize conversion service for this context.
    		if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &&
    				beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) {
    			beanFactory.setConversionService(
    					beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));
    		}
    
    		// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.
    		String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, false, false);
    		for (String weaverAwareName : weaverAwareNames) {
    			getBean(weaverAwareName);
    		}
    
    		// Stop using the temporary ClassLoader for type matching.
    		beanFactory.setTempClassLoader(null);
    
    		// Allow for caching all bean definition metadata, not expecting further changes.
    		beanFactory.freezeConfiguration();
    
    		// Instantiate all remaining (non-lazy-init) singletons.
             //重点方法:实例化容器剩余(非懒加载的)bean,并且ioc,DI和AOP都发生在这个方法里面
    		beanFactory.preInstantiateSingletons();
    	}
```(String), 20(Integer)
2019-10-30 21:01:16.162 DEBUG 5160 --- [http-nio-8080-exec-9] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 21:01:16.233  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 21:01:16.233  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 83
2019-10-30 21:01:16.238  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:01:16.240 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:01:16.240 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:01:16.241 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:01:16.242 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:01:16.242 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:01:16.244 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 5
2019-10-30 21:01:16.245 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:16.246 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:01:16.246 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:16.247 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:16.247 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:01:16.248 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:16.249 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:16.249 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:01:16.249 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:16.250 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:16.250 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:01:16.250 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:16.251 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:16.252 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:01:16.252 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:16.254 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:01:16.255 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:01:16.256 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:01:16.256  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:01:16.256  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 18
2019-10-30 21:01:18.880  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:01:18.895 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:01:18.895 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:01:18.896 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:18.897 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:18.897 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:01:18.897 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:18.898 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:01:18.898 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:01:18.899 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:18.900 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:18.900 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:01:18.900 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:18.901 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:01:18.902 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:01:18.902 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:18.904 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:18.904 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:01:18.905 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:18.906 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:01:18.906 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:01:18.907 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:18.907 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:18.908 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:01:18.908 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:18.909 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:01:18.909 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:01:18.909 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:18.911 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:18.911 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:01:18.912 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:18.912 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:01:18.912 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:01:18.913 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:01:18.913 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:01:18.913 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:01:18.914 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:01:18.914 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:01:18.914 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:01:18.915 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:01:18.915 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:01:18.915 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:01:18.916 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 21:01:18.916 DEBUG 5160 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:01:18.916 DEBUG 5160 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:01:18.917 DEBUG 5160 --- [http-nio-8080-exec-10] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:01:18.917 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:01:18.917 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:01:18.918 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 4
2019-10-30 21:01:18.918  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:01:18.918  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 38
2019-10-30 21:01:23.356  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[20, {}]}
2019-10-30 21:01:23.357 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:01:23.357 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 21:01:23.358 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:23.363 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:23.363 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:01:23.364 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:23.366 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:01:23.366 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:01:23.367 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:23.368 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:01:23.369 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 6(Integer)
2019-10-30 21:01:23.369 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:01:23.369  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:01:23.370  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 21:01:23.420  INFO 5160 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/11', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[11, {}]}
2019-10-30 21:01:23.420 ERROR 5160 --- [http-nio-8080-exec-10] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:01:23.420  WARN 5160 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:01:23.422 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:01:23.423 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 11(Integer)
2019-10-30 21:01:23.423 DEBUG 5160 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 0
2019-10-30 21:01:23.427 ERROR 5160 --- [http-nio-8080-exec-4] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/11 Exception : {}

com.pan.exception.NotFoundException: 资源没找到
	at com.pan.controller.IndexController.blog(IndexController.java:97)
	at com.pan.controller.IndexController$$FastClassBySpringCGLIB$$bf1dad9a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.IndexController$$EnhancerBySpringCGLIB$$9214041d.blog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 21:01:23.448  WARN 5160 --- [http-nio-8080-exec-4] .w.s.m.a.ResponseStatusExceptionResolver : Resolved [com.pan.exception.NotFoundException: 资源没找到]
2019-10-30 21:01:33.254  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/20/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[20, {}]}
2019-10-30 21:01:33.255 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 21:01:33.256 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 21:01:33.256 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 21:01:33.258 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:01:33.259 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:01:33.259 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:01:33.261 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:01:33.261 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 21:01:33.262 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:33.263 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:01:33.263 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:01:33.264 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:01:33.264  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 21:01:33.264  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 10
2019-10-30 21:02:30.247  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=20, uid=null, typeid=null, tagids='6', title='spring容器初始化源码分析', description='spring容器初始化过程', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=1, createTime=null, updateTime=null, content='## Spring容器的初始化过程
流程图:
[![spring容器初始化流程](http://106.15.204.187:8888/group1/M00/00/00/rBEKH125iTGAQXwAAALNXHk6u1A644.png "spring容器初始化流程")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH125iTGAQXwAAALNXHk6u1A644.png "spring容器初始化流程")


### 1.执行构造函数,实例化一个容器对象:
```java
    //创建容器对象,并且从spring的所有配置文件中加载definitions
    public ClassPathXmlApplicationContext(String[] configLocations, boolean refresh, ApplicationContext parent)
    			throws BeansException {
    		//使用parent创建
    		super(parent);
        	//将spring有关的配置文件都设置到configLocations
    		setConfigLocations(configLocations);
    		if (refresh) {
                //刷新容器
    			refresh();
    		}
    	}
```

### 2.刷新创建的ClasspathXmlApplicationContext
```java
    	@Override
    	public void refresh() throws BeansException, IllegalStateException {
    		synchronized (this.startupShutdownMonitor) {
    			// 1.Prepare this context for refreshing.刷新容器前的预处理
                 //设置容器的启动时间和加载自定义的一些数据配置文件:*.properties.......
    			prepareRefresh();
    
    			// Tell the subclass to refresh the internal bean factory.
                 // 2.
                 //	   (a)创建ioc容器 (DefaultListableBeanFactory)
                 //    (b)加载xml的信息 (最后转存为Document对象)
                 //    (c)对Document对象解析,在这里完成对BeanDefinition的注册和加载
    			ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
    
    			// Prepare the bean factory for use in this context.
                 // 3.对IOC容器的一些预处理
    			prepareBeanFactory(beanFactory);
    
    			try {
    				// Allows post-processing of the bean factory in context subclasses.
                     // STEP 4： 允许在AbstractApplicationContext的子类中对BeanFactory进行后置处理，                        //      postProcessBeanFactory()这个方法是个空实现。
    				postProcessBeanFactory(beanFactory);
    
                      //STEP 5： 调用BeanFactoryPostProcessor后置处理器处理BeanFactory的实例                                     （BeanDefinition）
    				// Invoke factory processors registered as beans in the context.
    				invokeBeanFactoryPostProcessors(beanFactory);
    
    				// Register bean processors that intercept bean creation.
    				//STEP6  1.注册BeanPostProcessor后置处理器
                      //  2.b）BeanPostProcessors后置处理器用于拦截bean的创建，对创建后的bean实例进行处理
                    registerBeanPostProcessors(beanFactory);
    
    				// Initialize message source for this context.
                     //STEP7 :初始化一些消息资源
    				initMessageSource();
    
    				// Initialize event multicaster for this context.
                     // STEP 8： 
                     //      a)  初始化应用事件广播器
                     //      b)  表明Spring内部基于事件机制
    				initApplicationEventMulticaster();
    
    				// Initialize other special beans in specific context subclasses.
                     //STEP9
                     //初始化一些特殊的bean
    				onRefresh();
    
    				// Check for listener beans and register them.
                     //STEP10 :
                     // 遍历寻找listener并且注册
    				registerListeners();
    
    				// Instantiate all remaining (non-lazy-init) singletons.
                     //STEP11
                     //       实例化剩余(非实例化的)bean
    				finishBeanFactoryInitialization(beanFactory);
    
    				// Last step: publish corresponding event.
                     //STEP12 : 完成容器的刷新,并且发布对应的事件
    				finishRefresh();
    			}
    
    			catch (BeansException ex) {
    				if (logger.isWarnEnabled()) {
    					logger.warn("Exception encountered during context initialization - " +
    							"cancelling refresh attempt: " + ex);
    				}
    
    				// Destroy already created singletons to avoid dangling resources.
    				destroyBeans();
    
    				// Reset 'active' flag.
    				cancelRefresh(ex);
    
    				// Propagate exception to caller.
    				throw ex;
    			}
    
    			finally {
    				// Reset common introspection caches in Spring's core, since we
    				// might not ever need metadata for singleton beans anymore...
    				resetCommonCaches();
    			}
    		}
    	}
    
```

### 创建Beanfactory的源码分析
```java
    ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
```

### 进入AbstractApplication的obtainFreshBeanFactory()的方法:

### 用于创建一个新的Ioc容器,这个Ioc容器就是DefaultListableBeanFactory
```java
    protected ConfigurableListableBeanFactory obtainFreshBeanFactory() {
        	//通过该方法刷新BeanFactory,并且创建一个ioc容器
    		refreshBeanFactory();
             //获取refreshBeanFactory()创建的ioc容器
    		ConfigurableListableBeanFactory beanFactory = getBeanFactory();
    		if (logger.isDebugEnabled()) {
    			logger.debug("Bean factory for " + getDisplayName() + ": " + beanFactory);
    		}
    		return beanFactory;
    	}
```



### 进入AbstractApplication的refreshBeanFactory()方法中:

### 初始化一个BeanFactory
```java
    	/**
    	 * This implementation performs an actual refresh of this context's underlying
    	 * bean factory, shutting down the previous bean factory (if any) and
    	 * initializing a fresh bean factory for the next phase of the context's lifecycle.
    	 */
    	@Override
    	protected final void refreshBeanFactory() throws BeansException {
            //判断是否已经存在BeanFactory
    		if (hasBeanFactory()) {
            //销毁上一个BeanFactory
    			destroyBeans();
            //并且关闭    
    			closeBeanFactory();
    		}
    		try {
            	//创建一个BeanFactory的实例(DefaultListableBeanFactory)
    			DefaultListableBeanFactory beanFactory = createBeanFactory();
    			beanFactory.setSerializationId(getId());
                //设置BeanFactory的属性:是否允许BeanDefinition的覆盖和循环依赖
    			customizeBeanFactory(beanFactory);
                //加载spring的xml文件的BeanDefinition
    			loadBeanDefinitions(beanFactory);
    			synchronized (this.beanFactoryMonitor) {
    				this.beanFactory = beanFactory;
    			}
    		}
    		catch (IOException ex) {
    			throw new ApplicationContextException("I/O error parsing bean definition source for " + getDisplayName(), ex);
    		}
    	}
    
```

### 加载BeanDefinition流程分析:

### 进入AbstractXmlApplicationContext的loadBeanDefinitions(beanFactory)方法:

>创建一个XmlBeanDefinitionReader,真正地去完成BeanDefinition的注册和加载

>配置XmlBeanDefinitionReader的属性

```java
    	/**
    	 * Loads the bean definitions via an XmlBeanDefinitionReader.
    	 * @see org.springframework.beans.factory.xml.XmlBeanDefinitionReader
    	 * @see #initBeanDefinitionReader
    	 * @see #loadBeanDefinitions
    	 */
    	@Override
    	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {
    		// Create a new XmlBeanDefinitionReader for the given BeanFactory
            //为工厂创建一个读取xml的一个reader
    		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);
    
    		// Configure the bean definition reader with this context's
    		// resource loading environment.
             //设置reader的一些环境属性
    		beanDefinitionReader.setEnvironment(this.getEnvironment());
    		beanDefinitionReader.setResourceLoader(this);
    		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));
    
    		// Allow a subclass to provide custom initialization of the reader,
    		// then proceed with actually loading the bean definitions.
             //允许自定义的reader来读取xml的BeanDefinition
    		initBeanDefinitionReader(beanDefinitionReader);
             //委托xml阅读器去加载xml的BeanDefinitions信息
    		loadBeanDefinitions(beanDefinitionReader);
    	}
    
    protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws BeansException,      IOException {
             //获取资源的位置
             //getConfigResources是一个空实现,需要子类去实现
             //获取ClasspathXMLApplicationContext的父类AbstractXmlApplicationContext的
             //配置文件信息,默认返回null
    		Resource[] configResources = getConfigResources();
    		if (configResources != null) {
    			reader.loadBeanDefinitions(configResources);
    		}
             //如果用户指定了spring的xml配置文件的位置就获取用户的自定义配置文件
             //否则就加载父类指定的默认加载位置,默认返回null
    		String[] configLocations = getConfigLocations();
    		if (configLocations != null) {
                 //该方法的参数就是我们在new一个容器实例传入的一个参数,代表spring的xml配置文件的地方
                 //该方法真正地去读取xml的beanDefinition的信息,并且返回读取的一个计数值,来表示读取了多少个
                 //位置的xml
    			reader.loadBeanDefinitions(configLocations);
    		}
    	}
```

### loadBeanDefinitions最终来到了XmlBeanDefinitionReader的doLoadBeanDefinitions方法：

>对XML文件进行解析

>完成BeanDefinition对象的加载与注册

```java
    	protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)
    			throws BeanDefinitionStoreException {
    		try {
                //将XML转换成document对象
    			Document doc = doLoadDocument(inputSource, resource);
                //BeanDefinition对象的加载与注册
    			return registerBeanDefinitions(doc, resource);
    		}
    		catch (BeanDefinitionStoreException ex) {
    			throw ex;
    		}
```



### 进入XmlBeanDefinitionReaderregisterBeanDefinitions

- 创建DefaultBeanDefinitionDocumentReader用来解析Document对象。
- 获得容器中已注册的BeanDefinition数量
- 委托给DefaultBeanDefinitionDocumentReader来完成BeanDefinition的加载、注册工作。
- 统计新注册的BeanDefinition数量
```java
    public int registerBeanDefinitions(Document doc, Resource resource) throws            BeanDefinitionStoreException {
             //创建一个BeanDefinitionDocumentReader来解析Document对象的BeanDefinition信息
    		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader();
            //获取容器已经存在的BeanDefinition的数量
    		int countBefore = getRegistry().getBeanDefinitionCount();
            //注册
    		documentReader.registerBeanDefinitions(doc, createReaderContext(resource));
            //返回注册后的容器中新增的BeanDefintion的个数
    		return getRegistry().getBeanDefinitionCount() - countBefore;
    	   }
```


### 进入DefaultBeanDefinitionDocumentReader

- 获得Document的根元素<beans>标签
- 真正实现BeanDefinition解析和注册工作

```java
    	public void registerBeanDefinitions(Document doc, XmlReaderContext readerContext) {
    		this.readerContext = readerContext;
    		logger.debug("Loading bean definitions");
             //从document对象中获取<bean>的标签
    		Element root = doc.getDocumentElement();
             //对这些标签的真正注册和解析
    		doRegisterBeanDefinitions(root);
    	}
```


### 接下来就是解析<bean>....的一些标签的过程(源码省略):

> 1.从根标签开始遍历所有的标签

> 2.如果存在默认的标签(<bean>...)的标签就进行解析

> 3.否则就去解析自定义的标签

>  4.解析<bean>标签里面的所有属性(id,name,class....)



### 实例化剩余的(非懒加载的)bean
```java
    	protected void finishBeanFactoryInitialization(ConfigurableListableBeanFactory beanFactory) {
    		// Initialize conversion service for this context.
    		if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &&
    				beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) {
    			beanFactory.setConversionService(
    					beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));
    		}
    
    		// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.
    		String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, false, false);
    		for (String weaverAwareName : weaverAwareNames) {
    			getBean(weaverAwareName);
    		}
    
    		// Stop using the temporary ClassLoader for type matching.
    		beanFactory.setTempClassLoader(null);
    
    		// Allow for caching all bean definition metadata, not expecting further changes.
    		beanFactory.freezeConfiguration();
    
    		// Instantiate all remaining (non-lazy-init) singletons.
             //重点方法:实例化容器剩余(非懒加载的)bean,并且ioc,DI和AOP都发生在这个方法里面
    		beanFactory.preInstantiateSingletons();
    	}
```', type=Type{id=14, name='null', blogs=null}, tagIds='6'}, org.apache.catalina.session.StandardSessionFacade@3e87d917, {}]}
2019-10-30 21:02:30.248 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:02:30.248 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 21:02:30.249 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:30.251 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:02:30.251 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 21:02:30.252 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:30.253 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, recommend = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 21:02:30.254 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 14(Integer), 6(String), spring容器初始化源码分析(String), spring容器初始化过程(String), a(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 21:02:30.248(Timestamp), 2019-10-30 21:02:30.248(Timestamp), ## Spring容器的初始化过程
流程图:
[![spring容器初始化流程](http://106.15.204.187:8888/group1/M00/00/00/rBEKH125iTGAQXwAAALNXHk6u1A644.png "spring容器初始化流程")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH125iTGAQXwAAALNXHk6u1A644.png "spring容器初始化流程")


### 1.执行构造函数,实例化一个容器对象:
```java
    //创建容器对象,并且从spring的所有配置文件中加载definitions
    public ClassPathXmlApplicationContext(String[] configLocations, boolean refresh, ApplicationContext parent)
    			throws BeansException {
    		//使用parent创建
    		super(parent);
        	//将spring有关的配置文件都设置到configLocations
    		setConfigLocations(configLocations);
    		if (refresh) {
                //刷新容器
    			refresh();
    		}
    	}
```

### 2.刷新创建的ClasspathXmlApplicationContext
```java
    	@Override
    	public void refresh() throws BeansException, IllegalStateException {
    		synchronized (this.startupShutdownMonitor) {
    			// 1.Prepare this context for refreshing.刷新容器前的预处理
                 //设置容器的启动时间和加载自定义的一些数据配置文件:*.properties.......
    			prepareRefresh();
    
    			// Tell the subclass to refresh the internal bean factory.
                 // 2.
                 //	   (a)创建ioc容器 (DefaultListableBeanFactory)
                 //    (b)加载xml的信息 (最后转存为Document对象)
                 //    (c)对Document对象解析,在这里完成对BeanDefinition的注册和加载
    			ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
    
    			// Prepare the bean factory for use in this context.
                 // 3.对IOC容器的一些预处理
    			prepareBeanFactory(beanFactory);
    
    			try {
    				// Allows post-processing of the bean factory in context subclasses.
                     // STEP 4： 允许在AbstractApplicationContext的子类中对BeanFactory进行后置处理，                        //      postProcessBeanFactory()这个方法是个空实现。
    				postProcessBeanFactory(beanFactory);
    
                      //STEP 5： 调用BeanFactoryPostProcessor后置处理器处理BeanFactory的实例                                     （BeanDefinition）
    				// Invoke factory processors registered as beans in the context.
    				invokeBeanFactoryPostProcessors(beanFactory);
    
    				// Register bean processors that intercept bean creation.
    				//STEP6  1.注册BeanPostProcessor后置处理器
                      //  2.b）BeanPostProcessors后置处理器用于拦截bean的创建，对创建后的bean实例进行处理
                    registerBeanPostProcessors(beanFactory);
    
    				// Initialize message source for this context.
                     //STEP7 :初始化一些消息资源
    				initMessageSource();
    
    				// Initialize event multicaster for this context.
                     // STEP 8： 
                     //      a)  初始化应用事件广播器
                     //      b)  表明Spring内部基于事件机制
    				initApplicationEventMulticaster();
    
    				// Initialize other special beans in specific context subclasses.
                     //STEP9
                     //初始化一些特殊的bean
    				onRefresh();
    
    				// Check for listener beans and register them.
                     //STEP10 :
                     // 遍历寻找listener并且注册
    				registerListeners();
    
    				// Instantiate all remaining (non-lazy-init) singletons.
                     //STEP11
                     //       实例化剩余(非实例化的)bean
    				finishBeanFactoryInitialization(beanFactory);
    
    				// Last step: publish corresponding event.
                     //STEP12 : 完成容器的刷新,并且发布对应的事件
    				finishRefresh();
    			}
    
    			catch (BeansException ex) {
    				if (logger.isWarnEnabled()) {
    					logger.warn("Exception encountered during context initialization - " +
    							"cancelling refresh attempt: " + ex);
    				}
    
    				// Destroy already created singletons to avoid dangling resources.
    				destroyBeans();
    
    				// Reset 'active' flag.
    				cancelRefresh(ex);
    
    				// Propagate exception to caller.
    				throw ex;
    			}
    
    			finally {
    				// Reset common introspection caches in Spring's core, since we
    				// might not ever need metadata for singleton beans anymore...
    				resetCommonCaches();
    			}
    		}
    	}
    
```

### 创建Beanfactory的源码分析
```java
    ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
```

### 进入AbstractApplication的obtainFreshBeanFactory()的方法:

### 用于创建一个新的Ioc容器,这个Ioc容器就是DefaultListableBeanFactory
```java
    protected ConfigurableListableBeanFactory obtainFreshBeanFactory() {
        	//通过该方法刷新BeanFactory,并且创建一个ioc容器
    		refreshBeanFactory();
             //获取refreshBeanFactory()创建的ioc容器
    		ConfigurableListableBeanFactory beanFactory = getBeanFactory();
    		if (logger.isDebugEnabled()) {
    			logger.debug("Bean factory for " + getDisplayName() + ": " + beanFactory);
    		}
    		return beanFactory;
    	}
```



### 进入AbstractApplication的refreshBeanFactory()方法中:

### 初始化一个BeanFactory
```java
    	/**
    	 * This implementation performs an actual refresh of this context's underlying
    	 * bean factory, shutting down the previous bean factory (if any) and
    	 * initializing a fresh bean factory for the next phase of the context's lifecycle.
    	 */
    	@Override
    	protected final void refreshBeanFactory() throws BeansException {
            //判断是否已经存在BeanFactory
    		if (hasBeanFactory()) {
            //销毁上一个BeanFactory
    			destroyBeans();
            //并且关闭    
    			closeBeanFactory();
    		}
    		try {
            	//创建一个BeanFactory的实例(DefaultListableBeanFactory)
    			DefaultListableBeanFactory beanFactory = createBeanFactory();
    			beanFactory.setSerializationId(getId());
                //设置BeanFactory的属性:是否允许BeanDefinition的覆盖和循环依赖
    			customizeBeanFactory(beanFactory);
                //加载spring的xml文件的BeanDefinition
    			loadBeanDefinitions(beanFactory);
    			synchronized (this.beanFactoryMonitor) {
    				this.beanFactory = beanFactory;
    			}
    		}
    		catch (IOException ex) {
    			throw new ApplicationContextException("I/O error parsing bean definition source for " + getDisplayName(), ex);
    		}
    	}
    
```

### 加载BeanDefinition流程分析:

### 进入AbstractXmlApplicationContext的loadBeanDefinitions(beanFactory)方法:

>创建一个XmlBeanDefinitionReader,真正地去完成BeanDefinition的注册和加载

>配置XmlBeanDefinitionReader的属性

```java
    	/**
    	 * Loads the bean definitions via an XmlBeanDefinitionReader.
    	 * @see org.springframework.beans.factory.xml.XmlBeanDefinitionReader
    	 * @see #initBeanDefinitionReader
    	 * @see #loadBeanDefinitions
    	 */
    	@Override
    	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {
    		// Create a new XmlBeanDefinitionReader for the given BeanFactory
            //为工厂创建一个读取xml的一个reader
    		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);
    
    		// Configure the bean definition reader with this context's
    		// resource loading environment.
             //设置reader的一些环境属性
    		beanDefinitionReader.setEnvironment(this.getEnvironment());
    		beanDefinitionReader.setResourceLoader(this);
    		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));
    
    		// Allow a subclass to provide custom initialization of the reader,
    		// then proceed with actually loading the bean definitions.
             //允许自定义的reader来读取xml的BeanDefinition
    		initBeanDefinitionReader(beanDefinitionReader);
             //委托xml阅读器去加载xml的BeanDefinitions信息
    		loadBeanDefinitions(beanDefinitionReader);
    	}
    
    protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws BeansException,      IOException {
             //获取资源的位置
             //getConfigResources是一个空实现,需要子类去实现
             //获取ClasspathXMLApplicationContext的父类AbstractXmlApplicationContext的
             //配置文件信息,默认返回null
    		Resource[] configResources = getConfigResources();
    		if (configResources != null) {
    			reader.loadBeanDefinitions(configResources);
    		}
             //如果用户指定了spring的xml配置文件的位置就获取用户的自定义配置文件
             //否则就加载父类指定的默认加载位置,默认返回null
    		String[] configLocations = getConfigLocations();
    		if (configLocations != null) {
                 //该方法的参数就是我们在new一个容器实例传入的一个参数,代表spring的xml配置文件的地方
                 //该方法真正地去读取xml的beanDefinition的信息,并且返回读取的一个计数值,来表示读取了多少个
                 //位置的xml
    			reader.loadBeanDefinitions(configLocations);
    		}
    	}
```

### loadBeanDefinitions最终来到了XmlBeanDefinitionReader的doLoadBeanDefinitions方法：

>对XML文件进行解析

>完成BeanDefinition对象的加载与注册

```java
    	protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)
    			throws BeanDefinitionStoreException {
    		try {
                //将XML转换成document对象
    			Document doc = doLoadDocument(inputSource, resource);
                //BeanDefinition对象的加载与注册
    			return registerBeanDefinitions(doc, resource);
    		}
    		catch (BeanDefinitionStoreException ex) {
    			throw ex;
    		}
```



### 进入XmlBeanDefinitionReaderregisterBeanDefinitions

- 创建DefaultBeanDefinitionDocumentReader用来解析Document对象。
- 获得容器中已注册的BeanDefinition数量
- 委托给DefaultBeanDefinitionDocumentReader来完成BeanDefinition的加载、注册工作。
- 统计新注册的BeanDefinition数量
```java
    public int registerBeanDefinitions(Document doc, Resource resource) throws            BeanDefinitionStoreException {
             //创建一个BeanDefinitionDocumentReader来解析Document对象的BeanDefinition信息
    		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader();
            //获取容器已经存在的BeanDefinition的数量
    		int countBefore = getRegistry().getBeanDefinitionCount();
            //注册
    		documentReader.registerBeanDefinitions(doc, createReaderContext(resource));
            //返回注册后的容器中新增的BeanDefintion的个数
    		return getRegistry().getBeanDefinitionCount() - countBefore;
    	   }
```


### 进入DefaultBeanDefinitionDocumentReader

- 获得Document的根元素<beans>标签
- 真正实现BeanDefinition解析和注册工作

```java
    	public void registerBeanDefinitions(Document doc, XmlReaderContext readerContext) {
    		this.readerContext = readerContext;
    		logger.debug("Loading bean definitions");
             //从document对象中获取<bean>的标签
    		Element root = doc.getDocumentElement();
             //对这些标签的真正注册和解析
    		doRegisterBeanDefinitions(root);
    	}
```


### 接下来就是解析<bean>....的一些标签的过程(源码省略):

> 1.从根标签开始遍历所有的标签

> 2.如果存在默认的标签(<bean>...)的标签就进行解析

> 3.否则就去解析自定义的标签

>  4.解析<bean>标签里面的所有属性(id,name,class....)



### 实例化剩余的(非懒加载的)bean
```java
    	protected void finishBeanFactoryInitialization(ConfigurableListableBeanFactory beanFactory) {
    		// Initialize conversion service for this context.
    		if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &&
    				beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) {
    			beanFactory.setConversionService(
    					beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));
    		}
    
    		// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.
    		String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, false, false);
    		for (String weaverAwareName : weaverAwareNames) {
    			getBean(weaverAwareName);
    		}
    
    		// Stop using the temporary ClassLoader for type matching.
    		beanFactory.setTempClassLoader(null);
    
    		// Allow for caching all bean definition metadata, not expecting further changes.
    		beanFactory.freezeConfiguration();
    
    		// Instantiate all remaining (non-lazy-init) singletons.
             //重点方法:实例化容器剩余(非懒加载的)bean,并且ioc,DI和AOP都发生在这个方法里面
    		beanFactory.preInstantiateSingletons();
    	}
```(String), 20(Integer)
2019-10-30 21:02:30.255 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 21:02:30.311  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 21:02:30.311  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 64
2019-10-30 21:02:30.315  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:02:30.316 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:02:30.316 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:02:30.317 DEBUG 5160 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:02:30.317 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:02:30.318 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:02:30.319 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 5
2019-10-30 21:02:30.320 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:02:30.320 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:02:30.320 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:30.321 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:02:30.322 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:02:30.322 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:30.323 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:02:30.323 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:02:30.324 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:30.325 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:02:30.325 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:02:30.326 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:30.327 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:02:30.327 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:02:30.328 DEBUG 5160 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:30.329 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:02:30.329 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:02:30.330 DEBUG 5160 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:02:30.330  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:02:30.330  INFO 5160 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 21:02:32.188  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:02:32.200 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:02:32.200 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:02:32.200 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:32.201 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:02:32.202 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:02:32.202 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:32.203 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:02:32.203 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:02:32.204 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:32.205 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:02:32.206 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:02:32.206 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:32.207 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:02:32.208 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:02:32.208 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:32.209 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:02:32.210 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:02:32.210 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:32.212 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:02:32.212 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:02:32.213 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:32.214 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:02:32.214 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:02:32.215 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:32.216 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:02:32.216 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:02:32.217 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:32.218 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:02:32.218 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:02:32.219 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:32.220 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:02:32.220 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:02:32.221 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:02:32.222 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:02:32.222 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:02:32.222 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:02:32.223 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:02:32.223 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:02:32.224 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:02:32.224 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:02:32.224 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:02:32.225 DEBUG 5160 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 21:02:32.226 DEBUG 5160 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:02:32.226 DEBUG 5160 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:02:32.226 DEBUG 5160 --- [http-nio-8080-exec-7] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:02:32.226 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:02:32.227 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:02:32.227 DEBUG 5160 --- [http-nio-8080-exec-7] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 4
2019-10-30 21:02:32.228  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:02:32.228  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 40
2019-10-30 21:02:33.893  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/20', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[20, {}]}
2019-10-30 21:02:33.894 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:02:33.895 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 20(Integer)
2019-10-30 21:02:33.896 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:33.901 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:02:33.901 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:02:33.902 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:33.903 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:02:33.903 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:02:33.904 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:02:33.906 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:02:33.906 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 6(Integer)
2019-10-30 21:02:33.907 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:02:33.907  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:02:33.907  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 14
2019-10-30 21:02:33.943 ERROR 5160 --- [http-nio-8080-exec-2] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:02:33.944  WARN 5160 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:04:50.212  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.input', args=[{}]}
2019-10-30 21:04:50.216 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 21:04:50.216 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 21:04:50.217 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 21:04:50.219 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:04:50.219 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:04:50.219 DEBUG 5160 --- [http-nio-8080-exec-7] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:04:50.220  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 21:04:50.220  INFO 5160 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 8
2019-10-30 21:07:09.606  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=null, uid=null, typeid=null, tagids='9', title='springmvc复习', description='springMvc的一些重点', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='', recommend=null, createTime=null, updateTime=null, content='### 处理器的种类:

#### 1.extends  AbstractController
```java
     当继承了该Controller之后,就必须要实现这个抽象类的handleRequestInternal()方法,因为当请求进来时会先进入handleRequest方法,但是该方法里面使用了模板方法设计模式;并且这个模板方法就是handleRequestInternal(),由于这是子类都必须实现的方法,所以设计为抽象方法

    	@Override
    	public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response)
    			throws Exception {
    
    		// Delegate to WebContentGenerator for checking and preparing.
    		checkRequest(request);
    		prepareResponse(response);
    
    		// Execute handleRequestInternal in synchronized block if required.
    		if (this.synchronizeOnSession) {
    			HttpSession session = request.getSession(false);
    			if (session != null) {
    				Object mutex = WebUtils.getSessionMutex(session);
    				synchronized (mutex) {
    					return handleRequestInternal(request, response);
    				}
    			}
    		}
    
    		return handleRequestInternal(request, response);
    	}
    
    	/**
    	 * Template method. Subclasses must implement this.
    	 * The contract is the same as for {@code handleRequest}.
    	 * @see #handleRequest
    	 */
    	protected abstract ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)
    			throws Exception;
```

### SpringMvc的拦截器:

   自定义拦截器:
```java
    import javax.servlet.http.HttpServletRequest;  
    import javax.servlet.http.HttpServletResponse;  
      
    import org.springframework.web.servlet.HandlerInterceptor;  
    import org.springframework.web.servlet.ModelAndView;  
      
    public class SpringMVCInterceptor implements HandlerInterceptor {  
    
        /** 
         * preHandle方法是进行处理器拦截用的，顾名思义，该方法将在Controller处理之前进行调用，SpringMVC中的Interceptor拦截器是链式的，可以同时存在 
         * 多个Interceptor，然后SpringMVC会根据声明的前后顺序一个接一个的执行，而且所有的Interceptor中的preHandle方法都会在 
         * Controller方法调用之前调用。SpringMVC的这种Interceptor链式结构也是可以进行中断的，这种中断方式是令preHandle的返 
         * 回值为false，当preHandle的返回值为false的时候整个请求就结束了。 
         */  
        @Override  
        public boolean preHandle(HttpServletRequest request,  
                HttpServletResponse response, Object handler) throws Exception {  
            // TODO Auto-generated method stub  
            return false;  
        }  
          
        /** 
         * 这个方法只会在当前这个Interceptor的preHandle方法返回值为true的时候才会执行。postHandle是进行处理器拦截用的，它的执行时间是在处理器进行处理之 
         * 后，也就是在Controller的方法调用之后执行，但是它会在DispatcherServlet进行视图的渲染之前执行，也就是说在这个方法中你可以对ModelAndView进行操 
         * 作。这个方法的链式结构跟正常访问的方向是相反的，也就是说先声明的Interceptor拦截器该方法反而会后调用，这跟Struts2里面的拦截器的执行过程有点像， 
         * 只是Struts2里面的intercept方法中要手动的调用ActionInvocation的invoke方法，Struts2中调用ActionInvocation的invoke方法就是调用下一个Interceptor 
         * 或者是调用action，然后要在Interceptor之前调用的内容都写在调用invoke之前，要在Interceptor之后调用的内容都写在调用invoke方法之后。 
         */  
        @Override  
        public void postHandle(HttpServletRequest request,  
                HttpServletResponse response, Object handler,  
                ModelAndView modelAndView) throws Exception {  
            // TODO Auto-generated method stub  
              
        }  
      
        /** 
         * 该方法也是需要当前对应的Interceptor的preHandle方法的返回值为true时才会执行。该方法将在整个请求完成之后，也就是DispatcherServlet渲染了视图执行， 
         * 这个方法的主要作用是用于清理资源的，当然这个方法也只能在当前这个Interceptor的preHandle方法的返回值为true时才会执行。 
         */  
        @Override  
        public void afterCompletion(HttpServletRequest request,  
                HttpServletResponse response, Object handler, Exception ex)  
        throws Exception {  
            // TODO Auto-generated method stub  
              
        }  
          
    }  

```










### 不常用但是比较有用的springMvc后台接收数据的参数方式:map

注意:

1.要在接收map参数的前面加上一个@RequestParam注解(没有对json转换),@RequestBody(对json转换);

2.对前台需要接收很多个参数的时候,建议使用map进行接收,就不用一个一个地去写参数;
```java
        @RequestMapping("/register")
        @ResponseBody
        public String testMap(@RequestParam Map<String,String> map) throws UnsupportedEncodingException {
            for (Map.Entry<String,String> entry :map.entrySet()){
                //接收的参数可能是中文会导致乱码(springMvc只解决了get乱码问题)
                String value = entry.getValue();
                value = new String(entry.getValue().getBytes("ISO-8859-1"),"utf-8");
                System.out.println(entry.getKey());
                System.out.println(value);
            }
            return "success";
        }

```



### 重点:springMvc的注解开发:

#### 一.mvc:annotation-driven/

Spring 3.0.x中使用了mvc:annotation-driven后，默认会帮我们注册默认处理请求，参数和返回值的类，其中最主要的两个类：DefaultAnnotationHandlerMapping 和 AnnotationMethodHandlerAdapter ，分别为HandlerMapping的实现类和HandlerAdapter的实现类，从3.1.x版本开始对应实现类改为了RequestMappingHandlerMapping和RequestMappingHandlerAdapter。

HandlerMapping的实现类的作用:实现类RequestMappingHandlerMapping，它会处理@RequestMapping 注解，并将其注册到请求映射表中。

HandlerAdapter的实现类的作用:实现类RequestMappingHandlerAdapter，则是处理请求的适配器，确定调用哪个类的哪个方法，并且构造方法参数，返回值。

当配置了mvc:annotation-driven/后，Spring就知道了我们启用注解驱动。然后Spring通过context:component-scan/标签的配置，会自动为我们将扫描到的@Component，@Controller，@Service，@Repository等注解标记的组件注册到工厂中，来处理我们的请求。



### 二.@Autowired对静态变量的注入:

#### 使用场景:某些工具类需要使用dao或者service层的对象时,则要定义该对象为静态对象的时候,需要注入
```java
    @Component
    public final class DocImageUtils {
     
        private static ImageFileDao imageFileDao;
        private static DocImageFileDao docImageFileDao;
     
        @Autowired(required = true)
        public  void setDocImageFileDao(DocImageFileDao docImageFileDao) {
            DocImageUtils.docImageFileDao = docImageFileDao;
        }
        @Autowired(required = true)
        public  void setImageFileDao(ImageFileDao imageFileDao) {
            DocImageUtils.imageFileDao = imageFileDao;
        }
```', type=Type{id=2, name='null', blogs=null}, tagIds='9'}, org.apache.catalina.session.StandardSessionFacade@3e87d917, {}]}
2019-10-30 21:07:09.611 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.BlogMapper.insertSelective   : ==>  Preparing: insert into blog ( uid, typeid, tagids, title, description, first_picture, views, published, flag, create_time, update_time, content ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-10-30 21:07:09.612 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.BlogMapper.insertSelective   : ==> Parameters: 2(Integer), 2(Integer), 9(String), springmvc复习(String), springMvc的一些重点(String), a(String), 0(Integer), 1(Integer), 原创(String), 2019-10-30 21:07:09.607(Timestamp), 2019-10-30 21:07:09.607(Timestamp), ### 处理器的种类:

#### 1.extends  AbstractController
```java
     当继承了该Controller之后,就必须要实现这个抽象类的handleRequestInternal()方法,因为当请求进来时会先进入handleRequest方法,但是该方法里面使用了模板方法设计模式;并且这个模板方法就是handleRequestInternal(),由于这是子类都必须实现的方法,所以设计为抽象方法

    	@Override
    	public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response)
    			throws Exception {
    
    		// Delegate to WebContentGenerator for checking and preparing.
    		checkRequest(request);
    		prepareResponse(response);
    
    		// Execute handleRequestInternal in synchronized block if required.
    		if (this.synchronizeOnSession) {
    			HttpSession session = request.getSession(false);
    			if (session != null) {
    				Object mutex = WebUtils.getSessionMutex(session);
    				synchronized (mutex) {
    					return handleRequestInternal(request, response);
    				}
    			}
    		}
    
    		return handleRequestInternal(request, response);
    	}
    
    	/**
    	 * Template method. Subclasses must implement this.
    	 * The contract is the same as for {@code handleRequest}.
    	 * @see #handleRequest
    	 */
    	protected abstract ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)
    			throws Exception;
```

### SpringMvc的拦截器:

   自定义拦截器:
```java
    import javax.servlet.http.HttpServletRequest;  
    import javax.servlet.http.HttpServletResponse;  
      
    import org.springframework.web.servlet.HandlerInterceptor;  
    import org.springframework.web.servlet.ModelAndView;  
      
    public class SpringMVCInterceptor implements HandlerInterceptor {  
    
        /** 
         * preHandle方法是进行处理器拦截用的，顾名思义，该方法将在Controller处理之前进行调用，SpringMVC中的Interceptor拦截器是链式的，可以同时存在 
         * 多个Interceptor，然后SpringMVC会根据声明的前后顺序一个接一个的执行，而且所有的Interceptor中的preHandle方法都会在 
         * Controller方法调用之前调用。SpringMVC的这种Interceptor链式结构也是可以进行中断的，这种中断方式是令preHandle的返 
         * 回值为false，当preHandle的返回值为false的时候整个请求就结束了。 
         */  
        @Override  
        public boolean preHandle(HttpServletRequest request,  
                HttpServletResponse response, Object handler) throws Exception {  
            // TODO Auto-generated method stub  
            return false;  
        }  
          
        /** 
         * 这个方法只会在当前这个Interceptor的preHandle方法返回值为true的时候才会执行。postHandle是进行处理器拦截用的，它的执行时间是在处理器进行处理之 
         * 后，也就是在Controller的方法调用之后执行，但是它会在DispatcherServlet进行视图的渲染之前执行，也就是说在这个方法中你可以对ModelAndView进行操 
         * 作。这个方法的链式结构跟正常访问的方向是相反的，也就是说先声明的Interceptor拦截器该方法反而会后调用，这跟Struts2里面的拦截器的执行过程有点像， 
         * 只是Struts2里面的intercept方法中要手动的调用ActionInvocation的invoke方法，Struts2中调用ActionInvocation的invoke方法就是调用下一个Interceptor 
         * 或者是调用action，然后要在Interceptor之前调用的内容都写在调用invoke之前，要在Interceptor之后调用的内容都写在调用invoke方法之后。 
         */  
        @Override  
        public void postHandle(HttpServletRequest request,  
                HttpServletResponse response, Object handler,  
                ModelAndView modelAndView) throws Exception {  
            // TODO Auto-generated method stub  
              
        }  
      
        /** 
         * 该方法也是需要当前对应的Interceptor的preHandle方法的返回值为true时才会执行。该方法将在整个请求完成之后，也就是DispatcherServlet渲染了视图执行， 
         * 这个方法的主要作用是用于清理资源的，当然这个方法也只能在当前这个Interceptor的preHandle方法的返回值为true时才会执行。 
         */  
        @Override  
        public void afterCompletion(HttpServletRequest request,  
                HttpServletResponse response, Object handler, Exception ex)  
        throws Exception {  
            // TODO Auto-generated method stub  
              
        }  
          
    }  

```










### 不常用但是比较有用的springMvc后台接收数据的参数方式:map

注意:

1.要在接收map参数的前面加上一个@RequestParam注解(没有对json转换),@RequestBody(对json转换);

2.对前台需要接收很多个参数的时候,建议使用map进行接收,就不用一个一个地去写参数;
```java
        @RequestMapping("/register")
        @ResponseBody
        public String testMap(@RequestParam Map<String,String> map) throws UnsupportedEncodingException {
            for (Map.Entry<String,String> entry :map.entrySet()){
                //接收的参数可能是中文会导致乱码(springMvc只解决了get乱码问题)
                String value = entry.getValue();
                value = new String(entry.getValue().getBytes("ISO-8859-1"),"utf-8");
                System.out.println(entry.getKey());
                System.out.println(value);
            }
            return "success";
        }

```



### 重点:springMvc的注解开发:

#### 一.mvc:annotation-driven/

Spring 3.0.x中使用了mvc:annotation-driven后，默认会帮我们注册默认处理请求，参数和返回值的类，其中最主要的两个类：DefaultAnnotationHandlerMapping 和 AnnotationMethodHandlerAdapter ，分别为HandlerMapping的实现类和HandlerAdapter的实现类，从3.1.x版本开始对应实现类改为了RequestMappingHandlerMapping和RequestMappingHandlerAdapter。

HandlerMapping的实现类的作用:实现类RequestMappingHandlerMapping，它会处理@RequestMapping 注解，并将其注册到请求映射表中。

HandlerAdapter的实现类的作用:实现类RequestMappingHandlerAdapter，则是处理请求的适配器，确定调用哪个类的哪个方法，并且构造方法参数，返回值。

当配置了mvc:annotation-driven/后，Spring就知道了我们启用注解驱动。然后Spring通过context:component-scan/标签的配置，会自动为我们将扫描到的@Component，@Controller，@Service，@Repository等注解标记的组件注册到工厂中，来处理我们的请求。



### 二.@Autowired对静态变量的注入:

#### 使用场景:某些工具类需要使用dao或者service层的对象时,则要定义该对象为静态对象的时候,需要注入
```java
    @Component
    public final class DocImageUtils {
     
        private static ImageFileDao imageFileDao;
        private static DocImageFileDao docImageFileDao;
     
        @Autowired(required = true)
        public  void setDocImageFileDao(DocImageFileDao docImageFileDao) {
            DocImageUtils.docImageFileDao = docImageFileDao;
        }
        @Autowired(required = true)
        public  void setImageFileDao(ImageFileDao imageFileDao) {
            DocImageUtils.imageFileDao = imageFileDao;
        }
```(String)
2019-10-30 21:07:09.613 DEBUG 5160 --- [http-nio-8080-exec-9] com.pan.dao.BlogMapper.insertSelective   : <==    Updates: 1
2019-10-30 21:07:09.617 DEBUG 5160 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 21:07:09.617 DEBUG 5160 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 21:07:09.626 DEBUG 5160 --- [http-nio-8080-exec-9] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 21:07:09.627 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 21:07:09.627 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 2(Integer), 2(Integer)
2019-10-30 21:07:09.627 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 21:07:09.629 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 21:07:09.629 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 9(Integer)
2019-10-30 21:07:09.630 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 21:07:09.631 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 21:07:09.631 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: springmvc(String), 2(Integer), 9(Integer)
2019-10-30 21:07:09.637 DEBUG 5160 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 21:07:09.692  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 21:07:09.693  INFO 5160 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 87
2019-10-30 21:07:09.697  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:07:09.697 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:07:09.698 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:07:09.698 DEBUG 5160 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:07:09.699 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:07:09.700 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:07:09.701 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 6
2019-10-30 21:07:09.702 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:09.702 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:09.703 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:09.704 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:09.704 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:07:09.705 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:09.706 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:09.706 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:07:09.706 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:09.708 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:09.708 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:07:09.708 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:09.709 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:09.709 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:07:09.710 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:09.711 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:09.711 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:09.712 DEBUG 5160 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:09.713 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:07:09.713 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:07:09.714 DEBUG 5160 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:07:09.714  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:07:09.714  INFO 5160 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 17
2019-10-30 21:07:18.650  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:07:18.667 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:07:18.667 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:18.668 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.669 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:18.669 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:18.669 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.670 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:07:18.671 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:18.673 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.675 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:18.675 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:07:18.676 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.677 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:07:18.677 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:18.678 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.680 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:18.680 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:07:18.680 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.681 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:07:18.681 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:18.682 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.683 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:18.683 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:07:18.684 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.684 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:07:18.684 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:18.684 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.685 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:18.685 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:07:18.686 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.687 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:07:18.687 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:18.688 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.689 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:18.690 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:18.690 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:18.691 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:07:18.691 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:07:18.691 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:07:18.691 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:07:18.691 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:07:18.692 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:07:18.692 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:07:18.693 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:07:18.693 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:07:18.694 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:07:18.694 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:07:18.695 DEBUG 5160 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 21:07:18.695 DEBUG 5160 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:07:18.695 DEBUG 5160 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:07:18.696 DEBUG 5160 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:07:18.696 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:07:18.696 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:07:18.696 DEBUG 5160 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 4
2019-10-30 21:07:18.697  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:07:18.697  INFO 5160 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 47
2019-10-30 21:07:23.411  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/22', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[22, {}]}
2019-10-30 21:07:23.412 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:07:23.412 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 22(Integer)
2019-10-30 21:07:23.413 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:23.415 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:23.415 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:23.416 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:23.418 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:07:23.418 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:23.419 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:23.421 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:07:23.421 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 9(Integer)
2019-10-30 21:07:23.421 DEBUG 5160 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:07:23.422  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:07:23.422  INFO 5160 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 11
2019-10-30 21:07:23.478 ERROR 5160 --- [http-nio-8080-exec-6] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:07:23.478  WARN 5160 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:07:37.164  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:07:37.165 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:07:37.165 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:07:37.166 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:07:37.166 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:07:37.167 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:07:37.168 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 6
2019-10-30 21:07:37.169 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:37.169 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:37.170 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:37.172 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:37.172 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:07:37.173 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:37.174 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:37.174 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:07:37.175 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:37.176 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:37.176 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:07:37.177 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:37.179 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:37.179 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:07:37.180 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:37.181 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:07:37.181 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:07:37.181 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:07:37.182 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:07:37.182 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:07:37.183 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:07:37.183  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:07:37.183  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 19
2019-10-30 21:09:13.165  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:09:13.171 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:09:13.171 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:09:13.172 DEBUG 5160 --- [http-nio-8080-exec-6] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:09:13.173 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:09:13.173 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:09:13.187 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 6
2019-10-30 21:09:13.189 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:13.189 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:09:13.190 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:13.191 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:13.191 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:09:13.192 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:13.193 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:13.193 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:09:13.194 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:13.195 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:13.195 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:09:13.196 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:13.197 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:13.197 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:09:13.197 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:13.198 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:13.198 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:09:13.199 DEBUG 5160 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:13.200 DEBUG 5160 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:09:13.200 DEBUG 5160 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:09:13.200 DEBUG 5160 --- [http-nio-8080-exec-6] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:09:13.201  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:09:13.201  INFO 5160 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 36
2019-10-30 21:09:17.249  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:09:17.250 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:09:17.250 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:09:17.251 DEBUG 5160 --- [http-nio-8080-exec-3] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:09:17.252 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:09:17.252 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:09:17.254 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 6
2019-10-30 21:09:17.255 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:17.255 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:09:17.256 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:17.257 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:17.257 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:09:17.258 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:17.260 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:17.260 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:09:17.261 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:17.262 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:17.262 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:09:17.262 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:17.263 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:17.263 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:09:17.264 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:17.265 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:09:17.265 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:09:17.266 DEBUG 5160 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:09:17.267 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:09:17.267 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:09:17.268 DEBUG 5160 --- [http-nio-8080-exec-3] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:09:17.269  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:09:17.269  INFO 5160 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 20
2019-10-30 21:10:28.203  INFO 34360 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 34360 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 21:10:28.207 DEBUG 34360 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 21:10:28.207  INFO 34360 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 21:10:28.260  INFO 34360 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 21:10:28.261  INFO 34360 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 21:10:28.984  INFO 34360 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 21:10:29.027  INFO 34360 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
2019-10-30 21:10:29.432  INFO 34360 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$db8bda55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 21:10:29.942  INFO 34360 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 21:10:30.017  INFO 34360 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 21:10:30.017  INFO 34360 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 21:10:30.132  INFO 34360 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 21:10:30.132  INFO 34360 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1871 ms
2019-10-30 21:10:30.295  INFO 34360 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 21:10:30.542  INFO 34360 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 21:10:31.800  INFO 34360 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 21:10:31.898  INFO 34360 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 21:10:32.639  INFO 34360 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 21:10:32.700  INFO 34360 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 21:10:32.702  INFO 34360 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.275 seconds (JVM running for 6.515)
2019-10-30 21:10:35.129  INFO 34360 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 21:10:35.130  INFO 34360 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 21:10:35.142  INFO 34360 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2019-10-30 21:10:35.162  INFO 34360 --- [http-nio-8080-exec-1] com.pan.interceptor.LoginIntercepter     : 用户没登录或者登录过期,请重新登录
2019-10-30 21:10:35.179  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 21:10:35.181  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 21:10:35.181  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 21:10:40.059  INFO 34360 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.userLogin', args=[pan, 123456, ModelAndView [view=[null]; model=null], org.apache.catalina.session.StandardSessionFacade@652fdc4b]}
2019-10-30 21:10:40.219 DEBUG 34360 --- [http-nio-8080-exec-1] com.pan.dao.UserMapper.selectByExample   : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user WHERE ( username = ? ) 
2019-10-30 21:10:40.243 DEBUG 34360 --- [http-nio-8080-exec-1] com.pan.dao.UserMapper.selectByExample   : ==> Parameters: pan(String)
2019-10-30 21:10:40.267 DEBUG 34360 --- [http-nio-8080-exec-1] com.pan.dao.UserMapper.selectByExample   : <==      Total: 1
2019-10-30 21:10:40.271  INFO 34360 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : ModelAndView [view="redirect:/admin/index"; model=null]
2019-10-30 21:10:40.272  INFO 34360 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 213
2019-10-30 21:10:40.285  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/index', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.AdminController.indexPage', args=[]}
2019-10-30 21:10:40.286  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/index
2019-10-30 21:10:40.286  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 2
2019-10-30 21:10:43.905  INFO 34360 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:10:43.932 DEBUG 34360 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:10:43.932 DEBUG 34360 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:10:43.933 DEBUG 34360 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:10:43.937 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:10:43.938 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:10:43.945 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 6
2019-10-30 21:10:43.950 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:43.950 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:10:43.951 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:43.953 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:43.953 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:10:43.954 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:43.956 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:43.956 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:10:43.958 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:43.960 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:43.960 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:10:43.961 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:43.963 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:43.963 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:10:43.964 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:43.966 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:43.966 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:10:43.967 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:43.971 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:10:43.971 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:10:43.973 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:10:43.974  INFO 34360 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:10:43.974  INFO 34360 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 69
2019-10-30 21:10:46.323  INFO 34360 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:10:46.395 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:10:46.395 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:10:46.397 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.398 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:46.398 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:10:46.399 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.401 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:10:46.402 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:10:46.403 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.405 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:46.406 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:10:46.407 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.409 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:10:46.409 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:10:46.410 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.412 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:46.413 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:10:46.414 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.417 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:10:46.417 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:10:46.418 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.421 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:46.421 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:10:46.423 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.425 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:10:46.426 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:10:46.427 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.429 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:46.429 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:10:46.430 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.432 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:10:46.432 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:10:46.433 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.435 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:10:46.435 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:10:46.437 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:10:46.441 DEBUG 34360 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:10:46.441 DEBUG 34360 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:10:46.442 DEBUG 34360 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:10:46.443 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:10:46.443 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:10:46.444 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:10:46.448 DEBUG 34360 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:10:46.448 DEBUG 34360 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:10:46.449 DEBUG 34360 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:10:46.450 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:10:46.450 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:10:46.451 DEBUG 34360 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 4
2019-10-30 21:10:46.457 DEBUG 34360 --- [http-nio-8080-exec-6] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:10:46.457 DEBUG 34360 --- [http-nio-8080-exec-6] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:10:46.458 DEBUG 34360 --- [http-nio-8080-exec-6] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:10:46.458 DEBUG 34360 --- [http-nio-8080-exec-6] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:10:46.459 DEBUG 34360 --- [http-nio-8080-exec-6] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:10:46.460 DEBUG 34360 --- [http-nio-8080-exec-6] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 4
2019-10-30 21:10:46.461  INFO 34360 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:10:46.461  INFO 34360 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 138
2019-10-30 21:12:00.266  INFO 34360 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {}]}
2019-10-30 21:12:00.276 DEBUG 34360 --- [http-nio-8080-exec-7] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:12:00.276 DEBUG 34360 --- [http-nio-8080-exec-7] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 21:12:00.281 DEBUG 34360 --- [http-nio-8080-exec-7] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 21:12:00.282 DEBUG 34360 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 21:12:00.282 DEBUG 34360 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:12:00.296 DEBUG 34360 --- [http-nio-8080-exec-7] com.pan.dao.TagMapper.selectByExample    : <==      Total: 4
2019-10-30 21:12:00.298  INFO 34360 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 21:12:00.298  INFO 34360 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 32
2019-10-30 21:12:01.853  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.toInputPage', args=[{}]}
2019-10-30 21:12:01.853  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/tags-input
2019-10-30 21:12:01.853  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 0
2019-10-30 21:12:07.194  INFO 34360 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.addTag', args=[Tag{id=null, name='shiro', blogs=null}, {}]}
2019-10-30 21:12:07.197 DEBUG 34360 --- [http-nio-8080-exec-8] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag WHERE ( name = ? ) 
2019-10-30 21:12:07.197 DEBUG 34360 --- [http-nio-8080-exec-8] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: shiro(String)
2019-10-30 21:12:07.198 DEBUG 34360 --- [http-nio-8080-exec-8] com.pan.dao.TagMapper.selectByExample    : <==      Total: 0
2019-10-30 21:12:07.199 DEBUG 34360 --- [http-nio-8080-exec-8] com.pan.dao.TagMapper.insertSelective    : ==>  Preparing: insert into tag ( name ) values ( ? ) 
2019-10-30 21:12:07.200 DEBUG 34360 --- [http-nio-8080-exec-8] com.pan.dao.TagMapper.insertSelective    : ==> Parameters: shiro(String)
2019-10-30 21:12:07.200 DEBUG 34360 --- [http-nio-8080-exec-8] com.pan.dao.TagMapper.insertSelective    : <==    Updates: 1
2019-10-30 21:12:07.205  INFO 34360 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : redirect:/admin/tags
2019-10-30 21:12:07.205  INFO 34360 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 11
2019-10-30 21:12:07.212  INFO 34360 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.TagContoller.tags', args=[null, {message=新增成功}]}
2019-10-30 21:12:07.213 DEBUG 34360 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:12:07.213 DEBUG 34360 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : ==> Parameters: 
2019-10-30 21:12:07.213 DEBUG 34360 --- [http-nio-8080-exec-1] c.p.dao.TagMapper.selectByExample_COUNT  : <==      Total: 1
2019-10-30 21:12:07.214 DEBUG 34360 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag limit ?,? 
2019-10-30 21:12:07.215 DEBUG 34360 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:12:07.216 DEBUG 34360 --- [http-nio-8080-exec-1] com.pan.dao.TagMapper.selectByExample    : <==      Total: 5
2019-10-30 21:12:07.217  INFO 34360 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/tags
2019-10-30 21:12:07.217  INFO 34360 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 21:12:09.729  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:12:09.730 DEBUG 34360 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:12:09.730 DEBUG 34360 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:12:09.731 DEBUG 34360 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:12:09.732 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:12:09.732 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:12:09.736 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 6
2019-10-30 21:12:09.744 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:12:09.745 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:12:09.746 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:12:09.747 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:12:09.748 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:12:09.749 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:12:09.751 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:12:09.752 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:12:09.753 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:12:09.755 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:12:09.755 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:12:09.756 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:12:09.758 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:12:09.758 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:12:09.759 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:12:09.761 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:12:09.761 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:12:09.762 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:12:09.763 DEBUG 34360 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:12:09.764 DEBUG 34360 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:12:09.765 DEBUG 34360 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:12:09.766  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:12:09.766  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 37
2019-10-30 21:12:10.593  INFO 34360 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.input', args=[{}]}
2019-10-30 21:12:10.595 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 21:12:10.595 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 21:12:10.597 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TagMapper.selectByExample    : <==      Total: 5
2019-10-30 21:12:10.599 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:12:10.600 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:12:10.601 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:12:10.602  INFO 34360 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 21:12:10.602  INFO 34360 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 9
2019-10-30 21:16:41.323  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=null, uid=null, typeid=null, tagids='10', title='关于shiro的session共享问题', description='shiro相关的session管理问题', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='', recommend=1, createTime=null, updateTime=null, content='最近在复习shiro框架的时候,遇到了如果使用shiro框架时,session就会存在一些疑惑,到底servlet容器中的session与shiro里面自己的session是否相同,是否共享的....

### 首先,先看一下shiro中的Session继承关系:
[![shiro的session继承关系](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")


#### 可以看到shiro中的Session是个interface,并且存在多个实现类,我们先进入HttpServletSession中看,看到这个名称就会想起了servlet容器中也有一个HttpServletSession,然后就会联想这两个session是否存在关系,我们进入该类
```java
    /**
     * {@link Session Session} implementation that is backed entirely by a standard servlet container
     * {@link HttpSession HttpSession} instance.  It does not interact with any of Shiro's session-related components
     * {@code SessionManager}, {@code SecurityManager}, etc, and instead satisfies all method implementations by interacting
     * with a servlet container provided {@link HttpSession HttpSession} instance.
     *
     * @since 1.0
     */
    //上面文字的大概意思:说这个session其实是servlet容器的session的一个包装而已
    public class HttpServletSession implements Session {
        ....省略前面不重要的变量
        private HttpSession httpSession = null;
        //下面就是一些构造方法,get set方法
        //将该servlet容器的session通过构造方法set进去
        public HttpServletSession(HttpSession httpSession, String host) {
            if (httpSession == null) {
                String msg = "HttpSession constructor argument cannot be null.";
                throw new IllegalArgumentException(msg);
            }
            if (httpSession instanceof ShiroHttpSession) {
                String msg = "HttpSession constructor argument cannot be an instance of ShiroHttpSession.  This " +
                        "is enforced to prevent circular dependencies and infinite loops.";
                throw new IllegalArgumentException(msg);
            }
            this.httpSession = httpSession;
            if (StringUtils.hasText(host)) {
                setHost(host);
            }
        }
```

### 由此可见,shiro中的HttpSession就是servlet容器中的session的包装

接下来我们再关注一个StoppingAwareProxiedSession，为什么要说这个呢,因为在shiro中是存在一些sessionManager的,也就是session的管理者,后面就会说这个;我们上面所说的那个session是在web环境下由web容器管理的,二在shiro中也有一个subject中存放session的地方,这里的session和前面的类型都不一样都是都是实现Session接口,目的用于存放在subject中
```java
        
    //这是一个内部类,DelegatingSubject就是我们平时所使用的subject的实现类,它是身份验证和授权的主体
    public class DelegatingSubject implements Subject {
    private class StoppingAwareProxiedSession extends ProxiedSession {
    
            private final DelegatingSubject owner;
    
            //这里是对HttpSession的一个包装
            private StoppingAwareProxiedSession(Session target, DelegatingSubject owningSubject) {
                super(target);
                owner = owningSubject;
            }
    
            public void stop() throws InvalidSessionException {
                super.stop();
                owner.sessionStopped();
            }
        }
    }
```


讲完上面两个重要的Session之后,应该来介绍一下shiro中的会话管理器:



### 三个会话管理器（SessionManager）实现

### 1.1DefaultSessionManager

DefaultSessionManager：DefaultSecurityManager 使用的默认实现，用于 JavaSE 环境；

### 1.2ServletContainerSessionManager

ServletContainerSessionManager：DefaultWebSecurityManager 使用的默认实现，用于 Web 环境，其直接使用 Servlet 容器的会话；这是shiro中默认使用的SessionManager,可以从DefaultWebSecurityManager(安全管理器的默认属性中看到)
```java
        public DefaultWebSecurityManager() {
            super();
            ((DefaultSubjectDAO) this.subjectDAO).setSessionStorageEvaluator(new DefaultWebSessionStorageEvaluator());
            this.sessionMode = HTTP_SESSION_MODE;
            setSubjectFactory(new DefaultWebSubjectFactory());
            setRememberMeManager(new CookieRememberMeManager());
            //默认使用ServletContainerSessionManager这个会话管理器
            setSessionManager(new ServletContainerSessionManager());
        }
```


#### 从这个会话管理器中我们可以知道,servlet中使用的sessionId与shiro中使用的sessionId是一样的,这里为什么要强调的是sessionID呢?因为在判断用户是否登录的标准,是否在同一个session'中,是根据请求携带的参数中找到这个sessionId进行判断的,一般都会存放在cookie中.

#### 然后说回来,由于shiro的subject自带也有一个session的实现类,所以与servlet中的session类型是不一样的,所以说这里要强调的是sessionId,可以从下面的实验中得出结论:

这个用于登录的Controller:
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
                 //这里获取的是subject里面的session
    			Session session = subject.getSession(false);
    			System.out.println(session);
                 System.out.println(session.getId());
                 //这里获取的是servlet中的session
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
                 //将登录成功用户信息放入session中
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    	}
    }
```
实验结果:
```java
    /*
    *就会发现两个session的类型是不一样的,但是sessionId是一样的
    *也就是说明判断是否在同一会话中的标准是sessionId
    */
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@2d784e2
    B3D0A39ED6B48230541B49B3CF8C8EF2
    org.apache.catalina.session.StandardSessionFacade@2e4e197f
    B3D0A39ED6B48230541B49B3CF8C8EF2
```


但是在实验过程中,发现一个奇怪的现象当我在测试授权身份的时候,对应的请求方法所得到的subject和subject的session的对象时不一样的,这是为什么呢?先看实验代码和结果
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		if(StringUtils.isEmpty(subject.getSession(false).getAttribute("myuser"))) {
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
    			System.out.println(subject);
    			Session session = subject.getSession(false);
    			System.out.println(session);
    			System.out.println(session.getId());
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    		}
    		else {
    			System.out.println("已经登录过了");
    			return "redirect:user/index";
    		}
    	}
```
#### 验证用户是否有权限进入添加用户的页面跳转方法:(能进入该方法就是说已经通过了身份验证),所以在这里登陆完成之后的session中的信息已经存放在该session中,接下来的实验结果会带给你惊喜!!!!!!
```java
    	@GetMapping("add")
    	public String add(HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		System.out.println(subject);
    		System.out.println(subject.getSession(false));
    		System.out.println(request.getSession(false));
    		System.out.println(request.getSession(false).getId());
    		return "user/add";
    	}
```
结果:
```java
    ======执行完登录验证======
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@52284d11
    C79BCF8618D24CFC0E9C2AE5D413F739
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
    授权-----
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@3f933e0c
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
```
从结果可以看出来sessionId一直都是相同的,但是有没有发现subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?还有为什么session对象都不一样了,为什么sessionId还是一样,还是能够从原来放进去的session中获取到数据

### 问题一:subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?

原因:我通过看源码，发现本地的session，也就是不是web的，它不会通过cookie中的jsessionid来判断是否是登录状态，通过看源码发现，是通过将subject与当前线程绑定，来实现是否该subject已经登录，由于我们使用的是web服务器tomcat，用的是连接池，当有请求过来的时候，会有一个线程来对应响应，每次请求的对应的线程是不一样的，因为subject与线程绑定的，有的线程没有subject，所以shiro就会创建一个subject,对应地也会创建一个session,但是由于这个session是有servlet容器来管理的,所以新创建的session还是对根据客户端cookie中的JSESSIONID来找到容器中存在的session进行包装,所以才导致session对象不一致但是,sessionId还是一样

### 先看看subject.getSession()方法:
```java
        public Session getSession(boolean create) {
    		  //.省略前面不重要的代码
            	//这里先为每个session创建一个上下文
                SessionContext sessionContext = createSessionContext();
            	//这里是关键,获取session
                Session session = this.securityManager.start(sessionContext);
            	//将返回的session包装成StoppingAwareProxiedSession类型的
                this.session = decorate(session);
            }
            return this.session;
        }
```
### 进入 subject.securityManager.start(sessionContext)方法:
```java
    public Session start(SessionContext context) throws AuthorizationException {
            //调用本类的方法创建session
            return createSession(context);
        }
```


### 进入createSession(context):
```java
        protected Session createSession(SessionContext sessionContext) throws AuthorizationException {
            if (!WebUtils.isHttp(sessionContext)) {
                String msg = "SessionContext must be an HTTP compatible implementation.";
                throw new IllegalArgumentException(msg);
            }
    	   //重要代码:获取当前请求
            HttpServletRequest request = WebUtils.getHttpRequest(sessionContext);
    	   //这里的session是servlet容器中管理的session
            HttpSession httpSession = request.getSession();
    	   //重载方法,也就是对servletSession进行了包装
            return createSession(httpSession, host);
        }
    
        protected Session createSession(HttpSession httpSession, String host) {
            return new HttpServletSession(httpSession, host);
        }
```
#### 通过上述代码可知虽然session对象是不一样了,但是底层包装的session还是原来的那个servlet容器所管理的session,并且springmvc的Dispatchservlet是交给web容器管理(tomcat....)的所以它的session类型一个是org.apache.catalina.session.StandardSessionFacade,也就是web容器的对servletsession的包装类型



### 1.3DefaultWebSessionManager

DefaultWebSessionManager：用于 Web 环境的实现，可以替代 ServletContainerSessionManager，自己维护着会话，直接废弃了 Servlet 容器的会话管理。', type=Type{id=2, name='null', blogs=null}, tagIds='10'}, org.apache.catalina.session.StandardSessionFacade@652fdc4b, {}]}
2019-10-30 21:16:41.331 DEBUG 34360 --- [http-nio-8080-exec-10] com.pan.dao.BlogMapper.insertSelective   : ==>  Preparing: insert into blog ( uid, typeid, tagids, title, description, first_picture, views, published, flag, recommend, create_time, update_time, content ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-10-30 21:16:41.335 DEBUG 34360 --- [http-nio-8080-exec-10] com.pan.dao.BlogMapper.insertSelective   : ==> Parameters: 2(Integer), 2(Integer), 10(String), 关于shiro的session共享问题(String), shiro相关的session管理问题(String), a(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 21:16:41.324(Timestamp), 2019-10-30 21:16:41.324(Timestamp), 最近在复习shiro框架的时候,遇到了如果使用shiro框架时,session就会存在一些疑惑,到底servlet容器中的session与shiro里面自己的session是否相同,是否共享的....

### 首先,先看一下shiro中的Session继承关系:
[![shiro的session继承关系](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")


#### 可以看到shiro中的Session是个interface,并且存在多个实现类,我们先进入HttpServletSession中看,看到这个名称就会想起了servlet容器中也有一个HttpServletSession,然后就会联想这两个session是否存在关系,我们进入该类
```java
    /**
     * {@link Session Session} implementation that is backed entirely by a standard servlet container
     * {@link HttpSession HttpSession} instance.  It does not interact with any of Shiro's session-related components
     * {@code SessionManager}, {@code SecurityManager}, etc, and instead satisfies all method implementations by interacting
     * with a servlet container provided {@link HttpSession HttpSession} instance.
     *
     * @since 1.0
     */
    //上面文字的大概意思:说这个session其实是servlet容器的session的一个包装而已
    public class HttpServletSession implements Session {
        ....省略前面不重要的变量
        private HttpSession httpSession = null;
        //下面就是一些构造方法,get set方法
        //将该servlet容器的session通过构造方法set进去
        public HttpServletSession(HttpSession httpSession, String host) {
            if (httpSession == null) {
                String msg = "HttpSession constructor argument cannot be null.";
                throw new IllegalArgumentException(msg);
            }
            if (httpSession instanceof ShiroHttpSession) {
                String msg = "HttpSession constructor argument cannot be an instance of ShiroHttpSession.  This " +
                        "is enforced to prevent circular dependencies and infinite loops.";
                throw new IllegalArgumentException(msg);
            }
            this.httpSession = httpSession;
            if (StringUtils.hasText(host)) {
                setHost(host);
            }
        }
```

### 由此可见,shiro中的HttpSession就是servlet容器中的session的包装

接下来我们再关注一个StoppingAwareProxiedSession，为什么要说这个呢,因为在shiro中是存在一些sessionManager的,也就是session的管理者,后面就会说这个;我们上面所说的那个session是在web环境下由web容器管理的,二在shiro中也有一个subject中存放session的地方,这里的session和前面的类型都不一样都是都是实现Session接口,目的用于存放在subject中
```java
        
    //这是一个内部类,DelegatingSubject就是我们平时所使用的subject的实现类,它是身份验证和授权的主体
    public class DelegatingSubject implements Subject {
    private class StoppingAwareProxiedSession extends ProxiedSession {
    
            private final DelegatingSubject owner;
    
            //这里是对HttpSession的一个包装
            private StoppingAwareProxiedSession(Session target, DelegatingSubject owningSubject) {
                super(target);
                owner = owningSubject;
            }
    
            public void stop() throws InvalidSessionException {
                super.stop();
                owner.sessionStopped();
            }
        }
    }
```


讲完上面两个重要的Session之后,应该来介绍一下shiro中的会话管理器:



### 三个会话管理器（SessionManager）实现

### 1.1DefaultSessionManager

DefaultSessionManager：DefaultSecurityManager 使用的默认实现，用于 JavaSE 环境；

### 1.2ServletContainerSessionManager

ServletContainerSessionManager：DefaultWebSecurityManager 使用的默认实现，用于 Web 环境，其直接使用 Servlet 容器的会话；这是shiro中默认使用的SessionManager,可以从DefaultWebSecurityManager(安全管理器的默认属性中看到)
```java
        public DefaultWebSecurityManager() {
            super();
            ((DefaultSubjectDAO) this.subjectDAO).setSessionStorageEvaluator(new DefaultWebSessionStorageEvaluator());
            this.sessionMode = HTTP_SESSION_MODE;
            setSubjectFactory(new DefaultWebSubjectFactory());
            setRememberMeManager(new CookieRememberMeManager());
            //默认使用ServletContainerSessionManager这个会话管理器
            setSessionManager(new ServletContainerSessionManager());
        }
```


#### 从这个会话管理器中我们可以知道,servlet中使用的sessionId与shiro中使用的sessionId是一样的,这里为什么要强调的是sessionID呢?因为在判断用户是否登录的标准,是否在同一个session'中,是根据请求携带的参数中找到这个sessionId进行判断的,一般都会存放在cookie中.

#### 然后说回来,由于shiro的subject自带也有一个session的实现类,所以与servlet中的session类型是不一样的,所以说这里要强调的是sessionId,可以从下面的实验中得出结论:

这个用于登录的Controller:
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
                 //这里获取的是subject里面的session
    			Session session = subject.getSession(false);
    			System.out.println(session);
                 System.out.println(session.getId());
                 //这里获取的是servlet中的session
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
                 //将登录成功用户信息放入session中
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    	}
    }
```
实验结果:
```java
    /*
    *就会发现两个session的类型是不一样的,但是sessionId是一样的
    *也就是说明判断是否在同一会话中的标准是sessionId
    */
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@2d784e2
    B3D0A39ED6B48230541B49B3CF8C8EF2
    org.apache.catalina.session.StandardSessionFacade@2e4e197f
    B3D0A39ED6B48230541B49B3CF8C8EF2
```


但是在实验过程中,发现一个奇怪的现象当我在测试授权身份的时候,对应的请求方法所得到的subject和subject的session的对象时不一样的,这是为什么呢?先看实验代码和结果
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		if(StringUtils.isEmpty(subject.getSession(false).getAttribute("myuser"))) {
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
    			System.out.println(subject);
    			Session session = subject.getSession(false);
    			System.out.println(session);
    			System.out.println(session.getId());
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    		}
    		else {
    			System.out.println("已经登录过了");
    			return "redirect:user/index";
    		}
    	}
```
#### 验证用户是否有权限进入添加用户的页面跳转方法:(能进入该方法就是说已经通过了身份验证),所以在这里登陆完成之后的session中的信息已经存放在该session中,接下来的实验结果会带给你惊喜!!!!!!
```java
    	@GetMapping("add")
    	public String add(HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		System.out.println(subject);
    		System.out.println(subject.getSession(false));
    		System.out.println(request.getSession(false));
    		System.out.println(request.getSession(false).getId());
    		return "user/add";
    	}
```
结果:
```java
    ======执行完登录验证======
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@52284d11
    C79BCF8618D24CFC0E9C2AE5D413F739
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
    授权-----
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@3f933e0c
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
```
从结果可以看出来sessionId一直都是相同的,但是有没有发现subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?还有为什么session对象都不一样了,为什么sessionId还是一样,还是能够从原来放进去的session中获取到数据

### 问题一:subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?

原因:我通过看源码，发现本地的session，也就是不是web的，它不会通过cookie中的jsessionid来判断是否是登录状态，通过看源码发现，是通过将subject与当前线程绑定，来实现是否该subject已经登录，由于我们使用的是web服务器tomcat，用的是连接池，当有请求过来的时候，会有一个线程来对应响应，每次请求的对应的线程是不一样的，因为subject与线程绑定的，有的线程没有subject，所以shiro就会创建一个subject,对应地也会创建一个session,但是由于这个session是有servlet容器来管理的,所以新创建的session还是对根据客户端cookie中的JSESSIONID来找到容器中存在的session进行包装,所以才导致session对象不一致但是,sessionId还是一样

### 先看看subject.getSession()方法:
```java
        public Session getSession(boolean create) {
    		  //.省略前面不重要的代码
            	//这里先为每个session创建一个上下文
                SessionContext sessionContext = createSessionContext();
            	//这里是关键,获取session
                Session session = this.securityManager.start(sessionContext);
            	//将返回的session包装成StoppingAwareProxiedSession类型的
                this.session = decorate(session);
            }
            return this.session;
        }
```
### 进入 subject.securityManager.start(sessionContext)方法:
```java
    public Session start(SessionContext context) throws AuthorizationException {
            //调用本类的方法创建session
            return createSession(context);
        }
```


### 进入createSession(context):
```java
        protected Session createSession(SessionContext sessionContext) throws AuthorizationException {
            if (!WebUtils.isHttp(sessionContext)) {
                String msg = "SessionContext must be an HTTP compatible implementation.";
                throw new IllegalArgumentException(msg);
            }
    	   //重要代码:获取当前请求
            HttpServletRequest request = WebUtils.getHttpRequest(sessionContext);
    	   //这里的session是servlet容器中管理的session
            HttpSession httpSession = request.getSession();
    	   //重载方法,也就是对servletSession进行了包装
            return createSession(httpSession, host);
        }
    
        protected Session createSession(HttpSession httpSession, String host) {
            return new HttpServletSession(httpSession, host);
        }
```
#### 通过上述代码可知虽然session对象是不一样了,但是底层包装的session还是原来的那个servlet容器所管理的session,并且springmvc的Dispatchservlet是交给web容器管理(tomcat....)的所以它的session类型一个是org.apache.catalina.session.StandardSessionFacade,也就是web容器的对servletsession的包装类型



### 1.3DefaultWebSessionManager

DefaultWebSessionManager：用于 Web 环境的实现，可以替代 ServletContainerSessionManager，自己维护着会话，直接废弃了 Servlet 容器的会话管理。(String)
2019-10-30 21:16:41.337 DEBUG 34360 --- [http-nio-8080-exec-10] com.pan.dao.BlogMapper.insertSelective   : <==    Updates: 1
2019-10-30 21:16:41.340 DEBUG 34360 --- [http-nio-8080-exec-10] c.p.dao.TypeMapper.selectTypeForUpdate   : ==>  Preparing: select * from type where id = ? FOR UPDATE 
2019-10-30 21:16:41.340 DEBUG 34360 --- [http-nio-8080-exec-10] c.p.dao.TypeMapper.selectTypeForUpdate   : ==> Parameters: 2(Integer)
2019-10-30 21:16:41.341 DEBUG 34360 --- [http-nio-8080-exec-10] c.p.dao.TypeMapper.selectTypeForUpdate   : <==      Total: 1
2019-10-30 21:16:41.341 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==>  Preparing: update type set name = ?, blogs = ? where id = ? 
2019-10-30 21:16:41.342 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.updateByPrimaryKey  : ==> Parameters: 学习笔记(String), 3(Integer), 2(Integer)
2019-10-30 21:16:41.342 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.updateByPrimaryKey  : <==    Updates: 1
2019-10-30 21:16:41.344 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagForUpdate   : ==>  Preparing: select * from tag where id = ? FOR UPDATE 
2019-10-30 21:16:41.344 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagForUpdate   : ==> Parameters: 10(Integer)
2019-10-30 21:16:41.345 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectTagForUpdate   : <==      Total: 1
2019-10-30 21:16:41.347 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.updateByPrimaryKey   : ==>  Preparing: update tag set name = ?, blogs = ? where id = ? 
2019-10-30 21:16:41.347 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.updateByPrimaryKey   : ==> Parameters: shiro(String), 1(Integer), 10(Integer)
2019-10-30 21:16:41.348 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.updateByPrimaryKey   : <==    Updates: 1
2019-10-30 21:16:41.435  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 21:16:41.435  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 112
2019-10-30 21:16:41.439  INFO 34360 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:16:41.440 DEBUG 34360 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:16:41.440 DEBUG 34360 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:16:41.441 DEBUG 34360 --- [http-nio-8080-exec-4] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:16:41.442 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:16:41.442 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:16:41.446 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 21:16:41.448 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:41.448 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:41.449 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:41.450 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:41.450 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:16:41.451 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:41.452 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:41.453 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:16:41.453 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:41.454 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:41.455 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:16:41.455 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:41.456 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:41.457 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:16:41.458 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:41.459 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:41.459 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:41.460 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:41.461 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:41.461 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:41.462 DEBUG 34360 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:41.464 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:16:41.464 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:16:41.465 DEBUG 34360 --- [http-nio-8080-exec-4] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:16:41.466  INFO 34360 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:16:41.466  INFO 34360 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 27
2019-10-30 21:16:59.225  INFO 34360 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:16:59.244 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:16:59.244 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:59.245 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.247 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:59.247 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:59.248 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.251 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:16:59.251 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:59.252 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.255 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:59.255 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:59.256 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.258 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:16:59.258 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:59.259 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.260 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:59.261 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:16:59.262 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.263 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:16:59.263 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:59.264 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.266 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:59.266 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:16:59.267 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.269 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:16:59.269 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:59.270 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.271 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:59.271 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:16:59.272 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.274 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:16:59.274 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:59.275 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.276 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:59.276 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:16:59.277 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.278 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:16:59.278 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:59.279 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.281 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:16:59.282 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:16:59.284 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:16:59.285 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:16:59.286 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:16:59.286 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:16:59.287 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:16:59.287 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:16:59.288 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:16:59.289 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:16:59.289 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:16:59.289 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:16:59.290 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:16:59.290 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:16:59.291 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 21:16:59.291 DEBUG 34360 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:16:59.292 DEBUG 34360 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:16:59.292 DEBUG 34360 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:16:59.292 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:16:59.292 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:16:59.293 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 21:16:59.294  INFO 34360 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:16:59.294  INFO 34360 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 69
2019-10-30 21:17:07.249  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 21:17:07.249 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:17:07.249 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:17:07.251 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:17:07.294 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:17:07.294 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:17:07.296 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:17:07.298 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:17:07.298 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:17:07.299 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:17:07.300 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:17:07.300 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 21:17:07.301 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:17:07.301  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:17:07.302  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 53
2019-10-30 21:17:07.345 ERROR 34360 --- [http-nio-8080-exec-7] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:17:07.348  WARN 34360 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:40:49.138  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:40:49.143 DEBUG 34360 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:40:49.143 DEBUG 34360 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:40:49.144 DEBUG 34360 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:40:49.145 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:40:49.145 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:40:49.158 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 21:40:49.160 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:40:49.160 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:40:49.161 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:40:49.163 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:40:49.163 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:40:49.164 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:40:49.166 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:40:49.166 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:40:49.167 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:40:49.168 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:40:49.168 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:40:49.169 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:40:49.170 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:40:49.170 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:40:49.171 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:40:49.172 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:40:49.172 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:40:49.173 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:40:49.174 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:40:49.174 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:40:49.174 DEBUG 34360 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:40:49.176 DEBUG 34360 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:40:49.176 DEBUG 34360 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:40:49.177 DEBUG 34360 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:40:49.183  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:40:49.183  INFO 34360 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 45
2019-10-30 21:41:19.751  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:41:19.770 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:19.770 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:19.774 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.776 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:19.776 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:19.777 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.778 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:19.779 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:19.779 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.781 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:19.781 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:19.782 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.783 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:19.784 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:19.784 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.786 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:19.786 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:41:19.787 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.789 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:19.789 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:19.790 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.791 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:19.792 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:41:19.792 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.793 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:19.794 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:19.794 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.796 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:19.796 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:41:19.797 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.799 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:19.799 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:19.800 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.801 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:19.802 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:41:19.802 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.803 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:19.804 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:19.805 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.806 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:19.807 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:19.807 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:19.808 DEBUG 34360 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:41:19.809 DEBUG 34360 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:41:19.809 DEBUG 34360 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:41:19.810 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:41:19.810 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:41:19.811 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:41:19.811 DEBUG 34360 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:41:19.811 DEBUG 34360 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:41:19.812 DEBUG 34360 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:41:19.814 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:41:19.814 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:41:19.815 DEBUG 34360 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 21:41:19.815 DEBUG 34360 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:41:19.816 DEBUG 34360 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:41:19.816 DEBUG 34360 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:41:19.816 DEBUG 34360 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:41:19.817 DEBUG 34360 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:41:19.817 DEBUG 34360 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 21:41:19.818  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:41:19.818  INFO 34360 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 67
2019-10-30 21:41:42.097  INFO 34360 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:41:42.105 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:42.105 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:42.106 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.107 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:42.107 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:42.108 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.109 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:42.110 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:42.113 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.114 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:42.114 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:42.115 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.116 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:42.117 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:42.117 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.120 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:42.120 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:41:42.121 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.122 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:42.123 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:42.123 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.125 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:42.125 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:41:42.126 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.127 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:42.127 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:42.128 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.129 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:42.130 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:41:42.130 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.132 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:42.132 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:42.133 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.134 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:42.135 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:41:42.135 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.137 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:42.137 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:42.138 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.139 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:42.140 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:42.141 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:42.142 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:41:42.142 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:41:42.143 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:41:42.144 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:41:42.144 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:41:42.145 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:41:42.145 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:41:42.146 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:41:42.146 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:41:42.147 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:41:42.147 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:41:42.148 DEBUG 34360 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 21:41:42.149 DEBUG 34360 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:41:42.149 DEBUG 34360 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:41:42.149 DEBUG 34360 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:41:42.150 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:41:42.150 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:41:42.150 DEBUG 34360 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 21:41:42.151  INFO 34360 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:41:42.151  INFO 34360 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 54
2019-10-30 21:41:49.486  INFO 34360 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/16', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[16, {}]}
2019-10-30 21:41:49.487 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:41:49.487 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 16(Integer)
2019-10-30 21:41:49.488 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:49.491 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:41:49.492 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:49.492 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:49.494 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:41:49.495 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:41:49.497 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:41:49.499 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:41:49.500 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 6(Integer)
2019-10-30 21:41:49.500 DEBUG 34360 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:41:49.501  INFO 34360 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:41:49.501  INFO 34360 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 21:41:49.557 ERROR 34360 --- [http-nio-8080-exec-3] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:41:49.557  WARN 34360 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:42:49.318  INFO 7348 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 7348 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 21:42:49.321 DEBUG 7348 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 21:42:49.322  INFO 7348 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 21:42:49.421  INFO 7348 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 21:42:49.421  INFO 7348 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 21:42:50.170  INFO 7348 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 21:42:50.212  INFO 7348 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
2019-10-30 21:42:50.590  INFO 7348 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed44ee35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 21:42:51.058  INFO 7348 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 21:42:51.139  INFO 7348 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 21:42:51.139  INFO 7348 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 21:42:51.252  INFO 7348 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 21:42:51.252  INFO 7348 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1831 ms
2019-10-30 21:42:51.407  INFO 7348 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 21:42:51.653  INFO 7348 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 21:42:52.958  INFO 7348 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 21:42:53.056  INFO 7348 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 21:42:53.804  INFO 7348 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 21:42:53.872  INFO 7348 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 21:42:53.875  INFO 7348 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.216 seconds (JVM running for 6.296)
2019-10-30 21:43:08.511  INFO 7348 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 21:43:08.511  INFO 7348 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 21:43:08.525  INFO 7348 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 21:43:08.559  INFO 7348 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:43:08.777 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:43:08.803 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:43:08.825 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.833 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:43:08.833 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:43:08.834 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.835 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:43:08.836 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:43:08.837 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.838 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:43:08.838 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:43:08.839 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.840 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:43:08.841 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:43:08.842 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.843 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:43:08.844 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:43:08.845 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.846 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:43:08.847 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:43:08.848 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.849 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:43:08.850 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:43:08.852 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.853 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:43:08.854 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:43:08.855 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.856 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:43:08.856 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:43:08.857 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.858 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:43:08.859 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:43:08.860 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.862 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:43:08.862 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:43:08.863 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.865 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:43:08.865 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:43:08.866 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.868 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:43:08.868 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:43:08.869 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:43:08.901 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:43:08.902 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:43:08.903 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:43:08.905 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:43:08.906 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:43:08.907 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:43:08.913 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:43:08.913 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:43:08.914 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:43:08.915 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:43:08.915 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:43:08.916 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 21:43:08.924 DEBUG 7348 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:43:08.924 DEBUG 7348 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:43:08.925 DEBUG 7348 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:43:08.925 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:43:08.926 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:43:08.927 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 21:43:08.929  INFO 7348 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:43:08.929  INFO 7348 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 372
2019-10-30 21:44:22.324  INFO 7348 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:44:22.340 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:22.340 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:22.343 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.346 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:22.346 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:22.347 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.349 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:22.349 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:22.350 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.352 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:22.353 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:22.354 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.355 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:22.356 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:22.357 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.359 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:22.359 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:44:22.360 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.362 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:22.363 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:22.364 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.366 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:22.367 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:44:22.368 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.369 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:22.370 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:22.371 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.372 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:22.373 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:44:22.374 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.375 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:22.376 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:22.377 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.378 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:22.379 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:44:22.380 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.382 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:22.382 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:22.383 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.385 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:22.385 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:22.386 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:22.393 DEBUG 7348 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:44:22.394 DEBUG 7348 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:44:22.395 DEBUG 7348 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:44:22.396 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:44:22.396 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:44:22.398 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:44:22.398 DEBUG 7348 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:44:22.398 DEBUG 7348 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:44:22.399 DEBUG 7348 --- [http-nio-8080-exec-6] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:44:22.400 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:44:22.400 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:44:22.401 DEBUG 7348 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 21:44:22.402 DEBUG 7348 --- [http-nio-8080-exec-6] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:44:22.403 DEBUG 7348 --- [http-nio-8080-exec-6] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:44:22.403 DEBUG 7348 --- [http-nio-8080-exec-6] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:44:22.404 DEBUG 7348 --- [http-nio-8080-exec-6] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:44:22.404 DEBUG 7348 --- [http-nio-8080-exec-6] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:44:22.405 DEBUG 7348 --- [http-nio-8080-exec-6] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 21:44:22.406  INFO 7348 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:44:22.407  INFO 7348 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 83
2019-10-30 21:44:23.769  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 21:44:23.770 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:44:23.770 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:44:23.773 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:23.819 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:23.819 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:23.820 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:23.821 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:23.822 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:23.823 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:23.825 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:44:23.825 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 21:44:23.826 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:44:23.826  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:44:23.826  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 57
2019-10-30 21:44:23.890 ERROR 7348 --- [http-nio-8080-exec-8] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:44:23.891  WARN 7348 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:44:32.791  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:44:32.801 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:32.802 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:32.805 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.812 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:32.812 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:32.813 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.814 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:32.815 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:32.815 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.818 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:32.818 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:32.819 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.821 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:32.822 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:32.823 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.824 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:32.825 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:44:32.825 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.827 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:32.828 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:32.828 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.830 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:32.830 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:44:32.831 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.832 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:32.833 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:32.834 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.835 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:32.835 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:44:32.836 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.838 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:32.838 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:32.839 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.843 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:32.843 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:44:32.843 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.845 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:44:32.845 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:32.846 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.848 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:44:32.848 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:44:32.849 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:44:32.850 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:44:32.850 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:44:32.851 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:44:32.852 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:44:32.852 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:44:32.854 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:44:32.855 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:44:32.855 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:44:32.856 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:44:32.856 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:44:32.857 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:44:32.858 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 21:44:32.859 DEBUG 7348 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:44:32.859 DEBUG 7348 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:44:32.860 DEBUG 7348 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:44:32.860 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:44:32.860 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:44:32.862 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 21:44:32.863  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:44:32.863  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 72
2019-10-30 21:45:25.829  INFO 7348 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:45:25.841 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:45:25.841 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:25.843 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.844 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:25.845 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:25.856 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.858 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:45:25.858 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:25.860 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.861 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:25.861 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:25.862 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.863 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:45:25.864 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:25.864 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.866 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:25.866 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:45:25.867 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.868 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:45:25.868 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:25.869 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.871 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:25.871 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:45:25.872 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.873 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:45:25.873 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:25.875 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.877 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:25.877 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:45:25.878 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.879 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:45:25.879 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:25.880 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.882 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:25.882 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:45:25.883 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.884 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:45:25.884 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:25.885 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.887 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:25.887 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:25.887 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:25.889 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:45:25.889 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:45:25.890 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:45:25.891 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:45:25.891 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:45:25.893 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:45:25.893 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:45:25.894 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:45:25.894 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:45:25.895 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:45:25.895 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:45:25.896 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 21:45:25.897 DEBUG 7348 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:45:25.897 DEBUG 7348 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:45:25.898 DEBUG 7348 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:45:25.898 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:45:25.898 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:45:25.899 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 21:45:25.900  INFO 7348 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:45:25.900  INFO 7348 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 71
2019-10-30 21:45:30.859  INFO 7348 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 21:45:30.860 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:45:30.860 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:45:30.862 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:30.867 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:30.867 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:30.868 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:30.870 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:45:30.870 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:30.871 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:30.872 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:45:30.873 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 21:45:30.874 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:45:30.874  INFO 7348 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:45:30.874  INFO 7348 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 21:45:30.944 ERROR 7348 --- [http-nio-8080-exec-5] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:45:30.944  WARN 7348 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:45:36.109  INFO 7348 --- [http-nio-8080-exec-8] com.pan.interceptor.LoginIntercepter     : 用户没登录或者登录过期,请重新登录
2019-10-30 21:45:36.117  INFO 7348 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 21:45:36.119  INFO 7348 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 21:45:36.119  INFO 7348 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 2
2019-10-30 21:45:40.907  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.userLogin', args=[pan, 123456, ModelAndView [view=[null]; model=null], org.apache.catalina.session.StandardSessionFacade@1efe900c]}
2019-10-30 21:45:40.920 DEBUG 7348 --- [http-nio-8080-exec-8] com.pan.dao.UserMapper.selectByExample   : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user WHERE ( username = ? ) 
2019-10-30 21:45:40.921 DEBUG 7348 --- [http-nio-8080-exec-8] com.pan.dao.UserMapper.selectByExample   : ==> Parameters: pan(String)
2019-10-30 21:45:40.922 DEBUG 7348 --- [http-nio-8080-exec-8] com.pan.dao.UserMapper.selectByExample   : <==      Total: 1
2019-10-30 21:45:40.924  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : ModelAndView [view="redirect:/admin/index"; model=null]
2019-10-30 21:45:40.924  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 18
2019-10-30 21:45:40.938  INFO 7348 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/index', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.AdminController.indexPage', args=[]}
2019-10-30 21:45:40.940  INFO 7348 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/index
2019-10-30 21:45:40.940  INFO 7348 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 2
2019-10-30 21:45:42.326  INFO 7348 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:45:42.333 DEBUG 7348 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:45:42.334 DEBUG 7348 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:45:42.334 DEBUG 7348 --- [http-nio-8080-exec-5] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:45:42.335 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:45:42.335 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:45:42.338 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 21:45:42.341 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:42.341 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:42.342 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:42.343 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:42.344 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:45:42.344 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:42.346 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:42.346 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:45:42.348 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:42.349 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:42.349 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:45:42.350 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:42.351 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:42.351 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:45:42.352 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:42.353 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:42.353 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:42.354 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:42.356 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:42.356 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:42.357 DEBUG 7348 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:42.360 DEBUG 7348 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:45:42.360 DEBUG 7348 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:45:42.362 DEBUG 7348 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:45:42.363  INFO 7348 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:45:42.363  INFO 7348 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 37
2019-10-30 21:45:48.641  INFO 7348 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/23/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[23, {}]}
2019-10-30 21:45:48.643 DEBUG 7348 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 21:45:48.643 DEBUG 7348 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 21:45:48.644 DEBUG 7348 --- [http-nio-8080-exec-2] com.pan.dao.TagMapper.selectByExample    : <==      Total: 5
2019-10-30 21:45:48.648 DEBUG 7348 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:45:48.648 DEBUG 7348 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:45:48.655 DEBUG 7348 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:45:48.657 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:45:48.658 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:45:48.660 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:48.661 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:48.662 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:48.662 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:48.663  INFO 7348 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 21:45:48.663  INFO 7348 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 22
2019-10-30 21:45:56.607  INFO 7348 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=23, uid=null, typeid=null, tagids='10', title='关于shiro的session共享问题', description='shiro相关的session管理问题', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=0, flag='原创', recommend=1, createTime=null, updateTime=null, content='最近在复习shiro框架的时候,遇到了如果使用shiro框架时,session就会存在一些疑惑,到底servlet容器中的session与shiro里面自己的session是否相同,是否共享的....

### 首先,先看一下shiro中的Session继承关系:
[![shiro的session继承关系](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")


#### 可以看到shiro中的Session是个interface,并且存在多个实现类,我们先进入HttpServletSession中看,看到这个名称就会想起了servlet容器中也有一个HttpServletSession,然后就会联想这两个session是否存在关系,我们进入该类
```java
    /**
     * {@link Session Session} implementation that is backed entirely by a standard servlet container
     * {@link HttpSession HttpSession} instance.  It does not interact with any of Shiro's session-related components
     * {@code SessionManager}, {@code SecurityManager}, etc, and instead satisfies all method implementations by interacting
     * with a servlet container provided {@link HttpSession HttpSession} instance.
     *
     * @since 1.0
     */
    //上面文字的大概意思:说这个session其实是servlet容器的session的一个包装而已
    public class HttpServletSession implements Session {
        ....省略前面不重要的变量
        private HttpSession httpSession = null;
        //下面就是一些构造方法,get set方法
        //将该servlet容器的session通过构造方法set进去
        public HttpServletSession(HttpSession httpSession, String host) {
            if (httpSession == null) {
                String msg = "HttpSession constructor argument cannot be null.";
                throw new IllegalArgumentException(msg);
            }
            if (httpSession instanceof ShiroHttpSession) {
                String msg = "HttpSession constructor argument cannot be an instance of ShiroHttpSession.  This " +
                        "is enforced to prevent circular dependencies and infinite loops.";
                throw new IllegalArgumentException(msg);
            }
            this.httpSession = httpSession;
            if (StringUtils.hasText(host)) {
                setHost(host);
            }
        }
```

### 由此可见,shiro中的HttpSession就是servlet容器中的session的包装

接下来我们再关注一个StoppingAwareProxiedSession，为什么要说这个呢,因为在shiro中是存在一些sessionManager的,也就是session的管理者,后面就会说这个;我们上面所说的那个session是在web环境下由web容器管理的,二在shiro中也有一个subject中存放session的地方,这里的session和前面的类型都不一样都是都是实现Session接口,目的用于存放在subject中
```java
        
    //这是一个内部类,DelegatingSubject就是我们平时所使用的subject的实现类,它是身份验证和授权的主体
    public class DelegatingSubject implements Subject {
    private class StoppingAwareProxiedSession extends ProxiedSession {
    
            private final DelegatingSubject owner;
    
            //这里是对HttpSession的一个包装
            private StoppingAwareProxiedSession(Session target, DelegatingSubject owningSubject) {
                super(target);
                owner = owningSubject;
            }
    
            public void stop() throws InvalidSessionException {
                super.stop();
                owner.sessionStopped();
            }
        }
    }
```


讲完上面两个重要的Session之后,应该来介绍一下shiro中的会话管理器:



### 三个会话管理器（SessionManager）实现

### 1.1DefaultSessionManager

DefaultSessionManager：DefaultSecurityManager 使用的默认实现，用于 JavaSE 环境；

### 1.2ServletContainerSessionManager

ServletContainerSessionManager：DefaultWebSecurityManager 使用的默认实现，用于 Web 环境，其直接使用 Servlet 容器的会话；这是shiro中默认使用的SessionManager,可以从DefaultWebSecurityManager(安全管理器的默认属性中看到)
```java
        public DefaultWebSecurityManager() {
            super();
            ((DefaultSubjectDAO) this.subjectDAO).setSessionStorageEvaluator(new DefaultWebSessionStorageEvaluator());
            this.sessionMode = HTTP_SESSION_MODE;
            setSubjectFactory(new DefaultWebSubjectFactory());
            setRememberMeManager(new CookieRememberMeManager());
            //默认使用ServletContainerSessionManager这个会话管理器
            setSessionManager(new ServletContainerSessionManager());
        }
```


#### 从这个会话管理器中我们可以知道,servlet中使用的sessionId与shiro中使用的sessionId是一样的,这里为什么要强调的是sessionID呢?因为在判断用户是否登录的标准,是否在同一个session'中,是根据请求携带的参数中找到这个sessionId进行判断的,一般都会存放在cookie中.

#### 然后说回来,由于shiro的subject自带也有一个session的实现类,所以与servlet中的session类型是不一样的,所以说这里要强调的是sessionId,可以从下面的实验中得出结论:

这个用于登录的Controller:
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
                 //这里获取的是subject里面的session
    			Session session = subject.getSession(false);
    			System.out.println(session);
                 System.out.println(session.getId());
                 //这里获取的是servlet中的session
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
                 //将登录成功用户信息放入session中
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    	}
    }
```
实验结果:
```java
    /*
    *就会发现两个session的类型是不一样的,但是sessionId是一样的
    *也就是说明判断是否在同一会话中的标准是sessionId
    */
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@2d784e2
    B3D0A39ED6B48230541B49B3CF8C8EF2
    org.apache.catalina.session.StandardSessionFacade@2e4e197f
    B3D0A39ED6B48230541B49B3CF8C8EF2
```


但是在实验过程中,发现一个奇怪的现象当我在测试授权身份的时候,对应的请求方法所得到的subject和subject的session的对象时不一样的,这是为什么呢?先看实验代码和结果
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		if(StringUtils.isEmpty(subject.getSession(false).getAttribute("myuser"))) {
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
    			System.out.println(subject);
    			Session session = subject.getSession(false);
    			System.out.println(session);
    			System.out.println(session.getId());
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    		}
    		else {
    			System.out.println("已经登录过了");
    			return "redirect:user/index";
    		}
    	}
```
#### 验证用户是否有权限进入添加用户的页面跳转方法:(能进入该方法就是说已经通过了身份验证),所以在这里登陆完成之后的session中的信息已经存放在该session中,接下来的实验结果会带给你惊喜!!!!!!
```java
    	@GetMapping("add")
    	public String add(HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		System.out.println(subject);
    		System.out.println(subject.getSession(false));
    		System.out.println(request.getSession(false));
    		System.out.println(request.getSession(false).getId());
    		return "user/add";
    	}
```
结果:
```java
    ======执行完登录验证======
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@52284d11
    C79BCF8618D24CFC0E9C2AE5D413F739
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
    授权-----
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@3f933e0c
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
```
从结果可以看出来sessionId一直都是相同的,但是有没有发现subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?还有为什么session对象都不一样了,为什么sessionId还是一样,还是能够从原来放进去的session中获取到数据

### 问题一:subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?

原因:我通过看源码，发现本地的session，也就是不是web的，它不会通过cookie中的jsessionid来判断是否是登录状态，通过看源码发现，是通过将subject与当前线程绑定，来实现是否该subject已经登录，由于我们使用的是web服务器tomcat，用的是连接池，当有请求过来的时候，会有一个线程来对应响应，每次请求的对应的线程是不一样的，因为subject与线程绑定的，有的线程没有subject，所以shiro就会创建一个subject,对应地也会创建一个session,但是由于这个session是有servlet容器来管理的,所以新创建的session还是对根据客户端cookie中的JSESSIONID来找到容器中存在的session进行包装,所以才导致session对象不一致但是,sessionId还是一样

### 先看看subject.getSession()方法:
```java
        public Session getSession(boolean create) {
    		  //.省略前面不重要的代码
            	//这里先为每个session创建一个上下文
                SessionContext sessionContext = createSessionContext();
            	//这里是关键,获取session
                Session session = this.securityManager.start(sessionContext);
            	//将返回的session包装成StoppingAwareProxiedSession类型的
                this.session = decorate(session);
            }
            return this.session;
        }
```
### 进入 subject.securityManager.start(sessionContext)方法:
```java
    public Session start(SessionContext context) throws AuthorizationException {
            //调用本类的方法创建session
            return createSession(context);
        }
```


### 进入createSession(context):
```java
        protected Session createSession(SessionContext sessionContext) throws AuthorizationException {
            if (!WebUtils.isHttp(sessionContext)) {
                String msg = "SessionContext must be an HTTP compatible implementation.";
                throw new IllegalArgumentException(msg);
            }
    	   //重要代码:获取当前请求
            HttpServletRequest request = WebUtils.getHttpRequest(sessionContext);
    	   //这里的session是servlet容器中管理的session
            HttpSession httpSession = request.getSession();
    	   //重载方法,也就是对servletSession进行了包装
            return createSession(httpSession, host);
        }
    
        protected Session createSession(HttpSession httpSession, String host) {
            return new HttpServletSession(httpSession, host);
        }
```
#### 通过上述代码可知虽然session对象是不一样了,但是底层包装的session还是原来的那个servlet容器所管理的session,并且springmvc的Dispatchservlet是交给web容器管理(tomcat....)的所以它的session类型一个是org.apache.catalina.session.StandardSessionFacade,也就是web容器的对servletsession的包装类型



### 1.3DefaultWebSessionManager

DefaultWebSessionManager：用于 Web 环境的实现，可以替代 ServletContainerSessionManager，自己维护着会话，直接废弃了 Servlet 容器的会话管理。', type=Type{id=2, name='null', blogs=null}, tagIds='10'}, org.apache.catalina.session.StandardSessionFacade@1efe900c, {}]}
2019-10-30 21:45:56.609 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:45:56.609 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:45:56.612 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:56.614 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:45:56.615 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:45:56.616 DEBUG 7348 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:56.620 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, recommend = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 21:45:56.623 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 2(Integer), 10(String), 关于shiro的session共享问题(String), shiro相关的session管理问题(String), a(String), 0(Integer), 0(Integer), 原创(String), 1(Integer), 2019-10-30 21:45:56.608(Timestamp), 2019-10-30 21:45:56.608(Timestamp), 最近在复习shiro框架的时候,遇到了如果使用shiro框架时,session就会存在一些疑惑,到底servlet容器中的session与shiro里面自己的session是否相同,是否共享的....

### 首先,先看一下shiro中的Session继承关系:
[![shiro的session继承关系](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")


#### 可以看到shiro中的Session是个interface,并且存在多个实现类,我们先进入HttpServletSession中看,看到这个名称就会想起了servlet容器中也有一个HttpServletSession,然后就会联想这两个session是否存在关系,我们进入该类
```java
    /**
     * {@link Session Session} implementation that is backed entirely by a standard servlet container
     * {@link HttpSession HttpSession} instance.  It does not interact with any of Shiro's session-related components
     * {@code SessionManager}, {@code SecurityManager}, etc, and instead satisfies all method implementations by interacting
     * with a servlet container provided {@link HttpSession HttpSession} instance.
     *
     * @since 1.0
     */
    //上面文字的大概意思:说这个session其实是servlet容器的session的一个包装而已
    public class HttpServletSession implements Session {
        ....省略前面不重要的变量
        private HttpSession httpSession = null;
        //下面就是一些构造方法,get set方法
        //将该servlet容器的session通过构造方法set进去
        public HttpServletSession(HttpSession httpSession, String host) {
            if (httpSession == null) {
                String msg = "HttpSession constructor argument cannot be null.";
                throw new IllegalArgumentException(msg);
            }
            if (httpSession instanceof ShiroHttpSession) {
                String msg = "HttpSession constructor argument cannot be an instance of ShiroHttpSession.  This " +
                        "is enforced to prevent circular dependencies and infinite loops.";
                throw new IllegalArgumentException(msg);
            }
            this.httpSession = httpSession;
            if (StringUtils.hasText(host)) {
                setHost(host);
            }
        }
```

### 由此可见,shiro中的HttpSession就是servlet容器中的session的包装

接下来我们再关注一个StoppingAwareProxiedSession，为什么要说这个呢,因为在shiro中是存在一些sessionManager的,也就是session的管理者,后面就会说这个;我们上面所说的那个session是在web环境下由web容器管理的,二在shiro中也有一个subject中存放session的地方,这里的session和前面的类型都不一样都是都是实现Session接口,目的用于存放在subject中
```java
        
    //这是一个内部类,DelegatingSubject就是我们平时所使用的subject的实现类,它是身份验证和授权的主体
    public class DelegatingSubject implements Subject {
    private class StoppingAwareProxiedSession extends ProxiedSession {
    
            private final DelegatingSubject owner;
    
            //这里是对HttpSession的一个包装
            private StoppingAwareProxiedSession(Session target, DelegatingSubject owningSubject) {
                super(target);
                owner = owningSubject;
            }
    
            public void stop() throws InvalidSessionException {
                super.stop();
                owner.sessionStopped();
            }
        }
    }
```


讲完上面两个重要的Session之后,应该来介绍一下shiro中的会话管理器:



### 三个会话管理器（SessionManager）实现

### 1.1DefaultSessionManager

DefaultSessionManager：DefaultSecurityManager 使用的默认实现，用于 JavaSE 环境；

### 1.2ServletContainerSessionManager

ServletContainerSessionManager：DefaultWebSecurityManager 使用的默认实现，用于 Web 环境，其直接使用 Servlet 容器的会话；这是shiro中默认使用的SessionManager,可以从DefaultWebSecurityManager(安全管理器的默认属性中看到)
```java
        public DefaultWebSecurityManager() {
            super();
            ((DefaultSubjectDAO) this.subjectDAO).setSessionStorageEvaluator(new DefaultWebSessionStorageEvaluator());
            this.sessionMode = HTTP_SESSION_MODE;
            setSubjectFactory(new DefaultWebSubjectFactory());
            setRememberMeManager(new CookieRememberMeManager());
            //默认使用ServletContainerSessionManager这个会话管理器
            setSessionManager(new ServletContainerSessionManager());
        }
```


#### 从这个会话管理器中我们可以知道,servlet中使用的sessionId与shiro中使用的sessionId是一样的,这里为什么要强调的是sessionID呢?因为在判断用户是否登录的标准,是否在同一个session'中,是根据请求携带的参数中找到这个sessionId进行判断的,一般都会存放在cookie中.

#### 然后说回来,由于shiro的subject自带也有一个session的实现类,所以与servlet中的session类型是不一样的,所以说这里要强调的是sessionId,可以从下面的实验中得出结论:

这个用于登录的Controller:
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
                 //这里获取的是subject里面的session
    			Session session = subject.getSession(false);
    			System.out.println(session);
                 System.out.println(session.getId());
                 //这里获取的是servlet中的session
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
                 //将登录成功用户信息放入session中
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    	}
    }
```
实验结果:
```java
    /*
    *就会发现两个session的类型是不一样的,但是sessionId是一样的
    *也就是说明判断是否在同一会话中的标准是sessionId
    */
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@2d784e2
    B3D0A39ED6B48230541B49B3CF8C8EF2
    org.apache.catalina.session.StandardSessionFacade@2e4e197f
    B3D0A39ED6B48230541B49B3CF8C8EF2
```


但是在实验过程中,发现一个奇怪的现象当我在测试授权身份的时候,对应的请求方法所得到的subject和subject的session的对象时不一样的,这是为什么呢?先看实验代码和结果
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		if(StringUtils.isEmpty(subject.getSession(false).getAttribute("myuser"))) {
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
    			System.out.println(subject);
    			Session session = subject.getSession(false);
    			System.out.println(session);
    			System.out.println(session.getId());
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    		}
    		else {
    			System.out.println("已经登录过了");
    			return "redirect:user/index";
    		}
    	}
```
#### 验证用户是否有权限进入添加用户的页面跳转方法:(能进入该方法就是说已经通过了身份验证),所以在这里登陆完成之后的session中的信息已经存放在该session中,接下来的实验结果会带给你惊喜!!!!!!
```java
    	@GetMapping("add")
    	public String add(HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		System.out.println(subject);
    		System.out.println(subject.getSession(false));
    		System.out.println(request.getSession(false));
    		System.out.println(request.getSession(false).getId());
    		return "user/add";
    	}
```
结果:
```java
    ======执行完登录验证======
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@52284d11
    C79BCF8618D24CFC0E9C2AE5D413F739
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
    授权-----
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@3f933e0c
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
```
从结果可以看出来sessionId一直都是相同的,但是有没有发现subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?还有为什么session对象都不一样了,为什么sessionId还是一样,还是能够从原来放进去的session中获取到数据

### 问题一:subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?

原因:我通过看源码，发现本地的session，也就是不是web的，它不会通过cookie中的jsessionid来判断是否是登录状态，通过看源码发现，是通过将subject与当前线程绑定，来实现是否该subject已经登录，由于我们使用的是web服务器tomcat，用的是连接池，当有请求过来的时候，会有一个线程来对应响应，每次请求的对应的线程是不一样的，因为subject与线程绑定的，有的线程没有subject，所以shiro就会创建一个subject,对应地也会创建一个session,但是由于这个session是有servlet容器来管理的,所以新创建的session还是对根据客户端cookie中的JSESSIONID来找到容器中存在的session进行包装,所以才导致session对象不一致但是,sessionId还是一样

### 先看看subject.getSession()方法:
```java
        public Session getSession(boolean create) {
    		  //.省略前面不重要的代码
            	//这里先为每个session创建一个上下文
                SessionContext sessionContext = createSessionContext();
            	//这里是关键,获取session
                Session session = this.securityManager.start(sessionContext);
            	//将返回的session包装成StoppingAwareProxiedSession类型的
                this.session = decorate(session);
            }
            return this.session;
        }
```
### 进入 subject.securityManager.start(sessionContext)方法:
```java
    public Session start(SessionContext context) throws AuthorizationException {
            //调用本类的方法创建session
            return createSession(context);
        }
```


### 进入createSession(context):
```java
        protected Session createSession(SessionContext sessionContext) throws AuthorizationException {
            if (!WebUtils.isHttp(sessionContext)) {
                String msg = "SessionContext must be an HTTP compatible implementation.";
                throw new IllegalArgumentException(msg);
            }
    	   //重要代码:获取当前请求
            HttpServletRequest request = WebUtils.getHttpRequest(sessionContext);
    	   //这里的session是servlet容器中管理的session
            HttpSession httpSession = request.getSession();
    	   //重载方法,也就是对servletSession进行了包装
            return createSession(httpSession, host);
        }
    
        protected Session createSession(HttpSession httpSession, String host) {
            return new HttpServletSession(httpSession, host);
        }
```
#### 通过上述代码可知虽然session对象是不一样了,但是底层包装的session还是原来的那个servlet容器所管理的session,并且springmvc的Dispatchservlet是交给web容器管理(tomcat....)的所以它的session类型一个是org.apache.catalina.session.StandardSessionFacade,也就是web容器的对servletsession的包装类型



### 1.3DefaultWebSessionManager

DefaultWebSessionManager：用于 Web 环境的实现，可以替代 ServletContainerSessionManager，自己维护着会话，直接废弃了 Servlet 容器的会话管理。(String), 23(Integer)
2019-10-30 21:45:56.624 DEBUG 7348 --- [http-nio-8080-exec-1] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 21:45:56.698  INFO 7348 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 21:45:56.699  INFO 7348 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 92
2019-10-30 21:45:56.705  INFO 7348 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=保存成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:45:56.706 DEBUG 7348 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:45:56.706 DEBUG 7348 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:45:56.707 DEBUG 7348 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:45:56.708 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:45:56.708 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:45:56.717 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 21:45:56.718 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:56.718 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:56.719 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:56.720 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:56.720 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:45:56.721 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:56.722 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:56.722 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:45:56.722 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:56.724 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:56.724 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:45:56.724 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:56.726 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:56.726 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:45:56.727 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:56.728 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:56.728 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:56.728 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:56.730 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:56.730 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:56.731 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:56.732 DEBUG 7348 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:45:56.732 DEBUG 7348 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:45:56.733 DEBUG 7348 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:45:56.733  INFO 7348 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:45:56.733  INFO 7348 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 28
2019-10-30 21:45:59.095  INFO 7348 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/23/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[23, {}]}
2019-10-30 21:45:59.096 DEBUG 7348 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 21:45:59.096 DEBUG 7348 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 21:45:59.097 DEBUG 7348 --- [http-nio-8080-exec-9] com.pan.dao.TagMapper.selectByExample    : <==      Total: 5
2019-10-30 21:45:59.099 DEBUG 7348 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:45:59.099 DEBUG 7348 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:45:59.100 DEBUG 7348 --- [http-nio-8080-exec-9] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:45:59.102 DEBUG 7348 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:45:59.102 DEBUG 7348 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:45:59.103 DEBUG 7348 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:59.106 DEBUG 7348 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:45:59.107 DEBUG 7348 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:45:59.107 DEBUG 7348 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:45:59.108  INFO 7348 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 21:45:59.108  INFO 7348 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 21:46:00.631  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=23, uid=null, typeid=null, tagids='10', title='关于shiro的session共享问题', description='shiro相关的session管理问题', firstPicture='a', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=1, createTime=null, updateTime=null, content='最近在复习shiro框架的时候,遇到了如果使用shiro框架时,session就会存在一些疑惑,到底servlet容器中的session与shiro里面自己的session是否相同,是否共享的....

### 首先,先看一下shiro中的Session继承关系:
[![shiro的session继承关系](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")


#### 可以看到shiro中的Session是个interface,并且存在多个实现类,我们先进入HttpServletSession中看,看到这个名称就会想起了servlet容器中也有一个HttpServletSession,然后就会联想这两个session是否存在关系,我们进入该类
```java
    /**
     * {@link Session Session} implementation that is backed entirely by a standard servlet container
     * {@link HttpSession HttpSession} instance.  It does not interact with any of Shiro's session-related components
     * {@code SessionManager}, {@code SecurityManager}, etc, and instead satisfies all method implementations by interacting
     * with a servlet container provided {@link HttpSession HttpSession} instance.
     *
     * @since 1.0
     */
    //上面文字的大概意思:说这个session其实是servlet容器的session的一个包装而已
    public class HttpServletSession implements Session {
        ....省略前面不重要的变量
        private HttpSession httpSession = null;
        //下面就是一些构造方法,get set方法
        //将该servlet容器的session通过构造方法set进去
        public HttpServletSession(HttpSession httpSession, String host) {
            if (httpSession == null) {
                String msg = "HttpSession constructor argument cannot be null.";
                throw new IllegalArgumentException(msg);
            }
            if (httpSession instanceof ShiroHttpSession) {
                String msg = "HttpSession constructor argument cannot be an instance of ShiroHttpSession.  This " +
                        "is enforced to prevent circular dependencies and infinite loops.";
                throw new IllegalArgumentException(msg);
            }
            this.httpSession = httpSession;
            if (StringUtils.hasText(host)) {
                setHost(host);
            }
        }
```

### 由此可见,shiro中的HttpSession就是servlet容器中的session的包装

接下来我们再关注一个StoppingAwareProxiedSession，为什么要说这个呢,因为在shiro中是存在一些sessionManager的,也就是session的管理者,后面就会说这个;我们上面所说的那个session是在web环境下由web容器管理的,二在shiro中也有一个subject中存放session的地方,这里的session和前面的类型都不一样都是都是实现Session接口,目的用于存放在subject中
```java
        
    //这是一个内部类,DelegatingSubject就是我们平时所使用的subject的实现类,它是身份验证和授权的主体
    public class DelegatingSubject implements Subject {
    private class StoppingAwareProxiedSession extends ProxiedSession {
    
            private final DelegatingSubject owner;
    
            //这里是对HttpSession的一个包装
            private StoppingAwareProxiedSession(Session target, DelegatingSubject owningSubject) {
                super(target);
                owner = owningSubject;
            }
    
            public void stop() throws InvalidSessionException {
                super.stop();
                owner.sessionStopped();
            }
        }
    }
```


讲完上面两个重要的Session之后,应该来介绍一下shiro中的会话管理器:



### 三个会话管理器（SessionManager）实现

### 1.1DefaultSessionManager

DefaultSessionManager：DefaultSecurityManager 使用的默认实现，用于 JavaSE 环境；

### 1.2ServletContainerSessionManager

ServletContainerSessionManager：DefaultWebSecurityManager 使用的默认实现，用于 Web 环境，其直接使用 Servlet 容器的会话；这是shiro中默认使用的SessionManager,可以从DefaultWebSecurityManager(安全管理器的默认属性中看到)
```java
        public DefaultWebSecurityManager() {
            super();
            ((DefaultSubjectDAO) this.subjectDAO).setSessionStorageEvaluator(new DefaultWebSessionStorageEvaluator());
            this.sessionMode = HTTP_SESSION_MODE;
            setSubjectFactory(new DefaultWebSubjectFactory());
            setRememberMeManager(new CookieRememberMeManager());
            //默认使用ServletContainerSessionManager这个会话管理器
            setSessionManager(new ServletContainerSessionManager());
        }
```


#### 从这个会话管理器中我们可以知道,servlet中使用的sessionId与shiro中使用的sessionId是一样的,这里为什么要强调的是sessionID呢?因为在判断用户是否登录的标准,是否在同一个session'中,是根据请求携带的参数中找到这个sessionId进行判断的,一般都会存放在cookie中.

#### 然后说回来,由于shiro的subject自带也有一个session的实现类,所以与servlet中的session类型是不一样的,所以说这里要强调的是sessionId,可以从下面的实验中得出结论:

这个用于登录的Controller:
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
                 //这里获取的是subject里面的session
    			Session session = subject.getSession(false);
    			System.out.println(session);
                 System.out.println(session.getId());
                 //这里获取的是servlet中的session
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
                 //将登录成功用户信息放入session中
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    	}
    }
```
实验结果:
```java
    /*
    *就会发现两个session的类型是不一样的,但是sessionId是一样的
    *也就是说明判断是否在同一会话中的标准是sessionId
    */
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@2d784e2
    B3D0A39ED6B48230541B49B3CF8C8EF2
    org.apache.catalina.session.StandardSessionFacade@2e4e197f
    B3D0A39ED6B48230541B49B3CF8C8EF2
```


但是在实验过程中,发现一个奇怪的现象当我在测试授权身份的时候,对应的请求方法所得到的subject和subject的session的对象时不一样的,这是为什么呢?先看实验代码和结果
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		if(StringUtils.isEmpty(subject.getSession(false).getAttribute("myuser"))) {
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
    			System.out.println(subject);
    			Session session = subject.getSession(false);
    			System.out.println(session);
    			System.out.println(session.getId());
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    		}
    		else {
    			System.out.println("已经登录过了");
    			return "redirect:user/index";
    		}
    	}
```
#### 验证用户是否有权限进入添加用户的页面跳转方法:(能进入该方法就是说已经通过了身份验证),所以在这里登陆完成之后的session中的信息已经存放在该session中,接下来的实验结果会带给你惊喜!!!!!!
```java
    	@GetMapping("add")
    	public String add(HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		System.out.println(subject);
    		System.out.println(subject.getSession(false));
    		System.out.println(request.getSession(false));
    		System.out.println(request.getSession(false).getId());
    		return "user/add";
    	}
```
结果:
```java
    ======执行完登录验证======
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@52284d11
    C79BCF8618D24CFC0E9C2AE5D413F739
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
    授权-----
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@3f933e0c
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
```
从结果可以看出来sessionId一直都是相同的,但是有没有发现subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?还有为什么session对象都不一样了,为什么sessionId还是一样,还是能够从原来放进去的session中获取到数据

### 问题一:subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?

原因:我通过看源码，发现本地的session，也就是不是web的，它不会通过cookie中的jsessionid来判断是否是登录状态，通过看源码发现，是通过将subject与当前线程绑定，来实现是否该subject已经登录，由于我们使用的是web服务器tomcat，用的是连接池，当有请求过来的时候，会有一个线程来对应响应，每次请求的对应的线程是不一样的，因为subject与线程绑定的，有的线程没有subject，所以shiro就会创建一个subject,对应地也会创建一个session,但是由于这个session是有servlet容器来管理的,所以新创建的session还是对根据客户端cookie中的JSESSIONID来找到容器中存在的session进行包装,所以才导致session对象不一致但是,sessionId还是一样

### 先看看subject.getSession()方法:
```java
        public Session getSession(boolean create) {
    		  //.省略前面不重要的代码
            	//这里先为每个session创建一个上下文
                SessionContext sessionContext = createSessionContext();
            	//这里是关键,获取session
                Session session = this.securityManager.start(sessionContext);
            	//将返回的session包装成StoppingAwareProxiedSession类型的
                this.session = decorate(session);
            }
            return this.session;
        }
```
### 进入 subject.securityManager.start(sessionContext)方法:
```java
    public Session start(SessionContext context) throws AuthorizationException {
            //调用本类的方法创建session
            return createSession(context);
        }
```


### 进入createSession(context):
```java
        protected Session createSession(SessionContext sessionContext) throws AuthorizationException {
            if (!WebUtils.isHttp(sessionContext)) {
                String msg = "SessionContext must be an HTTP compatible implementation.";
                throw new IllegalArgumentException(msg);
            }
    	   //重要代码:获取当前请求
            HttpServletRequest request = WebUtils.getHttpRequest(sessionContext);
    	   //这里的session是servlet容器中管理的session
            HttpSession httpSession = request.getSession();
    	   //重载方法,也就是对servletSession进行了包装
            return createSession(httpSession, host);
        }
    
        protected Session createSession(HttpSession httpSession, String host) {
            return new HttpServletSession(httpSession, host);
        }
```
#### 通过上述代码可知虽然session对象是不一样了,但是底层包装的session还是原来的那个servlet容器所管理的session,并且springmvc的Dispatchservlet是交给web容器管理(tomcat....)的所以它的session类型一个是org.apache.catalina.session.StandardSessionFacade,也就是web容器的对servletsession的包装类型



### 1.3DefaultWebSessionManager

DefaultWebSessionManager：用于 Web 环境的实现，可以替代 ServletContainerSessionManager，自己维护着会话，直接废弃了 Servlet 容器的会话管理。', type=Type{id=2, name='null', blogs=null}, tagIds='10'}, org.apache.catalina.session.StandardSessionFacade@1efe900c, {}]}
2019-10-30 21:46:00.632 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:46:00.633 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:46:00.634 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:00.635 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:46:00.636 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:46:00.636 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:00.637 DEBUG 7348 --- [http-nio-8080-exec-10] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, recommend = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 21:46:00.638 DEBUG 7348 --- [http-nio-8080-exec-10] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 2(Integer), 10(String), 关于shiro的session共享问题(String), shiro相关的session管理问题(String), a(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 21:46:00.632(Timestamp), 2019-10-30 21:46:00.632(Timestamp), 最近在复习shiro框架的时候,遇到了如果使用shiro框架时,session就会存在一些疑惑,到底servlet容器中的session与shiro里面自己的session是否相同,是否共享的....

### 首先,先看一下shiro中的Session继承关系:
[![shiro的session继承关系](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")


#### 可以看到shiro中的Session是个interface,并且存在多个实现类,我们先进入HttpServletSession中看,看到这个名称就会想起了servlet容器中也有一个HttpServletSession,然后就会联想这两个session是否存在关系,我们进入该类
```java
    /**
     * {@link Session Session} implementation that is backed entirely by a standard servlet container
     * {@link HttpSession HttpSession} instance.  It does not interact with any of Shiro's session-related components
     * {@code SessionManager}, {@code SecurityManager}, etc, and instead satisfies all method implementations by interacting
     * with a servlet container provided {@link HttpSession HttpSession} instance.
     *
     * @since 1.0
     */
    //上面文字的大概意思:说这个session其实是servlet容器的session的一个包装而已
    public class HttpServletSession implements Session {
        ....省略前面不重要的变量
        private HttpSession httpSession = null;
        //下面就是一些构造方法,get set方法
        //将该servlet容器的session通过构造方法set进去
        public HttpServletSession(HttpSession httpSession, String host) {
            if (httpSession == null) {
                String msg = "HttpSession constructor argument cannot be null.";
                throw new IllegalArgumentException(msg);
            }
            if (httpSession instanceof ShiroHttpSession) {
                String msg = "HttpSession constructor argument cannot be an instance of ShiroHttpSession.  This " +
                        "is enforced to prevent circular dependencies and infinite loops.";
                throw new IllegalArgumentException(msg);
            }
            this.httpSession = httpSession;
            if (StringUtils.hasText(host)) {
                setHost(host);
            }
        }
```

### 由此可见,shiro中的HttpSession就是servlet容器中的session的包装

接下来我们再关注一个StoppingAwareProxiedSession，为什么要说这个呢,因为在shiro中是存在一些sessionManager的,也就是session的管理者,后面就会说这个;我们上面所说的那个session是在web环境下由web容器管理的,二在shiro中也有一个subject中存放session的地方,这里的session和前面的类型都不一样都是都是实现Session接口,目的用于存放在subject中
```java
        
    //这是一个内部类,DelegatingSubject就是我们平时所使用的subject的实现类,它是身份验证和授权的主体
    public class DelegatingSubject implements Subject {
    private class StoppingAwareProxiedSession extends ProxiedSession {
    
            private final DelegatingSubject owner;
    
            //这里是对HttpSession的一个包装
            private StoppingAwareProxiedSession(Session target, DelegatingSubject owningSubject) {
                super(target);
                owner = owningSubject;
            }
    
            public void stop() throws InvalidSessionException {
                super.stop();
                owner.sessionStopped();
            }
        }
    }
```


讲完上面两个重要的Session之后,应该来介绍一下shiro中的会话管理器:



### 三个会话管理器（SessionManager）实现

### 1.1DefaultSessionManager

DefaultSessionManager：DefaultSecurityManager 使用的默认实现，用于 JavaSE 环境；

### 1.2ServletContainerSessionManager

ServletContainerSessionManager：DefaultWebSecurityManager 使用的默认实现，用于 Web 环境，其直接使用 Servlet 容器的会话；这是shiro中默认使用的SessionManager,可以从DefaultWebSecurityManager(安全管理器的默认属性中看到)
```java
        public DefaultWebSecurityManager() {
            super();
            ((DefaultSubjectDAO) this.subjectDAO).setSessionStorageEvaluator(new DefaultWebSessionStorageEvaluator());
            this.sessionMode = HTTP_SESSION_MODE;
            setSubjectFactory(new DefaultWebSubjectFactory());
            setRememberMeManager(new CookieRememberMeManager());
            //默认使用ServletContainerSessionManager这个会话管理器
            setSessionManager(new ServletContainerSessionManager());
        }
```


#### 从这个会话管理器中我们可以知道,servlet中使用的sessionId与shiro中使用的sessionId是一样的,这里为什么要强调的是sessionID呢?因为在判断用户是否登录的标准,是否在同一个session'中,是根据请求携带的参数中找到这个sessionId进行判断的,一般都会存放在cookie中.

#### 然后说回来,由于shiro的subject自带也有一个session的实现类,所以与servlet中的session类型是不一样的,所以说这里要强调的是sessionId,可以从下面的实验中得出结论:

这个用于登录的Controller:
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
                 //这里获取的是subject里面的session
    			Session session = subject.getSession(false);
    			System.out.println(session);
                 System.out.println(session.getId());
                 //这里获取的是servlet中的session
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
                 //将登录成功用户信息放入session中
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    	}
    }
```
实验结果:
```java
    /*
    *就会发现两个session的类型是不一样的,但是sessionId是一样的
    *也就是说明判断是否在同一会话中的标准是sessionId
    */
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@2d784e2
    B3D0A39ED6B48230541B49B3CF8C8EF2
    org.apache.catalina.session.StandardSessionFacade@2e4e197f
    B3D0A39ED6B48230541B49B3CF8C8EF2
```


但是在实验过程中,发现一个奇怪的现象当我在测试授权身份的时候,对应的请求方法所得到的subject和subject的session的对象时不一样的,这是为什么呢?先看实验代码和结果
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		if(StringUtils.isEmpty(subject.getSession(false).getAttribute("myuser"))) {
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
    			System.out.println(subject);
    			Session session = subject.getSession(false);
    			System.out.println(session);
    			System.out.println(session.getId());
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    		}
    		else {
    			System.out.println("已经登录过了");
    			return "redirect:user/index";
    		}
    	}
```
#### 验证用户是否有权限进入添加用户的页面跳转方法:(能进入该方法就是说已经通过了身份验证),所以在这里登陆完成之后的session中的信息已经存放在该session中,接下来的实验结果会带给你惊喜!!!!!!
```java
    	@GetMapping("add")
    	public String add(HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		System.out.println(subject);
    		System.out.println(subject.getSession(false));
    		System.out.println(request.getSession(false));
    		System.out.println(request.getSession(false).getId());
    		return "user/add";
    	}
```
结果:
```java
    ======执行完登录验证======
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@52284d11
    C79BCF8618D24CFC0E9C2AE5D413F739
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
    授权-----
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@3f933e0c
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
```
从结果可以看出来sessionId一直都是相同的,但是有没有发现subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?还有为什么session对象都不一样了,为什么sessionId还是一样,还是能够从原来放进去的session中获取到数据

### 问题一:subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?

原因:我通过看源码，发现本地的session，也就是不是web的，它不会通过cookie中的jsessionid来判断是否是登录状态，通过看源码发现，是通过将subject与当前线程绑定，来实现是否该subject已经登录，由于我们使用的是web服务器tomcat，用的是连接池，当有请求过来的时候，会有一个线程来对应响应，每次请求的对应的线程是不一样的，因为subject与线程绑定的，有的线程没有subject，所以shiro就会创建一个subject,对应地也会创建一个session,但是由于这个session是有servlet容器来管理的,所以新创建的session还是对根据客户端cookie中的JSESSIONID来找到容器中存在的session进行包装,所以才导致session对象不一致但是,sessionId还是一样

### 先看看subject.getSession()方法:
```java
        public Session getSession(boolean create) {
    		  //.省略前面不重要的代码
            	//这里先为每个session创建一个上下文
                SessionContext sessionContext = createSessionContext();
            	//这里是关键,获取session
                Session session = this.securityManager.start(sessionContext);
            	//将返回的session包装成StoppingAwareProxiedSession类型的
                this.session = decorate(session);
            }
            return this.session;
        }
```
### 进入 subject.securityManager.start(sessionContext)方法:
```java
    public Session start(SessionContext context) throws AuthorizationException {
            //调用本类的方法创建session
            return createSession(context);
        }
```


### 进入createSession(context):
```java
        protected Session createSession(SessionContext sessionContext) throws AuthorizationException {
            if (!WebUtils.isHttp(sessionContext)) {
                String msg = "SessionContext must be an HTTP compatible implementation.";
                throw new IllegalArgumentException(msg);
            }
    	   //重要代码:获取当前请求
            HttpServletRequest request = WebUtils.getHttpRequest(sessionContext);
    	   //这里的session是servlet容器中管理的session
            HttpSession httpSession = request.getSession();
    	   //重载方法,也就是对servletSession进行了包装
            return createSession(httpSession, host);
        }
    
        protected Session createSession(HttpSession httpSession, String host) {
            return new HttpServletSession(httpSession, host);
        }
```
#### 通过上述代码可知虽然session对象是不一样了,但是底层包装的session还是原来的那个servlet容器所管理的session,并且springmvc的Dispatchservlet是交给web容器管理(tomcat....)的所以它的session类型一个是org.apache.catalina.session.StandardSessionFacade,也就是web容器的对servletsession的包装类型



### 1.3DefaultWebSessionManager

DefaultWebSessionManager：用于 Web 环境的实现，可以替代 ServletContainerSessionManager，自己维护着会话，直接废弃了 Servlet 容器的会话管理。(String), 23(Integer)
2019-10-30 21:46:00.639 DEBUG 7348 --- [http-nio-8080-exec-10] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 21:46:00.706  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 21:46:00.706  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 75
2019-10-30 21:46:00.709  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 21:46:00.710 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 21:46:00.710 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 21:46:00.711 DEBUG 7348 --- [http-nio-8080-exec-8] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 21:46:00.712 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 21:46:00.712 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:46:00.714 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 21:46:00.715 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:00.716 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:00.716 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:00.717 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:00.717 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:46:00.718 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:00.719 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:00.720 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:46:00.721 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:00.722 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:00.722 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:46:00.723 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:00.724 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:00.724 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:46:00.725 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:00.726 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:00.726 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:00.727 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:00.728 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:00.728 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:00.728 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:00.730 DEBUG 7348 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 21:46:00.730 DEBUG 7348 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 21:46:00.730 DEBUG 7348 --- [http-nio-8080-exec-8] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 21:46:00.731  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 21:46:00.731  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 22
2019-10-30 21:46:04.858  INFO 7348 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:46:04.878 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:46:04.878 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:04.879 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.880 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:04.880 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:04.881 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.883 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:46:04.883 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:04.884 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.885 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:04.886 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:04.886 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.887 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:46:04.888 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:04.888 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.889 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:04.890 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:46:04.891 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.893 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:46:04.893 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:04.894 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.895 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:04.895 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:46:04.896 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.897 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:46:04.897 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:04.898 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.900 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:04.900 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:46:04.900 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.902 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:46:04.902 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:04.903 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.905 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:04.905 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:46:04.907 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.909 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:46:04.909 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:04.910 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.911 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:04.911 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:04.912 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:04.913 DEBUG 7348 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:46:04.913 DEBUG 7348 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:46:04.913 DEBUG 7348 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:46:04.914 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:46:04.914 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:46:04.915 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:46:04.915 DEBUG 7348 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:46:04.915 DEBUG 7348 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:46:04.916 DEBUG 7348 --- [http-nio-8080-exec-3] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:46:04.917 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:46:04.917 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:46:04.918 DEBUG 7348 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 21:46:04.918 DEBUG 7348 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:46:04.918 DEBUG 7348 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:46:04.919 DEBUG 7348 --- [http-nio-8080-exec-3] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:46:04.919 DEBUG 7348 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:46:04.919 DEBUG 7348 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:46:04.920 DEBUG 7348 --- [http-nio-8080-exec-3] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 21:46:04.921  INFO 7348 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:46:04.921  INFO 7348 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 63
2019-10-30 21:46:07.356  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 21:46:07.357 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:46:07.358 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:46:07.359 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:07.363 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:07.363 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:07.364 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:07.365 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:46:07.367 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:07.367 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:07.369 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:46:07.369 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 21:46:07.369 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:46:07.369  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:46:07.369  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 21:46:07.417 ERROR 7348 --- [http-nio-8080-exec-4] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:46:07.418  WARN 7348 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:46:33.025  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 21:46:33.026 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:46:33.026 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:46:33.027 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:33.030 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:46:33.030 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:33.031 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:33.032 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:46:33.032 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:46:33.033 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:46:33.035 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:46:33.035 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 21:46:33.036 DEBUG 7348 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:46:33.036  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:46:33.036  INFO 7348 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 11
2019-10-30 21:46:33.107 ERROR 7348 --- [http-nio-8080-exec-1] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:46:33.107  WARN 7348 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:47:23.828  INFO 7348 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:47:23.836 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:47:23.836 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:23.842 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.844 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:47:23.844 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:23.845 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.846 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:47:23.846 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:23.847 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.848 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:47:23.849 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:23.850 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.851 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:47:23.851 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:23.852 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.853 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:47:23.854 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:47:23.854 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.855 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:47:23.856 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:23.856 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.858 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:47:23.858 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:47:23.858 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.860 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:47:23.860 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:23.860 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.862 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:47:23.862 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:47:23.863 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.864 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:47:23.864 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:23.865 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.866 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:47:23.866 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:47:23.866 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.867 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:47:23.868 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:23.868 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.869 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:47:23.870 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:23.870 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:23.871 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:47:23.871 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:47:23.872 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:47:23.872 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:47:23.872 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:47:23.873 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:47:23.874 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:47:23.874 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:47:23.875 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:47:23.876 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:47:23.876 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:47:23.877 DEBUG 7348 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 21:47:23.877 DEBUG 7348 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:47:23.877 DEBUG 7348 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:47:23.878 DEBUG 7348 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:47:23.878 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:47:23.878 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:47:23.879 DEBUG 7348 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 21:47:23.879  INFO 7348 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:47:23.879  INFO 7348 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 51
2019-10-30 21:47:25.224  INFO 7348 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 21:47:25.225 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:47:25.226 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:47:25.226 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:25.230 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:47:25.231 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:25.231 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:25.232 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:47:25.233 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:47:25.233 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:47:25.234 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:47:25.234 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 21:47:25.235 DEBUG 7348 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:47:25.235  INFO 7348 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:47:25.235  INFO 7348 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 11
2019-10-30 21:47:25.273 ERROR 7348 --- [http-nio-8080-exec-7] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:47:25.273  WARN 7348 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:48:07.174  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 21:48:07.175 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:48:07.175 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:48:07.176 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:48:07.180 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:48:07.181 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:48:07.181 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:48:07.182 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:48:07.183 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:48:07.185 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:48:07.186 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:48:07.186 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 21:48:07.187 DEBUG 7348 --- [http-nio-8080-exec-10] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:48:07.187  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:48:07.187  INFO 7348 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 21:48:07.221 ERROR 7348 --- [http-nio-8080-exec-8] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:48:07.221  WARN 7348 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:53:11.243  INFO 13600 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 13600 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 21:53:11.245 DEBUG 13600 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 21:53:11.245  INFO 13600 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 21:53:11.286  INFO 13600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 21:53:11.286  INFO 13600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 21:53:12.005  INFO 13600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 21:53:12.044  INFO 13600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2019-10-30 21:53:12.412  INFO 13600 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$87ac06b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 21:53:12.889  INFO 13600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 21:53:12.984  INFO 13600 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 21:53:12.985  INFO 13600 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 21:53:13.098  INFO 13600 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 21:53:13.098  INFO 13600 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1812 ms
2019-10-30 21:53:13.258  INFO 13600 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 21:53:13.511  INFO 13600 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 21:53:14.793  INFO 13600 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 21:53:14.890  INFO 13600 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 21:53:15.636  INFO 13600 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 21:53:15.696  INFO 13600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 21:53:15.699  INFO 13600 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.119 seconds (JVM running for 6.235)
2019-10-30 21:53:19.752  INFO 13600 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 21:53:19.753  INFO 13600 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 21:53:19.768  INFO 13600 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2019-10-30 21:53:19.801  INFO 13600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:53:20.015 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:53:20.042 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:20.075 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.083 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:53:20.084 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:20.085 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.086 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:53:20.087 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:20.088 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.090 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:53:20.091 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:20.091 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.093 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:53:20.094 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:20.096 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.098 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:53:20.099 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:53:20.100 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.102 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:53:20.102 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:20.103 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.105 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:53:20.105 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:53:20.106 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.109 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:53:20.109 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:20.111 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.122 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:53:20.122 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:53:20.123 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.125 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:53:20.126 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:20.128 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.131 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:53:20.131 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:53:20.132 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.134 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:53:20.134 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:20.136 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.138 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:53:20.138 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:20.139 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:20.180 DEBUG 13600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:53:20.181 DEBUG 13600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:53:20.182 DEBUG 13600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:53:20.184 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:53:20.185 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:53:20.187 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:53:20.194 DEBUG 13600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:53:20.195 DEBUG 13600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:53:20.196 DEBUG 13600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:53:20.197 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:53:20.197 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:53:20.198 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 21:53:20.207 DEBUG 13600 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:53:20.207 DEBUG 13600 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:53:20.208 DEBUG 13600 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:53:20.209 DEBUG 13600 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:53:20.209 DEBUG 13600 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:53:20.210 DEBUG 13600 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 21:53:20.212  INFO 13600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:53:20.212  INFO 13600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 413
2019-10-30 21:53:23.752  INFO 13600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 21:53:23.754 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:53:23.754 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 21:53:23.758 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:23.803 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:53:23.803 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:23.804 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:23.805 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:53:23.806 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:53:23.807 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:53:23.808 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:53:23.808 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 21:53:23.809 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:53:23.810  INFO 13600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:53:23.810  INFO 13600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 58
2019-10-30 21:53:23.886 ERROR 13600 --- [http-nio-8080-exec-8] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:53:23.887  WARN 13600 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:54:15.940  INFO 13600 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/22', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[22, {}]}
2019-10-30 21:54:15.942 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:54:15.943 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 22(Integer)
2019-10-30 21:54:15.945 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:54:15.950 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:54:15.951 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:54:15.953 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:54:15.955 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:54:15.956 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:54:15.957 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:54:15.959 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:54:15.959 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 9(Integer)
2019-10-30 21:54:15.960 DEBUG 13600 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:54:15.960  INFO 13600 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:54:15.960  INFO 13600 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 20
2019-10-30 21:54:15.997 ERROR 13600 --- [http-nio-8080-exec-10] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:54:15.998  WARN 13600 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:55:54.206  INFO 13600 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/22', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[22, {}]}
2019-10-30 21:55:54.213 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 21:55:54.214 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 22(Integer)
2019-10-30 21:55:54.219 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:55:54.223 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:55:54.224 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:55:54.226 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:55:54.228 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:55:54.229 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:55:54.230 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:55:54.232 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 21:55:54.232 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 9(Integer)
2019-10-30 21:55:54.234 DEBUG 13600 --- [http-nio-8080-exec-7] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 21:55:54.234  INFO 13600 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 21:55:54.234  INFO 13600 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 28
2019-10-30 21:55:54.278 ERROR 13600 --- [http-nio-8080-exec-1] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 21:55:54.278  WARN 13600 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 21:57:00.870  INFO 13600 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 21:57:00.886 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:57:00.886 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:57:00.889 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.891 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:57:00.892 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:57:00.893 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.894 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:57:00.895 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:57:00.896 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.898 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:57:00.898 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:57:00.899 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.908 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:57:00.908 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:57:00.909 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.911 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:57:00.911 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:57:00.913 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.915 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:57:00.915 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:57:00.916 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.918 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:57:00.919 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:57:00.920 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.922 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:57:00.923 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:57:00.923 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.925 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:57:00.925 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 21:57:00.926 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.928 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:57:00.928 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:57:00.932 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.934 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:57:00.934 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 21:57:00.936 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.938 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 21:57:00.938 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:57:00.939 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.941 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 21:57:00.941 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 21:57:00.942 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 21:57:00.943 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 21:57:00.944 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:57:00.944 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:57:00.945 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 21:57:00.945 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:57:00.947 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 21:57:00.947 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 21:57:00.947 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 21:57:00.948 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 21:57:00.948 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 21:57:00.949 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 21:57:00.950 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 21:57:00.951 DEBUG 13600 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 21:57:00.952 DEBUG 13600 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 21:57:00.953 DEBUG 13600 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 21:57:00.953 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 21:57:00.953 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 21:57:00.954 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 21:57:00.955  INFO 13600 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 21:57:00.955  INFO 13600 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 85
2019-10-30 22:02:03.304  INFO 13600 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/16', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[16, {}]}
2019-10-30 22:02:03.311 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:02:03.311 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 16(Integer)
2019-10-30 22:02:03.315 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:02:03.321 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:02:03.322 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:02:03.323 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:02:03.325 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:02:03.325 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:02:03.326 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:02:03.328 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:02:03.328 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 6(Integer)
2019-10-30 22:02:03.329 DEBUG 13600 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:02:03.329  INFO 13600 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:02:03.329  INFO 13600 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 25
2019-10-30 22:02:03.367 ERROR 13600 --- [http-nio-8080-exec-2] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:02:03.367  WARN 13600 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:02:15.537  INFO 13600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/16', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[16, {}]}
2019-10-30 22:02:15.538 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:02:15.538 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 16(Integer)
2019-10-30 22:02:15.539 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:02:15.541 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:02:15.542 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:02:15.543 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:02:15.544 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:02:15.545 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:02:15.546 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:02:15.549 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:02:15.549 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 6(Integer)
2019-10-30 22:02:15.550 DEBUG 13600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:02:15.550  INFO 13600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:02:15.550  INFO 13600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 22:02:15.752 ERROR 13600 --- [http-nio-8080-exec-10] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:02:15.752  WARN 13600 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:06:18.494 ERROR 13600 --- [http-nio-8080-exec-6] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:06:18.495  WARN 13600 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:06:52.694  INFO 13600 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 22:06:52.706 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:06:52.707 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:06:52.708 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.718 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:06:52.718 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:06:52.719 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.721 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:06:52.721 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:06:52.722 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.725 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:06:52.725 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:06:52.727 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.728 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:06:52.729 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:06:52.730 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.732 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:06:52.732 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:06:52.734 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.736 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:06:52.737 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:06:52.737 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.739 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:06:52.739 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:06:52.740 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.742 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:06:52.742 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:06:52.743 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.744 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:06:52.744 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 22:06:52.745 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.746 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:06:52.746 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:06:52.747 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.748 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:06:52.748 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:06:52.749 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.750 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:06:52.750 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:06:52.752 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.754 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:06:52.754 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:06:52.755 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:52.756 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 22:06:52.756 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:06:52.757 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:06:52.757 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 22:06:52.758 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:06:52.758 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 22:06:52.759 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 22:06:52.759 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:06:52.761 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:06:52.762 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 22:06:52.762 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 22:06:52.763 DEBUG 13600 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 22:06:52.764 DEBUG 13600 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 22:06:52.764 DEBUG 13600 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 22:06:52.765 DEBUG 13600 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 22:06:52.765 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 22:06:52.765 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:06:52.766 DEBUG 13600 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 22:06:52.768  INFO 13600 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 22:06:52.768  INFO 13600 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 74
2019-10-30 22:06:57.773  INFO 13600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/21', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[21, {}]}
2019-10-30 22:06:57.774 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:06:57.774 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 21(Integer)
2019-10-30 22:06:57.776 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:57.779 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:06:57.780 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:06:57.781 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:57.782 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:06:57.783 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:06:57.784 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:06:57.786 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:06:57.786 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 9(Integer)
2019-10-30 22:06:57.787 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:06:57.788  INFO 13600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:06:57.788  INFO 13600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 22:06:57.822 ERROR 13600 --- [http-nio-8080-exec-3] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:06:57.823  WARN 13600 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:07:11.888  INFO 13600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/21', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[21, {}]}
2019-10-30 22:07:11.889 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:07:11.889 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 21(Integer)
2019-10-30 22:07:11.890 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:07:11.895 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:07:11.896 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:07:11.897 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:07:11.898 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:07:11.898 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:07:11.899 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:07:11.900 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:07:11.901 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 9(Integer)
2019-10-30 22:07:11.901 DEBUG 13600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:07:11.902  INFO 13600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:07:11.902  INFO 13600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 14
2019-10-30 22:07:11.951 ERROR 13600 --- [http-nio-8080-exec-1] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:07:11.952  WARN 13600 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:12:40.756  INFO 2404 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 2404 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 22:12:40.758 DEBUG 2404 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 22:12:40.758  INFO 2404 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 22:12:40.824  INFO 2404 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 22:12:40.824  INFO 2404 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 22:12:42.144  INFO 2404 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 22:12:42.193  INFO 2404 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 35ms. Found 0 repository interfaces.
2019-10-30 22:12:42.773  INFO 2404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$67f99c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 22:12:43.463  INFO 2404 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 22:12:43.565  INFO 2404 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 22:12:43.566  INFO 2404 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 22:12:43.720  INFO 2404 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 22:12:43.721  INFO 2404 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2897 ms
2019-10-30 22:12:43.949  INFO 2404 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 22:12:44.307  INFO 2404 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 22:12:46.096  INFO 2404 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 22:12:46.253  INFO 2404 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 22:12:47.356  INFO 2404 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 22:12:47.433  INFO 2404 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 22:12:47.438  INFO 2404 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 7.578 seconds (JVM running for 9.547)
2019-10-30 22:12:53.801  INFO 2404 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 22:12:53.802  INFO 2404 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 22:12:53.827  INFO 2404 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 24 ms
2019-10-30 22:12:53.874  INFO 2404 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 22:12:54.211 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:12:54.259 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:54.290 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.297 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:12:54.298 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:54.299 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.302 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:12:54.302 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:54.304 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.306 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:12:54.306 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:54.307 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.309 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:12:54.309 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:54.311 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.313 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:12:54.314 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:12:54.315 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.316 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:12:54.316 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:54.318 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.320 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:12:54.320 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:12:54.322 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.324 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:12:54.324 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:54.326 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.329 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:12:54.329 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 22:12:54.330 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.332 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:12:54.333 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:54.334 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.336 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:12:54.337 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:12:54.338 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.341 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:12:54.341 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:54.343 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.345 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:12:54.346 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:54.347 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:54.390 DEBUG 2404 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 22:12:54.391 DEBUG 2404 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:12:54.392 DEBUG 2404 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:12:54.395 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 22:12:54.396 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:12:54.399 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 22:12:54.406 DEBUG 2404 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 22:12:54.406 DEBUG 2404 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:12:54.407 DEBUG 2404 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:12:54.408 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 22:12:54.409 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 22:12:54.410 DEBUG 2404 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 22:12:54.419 DEBUG 2404 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 22:12:54.420 DEBUG 2404 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 22:12:54.421 DEBUG 2404 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 22:12:54.422 DEBUG 2404 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 22:12:54.422 DEBUG 2404 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:12:54.424 DEBUG 2404 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 22:12:54.426  INFO 2404 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 22:12:54.426  INFO 2404 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 556
2019-10-30 22:12:58.674  INFO 2404 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/16', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[16, {}]}
2019-10-30 22:12:58.676 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:12:58.676 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 16(Integer)
2019-10-30 22:12:58.679 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:58.736 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:12:58.737 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:58.738 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:58.741 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:12:58.741 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:12:58.742 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:12:58.744 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:12:58.745 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 6(Integer)
2019-10-30 22:12:58.746 DEBUG 2404 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:12:58.746  INFO 2404 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:12:58.746  INFO 2404 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 72
2019-10-30 22:12:58.842  INFO 2404 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/a', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[a, {}]}
2019-10-30 22:12:58.849 ERROR 2404 --- [http-nio-8080-exec-8] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at com.pan.controller.IndexController.blog(IndexController.java:95)
	at com.pan.controller.IndexController$$FastClassBySpringCGLIB$$bf1dad9a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.pan.controller.IndexController$$EnhancerBySpringCGLIB$$23b7fea4.blog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 22:12:58.850  WARN 2404 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:15:04.372  INFO 3628 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 3628 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 22:15:04.376 DEBUG 3628 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 22:15:04.376  INFO 3628 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 22:15:04.527  INFO 3628 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 22:15:04.533  INFO 3628 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 22:15:05.395  INFO 3628 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 22:15:05.436  INFO 3628 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
2019-10-30 22:15:05.910  INFO 3628 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$58de11aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 22:15:06.648  INFO 3628 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 22:15:06.741  INFO 3628 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 22:15:06.742  INFO 3628 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 22:15:07.129  INFO 3628 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 22:15:07.129  INFO 3628 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2596 ms
2019-10-30 22:15:07.309  INFO 3628 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 22:15:07.695  INFO 3628 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 22:15:09.242  INFO 3628 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 22:15:09.353  INFO 3628 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 22:15:10.248  INFO 3628 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 22:15:10.328  INFO 3628 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 22:15:10.334  INFO 3628 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 7.051 seconds (JVM running for 11.328)
2019-10-30 22:15:55.273  INFO 3628 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 22:15:55.274  INFO 3628 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 22:15:55.289  INFO 3628 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2019-10-30 22:15:55.343  INFO 3628 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 22:15:55.604 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:15:55.635 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:15:55.663 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.668 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:15:55.669 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:15:55.670 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.672 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:15:55.673 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:15:55.674 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.676 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:15:55.676 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:15:55.677 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.680 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:15:55.680 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:15:55.682 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.684 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:15:55.684 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:15:55.685 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.687 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:15:55.687 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:15:55.689 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.690 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:15:55.691 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:15:55.692 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.695 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:15:55.696 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:15:55.697 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.698 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:15:55.699 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 22:15:55.704 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.706 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:15:55.707 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:15:55.708 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.711 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:15:55.711 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:15:55.712 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.714 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:15:55.715 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:15:55.717 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.719 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:15:55.719 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:15:55.720 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:15:55.758 DEBUG 3628 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 22:15:55.758 DEBUG 3628 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:15:55.759 DEBUG 3628 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:15:55.763 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 22:15:55.764 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:15:55.766 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 22:15:55.772 DEBUG 3628 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 22:15:55.772 DEBUG 3628 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:15:55.773 DEBUG 3628 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:15:55.774 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 22:15:55.774 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 22:15:55.775 DEBUG 3628 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 22:15:55.784 DEBUG 3628 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 22:15:55.784 DEBUG 3628 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 22:15:55.785 DEBUG 3628 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 22:15:55.785 DEBUG 3628 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 22:15:55.786 DEBUG 3628 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:15:55.787 DEBUG 3628 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 22:15:55.789  INFO 3628 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 22:15:55.789  INFO 3628 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 448
2019-10-30 22:16:06.262  INFO 3628 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/16', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[16, {}]}
2019-10-30 22:16:06.264 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:16:06.264 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 16(Integer)
2019-10-30 22:16:06.268 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:16:06.315 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:16:06.315 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:16:06.316 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:16:06.318 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:16:06.318 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:16:06.319 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:16:06.321 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:16:06.321 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 6(Integer)
2019-10-30 22:16:06.322 DEBUG 3628 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:16:06.322  INFO 3628 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:16:06.322  INFO 3628 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 60
2019-10-30 22:16:06.425 ERROR 3628 --- [http-nio-8080-exec-9] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:16:06.427  WARN 3628 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:22:09.464  INFO 4424 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 4424 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 22:22:09.467 DEBUG 4424 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 22:22:09.467  INFO 4424 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 22:22:09.586  INFO 4424 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 22:22:09.587  INFO 4424 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 22:22:10.622  INFO 4424 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 22:22:10.685  INFO 4424 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 48ms. Found 0 repository interfaces.
2019-10-30 22:22:11.132  INFO 4424 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8853d007] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 22:22:11.674  INFO 4424 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 22:22:11.802  INFO 4424 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 22:22:11.803  INFO 4424 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 22:22:11.956  INFO 4424 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 22:22:11.957  INFO 4424 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2370 ms
2019-10-30 22:22:12.258  INFO 4424 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 22:22:12.692  INFO 4424 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 22:22:14.321  INFO 4424 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 22:22:15.626  INFO 4424 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 22:22:15.723  INFO 4424 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 22:22:15.726  INFO 4424 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 7.081 seconds (JVM running for 8.785)
2019-10-30 22:22:19.688  INFO 4424 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 22:22:19.688  INFO 4424 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 22:22:19.704  INFO 4424 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2019-10-30 22:22:19.750  INFO 4424 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/16', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[16, {}]}
2019-10-30 22:22:19.945 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:22:19.974 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 16(Integer)
2019-10-30 22:22:20.021 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:20.071 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:22:20.071 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:20.072 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:20.076 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:22:20.077 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:20.078 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:20.083 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:22:20.083 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 6(Integer)
2019-10-30 22:22:20.084 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:22:20.085  INFO 4424 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:22:20.085  INFO 4424 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 339
2019-10-30 22:22:20.268 ERROR 4424 --- [http-nio-8080-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-1] Exception processing template "blog": Error resolving template [blog], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [blog], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 22:22:20.275 ERROR 4424 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [blog], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [blog], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 22:22:24.410  INFO 4424 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 22:22:24.509 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:22:24.510 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:24.511 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.513 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:22:24.514 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:24.515 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.517 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:22:24.517 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:24.519 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.521 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:22:24.522 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:24.524 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.526 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:22:24.526 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:24.527 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.529 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:22:24.530 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:22:24.532 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.534 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:22:24.534 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:24.535 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.537 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:22:24.537 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:22:24.538 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.540 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:22:24.541 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:24.543 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.544 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:22:24.545 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 22:22:24.545 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.547 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:22:24.547 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:24.548 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.551 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:22:24.553 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:22:24.556 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.559 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:22:24.559 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:24.561 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.563 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:22:24.563 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:22:24.564 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:22:24.632 DEBUG 4424 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 22:22:24.646 DEBUG 4424 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:22:24.648 DEBUG 4424 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:22:24.650 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 22:22:24.651 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:22:24.654 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 22:22:24.657 DEBUG 4424 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 22:22:24.657 DEBUG 4424 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:22:24.658 DEBUG 4424 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:22:24.659 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 22:22:24.659 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 22:22:24.660 DEBUG 4424 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 22:22:24.667 DEBUG 4424 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 22:22:24.667 DEBUG 4424 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 22:22:24.668 DEBUG 4424 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 22:22:24.668 DEBUG 4424 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 22:22:24.669 DEBUG 4424 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:22:24.670 DEBUG 4424 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 22:22:24.672  INFO 4424 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 22:22:24.672  INFO 4424 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 262
2019-10-30 22:22:24.674 ERROR 4424 --- [http-nio-8080-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-1] Exception processing template "index": Error resolving template [index], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [index], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 22:22:24.675 ERROR 4424 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [index], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [index], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 22:23:11.570  INFO 4424 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 22:23:11.572  INFO 4424 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 22:23:11.572  INFO 4424 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 2
2019-10-30 22:23:16.554  INFO 4424 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 22:23:16.570 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:23:16.570 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:23:16.572 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.579 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:23:16.579 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:23:16.580 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.583 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:23:16.584 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:23:16.585 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.587 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:23:16.587 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:23:16.589 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.591 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:23:16.591 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:23:16.593 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.595 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:23:16.595 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:23:16.596 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.598 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:23:16.598 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:23:16.600 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.601 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:23:16.601 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:23:16.602 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.603 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:23:16.604 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:23:16.605 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.607 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:23:16.607 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 22:23:16.608 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.610 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:23:16.610 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:23:16.611 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.619 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:23:16.619 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:23:16.620 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.622 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:23:16.623 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:23:16.624 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.626 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:23:16.626 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:23:16.627 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:23:16.628 DEBUG 4424 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 22:23:16.629 DEBUG 4424 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:23:16.631 DEBUG 4424 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:23:16.631 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 22:23:16.631 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:23:16.632 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 22:23:16.633 DEBUG 4424 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 22:23:16.634 DEBUG 4424 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:23:16.634 DEBUG 4424 --- [http-nio-8080-exec-4] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:23:16.635 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 22:23:16.635 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 22:23:16.636 DEBUG 4424 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 22:23:16.638 DEBUG 4424 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 22:23:16.638 DEBUG 4424 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 22:23:16.640 DEBUG 4424 --- [http-nio-8080-exec-4] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 22:23:16.643 DEBUG 4424 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 22:23:16.643 DEBUG 4424 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:23:16.645 DEBUG 4424 --- [http-nio-8080-exec-4] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 22:23:16.646  INFO 4424 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 22:23:16.646  INFO 4424 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 92
2019-10-30 22:23:16.647 ERROR 4424 --- [http-nio-8080-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-4] Exception processing template "index": Error resolving template [index], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [index], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 22:23:16.648 ERROR 4424 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [index], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [index], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 22:24:26.270  INFO 16376 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 16376 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 22:24:26.273 DEBUG 16376 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 22:24:26.274  INFO 16376 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 22:24:26.354  INFO 16376 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 22:24:26.354  INFO 16376 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 22:24:27.569  INFO 16376 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 22:24:27.639  INFO 16376 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 49ms. Found 0 repository interfaces.
2019-10-30 22:24:28.127  INFO 16376 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4a3887c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 22:24:28.852  INFO 16376 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 22:24:28.984  INFO 16376 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 22:24:28.985  INFO 16376 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 22:24:29.139  INFO 16376 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 22:24:29.140  INFO 16376 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2786 ms
2019-10-30 22:24:29.331  INFO 16376 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 22:24:29.654  INFO 16376 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 22:24:31.203  INFO 16376 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 22:24:31.312  INFO 16376 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 22:24:32.335  INFO 16376 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 22:24:32.404  INFO 16376 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 22:24:32.408  INFO 16376 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 7.548 seconds (JVM running for 9.012)
2019-10-30 22:24:45.688  INFO 16376 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 22:24:45.689  INFO 16376 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 22:24:45.701  INFO 16376 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2019-10-30 22:24:45.749  INFO 16376 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 22:24:45.994 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:24:46.024 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:24:46.054 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.060 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:24:46.061 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:24:46.063 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.065 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:24:46.065 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:24:46.067 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.068 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:24:46.069 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:24:46.069 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.071 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:24:46.071 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:24:46.073 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.074 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:24:46.075 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:24:46.075 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.077 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:24:46.077 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:24:46.079 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.081 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:24:46.082 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:24:46.084 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.086 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:24:46.086 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:24:46.087 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.089 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:24:46.089 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 22:24:46.090 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.091 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:24:46.091 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:24:46.093 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.095 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:24:46.096 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:24:46.097 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.099 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:24:46.100 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:24:46.101 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.103 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:24:46.104 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:24:46.104 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:24:46.143 DEBUG 16376 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 22:24:46.143 DEBUG 16376 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:24:46.144 DEBUG 16376 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:24:46.147 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 22:24:46.149 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:24:46.152 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 22:24:46.157 DEBUG 16376 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 22:24:46.158 DEBUG 16376 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:24:46.159 DEBUG 16376 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:24:46.160 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 22:24:46.161 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 22:24:46.163 DEBUG 16376 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 22:24:46.175 DEBUG 16376 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 22:24:46.176 DEBUG 16376 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 22:24:46.177 DEBUG 16376 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 22:24:46.177 DEBUG 16376 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 22:24:46.178 DEBUG 16376 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:24:46.179 DEBUG 16376 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 22:24:46.180  INFO 16376 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 22:24:46.181  INFO 16376 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 435
2019-10-30 22:25:32.029  INFO 16376 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/22', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[22, {}]}
2019-10-30 22:25:32.030 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:25:32.031 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 22(Integer)
2019-10-30 22:25:32.034 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:25:32.085 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:25:32.086 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:25:32.086 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:25:32.088 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:25:32.088 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:25:32.089 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:25:32.092 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:25:32.092 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 9(Integer)
2019-10-30 22:25:32.094 DEBUG 16376 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:25:32.096  INFO 16376 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:25:32.096  INFO 16376 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 67
2019-10-30 22:25:32.210 ERROR 16376 --- [http-nio-8080-exec-7] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:25:32.212  WARN 16376 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:25:40.190  INFO 16376 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.about', args=[]}
2019-10-30 22:25:40.191  INFO 16376 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : about
2019-10-30 22:25:40.191  INFO 16376 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 1
2019-10-30 22:27:14.525  INFO 26924 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 26924 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 22:27:14.528 DEBUG 26924 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 22:27:14.528  INFO 26924 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 22:27:14.602  INFO 26924 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 22:27:14.602  INFO 26924 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 22:27:16.180  INFO 26924 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 22:27:16.254  INFO 26924 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 59ms. Found 0 repository interfaces.
2019-10-30 22:27:17.341  INFO 26924 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dc253743] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 22:27:18.013  INFO 26924 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 22:27:18.117  INFO 26924 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 22:27:18.117  INFO 26924 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 22:27:18.243  INFO 26924 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 22:27:18.243  INFO 26924 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3640 ms
2019-10-30 22:27:18.404  INFO 26924 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 22:27:18.762  INFO 26924 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 22:27:20.171  INFO 26924 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 22:27:20.291  INFO 26924 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 22:27:21.200  INFO 26924 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 22:27:21.273  INFO 26924 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 22:27:21.276  INFO 26924 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 7.686 seconds (JVM running for 9.777)
2019-10-30 22:27:35.512  INFO 26924 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 22:27:35.512  INFO 26924 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 22:27:35.526  INFO 26924 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2019-10-30 22:27:35.554  INFO 26924 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.about', args=[]}
2019-10-30 22:27:35.557  INFO 26924 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : about
2019-10-30 22:27:35.557  INFO 26924 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 5
2019-10-30 22:27:37.546  INFO 26924 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 22:27:37.780 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:27:37.812 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:37.838 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.844 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:27:37.844 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:37.846 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.847 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:27:37.848 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:37.849 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.851 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:27:37.851 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:37.852 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.854 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:27:37.854 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:37.855 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.857 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:27:37.857 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:27:37.858 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.860 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:27:37.861 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:37.862 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.864 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:27:37.864 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:27:37.866 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.868 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:27:37.868 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:37.869 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.870 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:27:37.871 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 22:27:37.872 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.875 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:27:37.875 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:37.877 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.879 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:27:37.879 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:27:37.880 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.882 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:27:37.882 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:37.884 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.885 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:27:37.885 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:37.886 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:37.921 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 22:27:37.921 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:27:37.923 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:27:37.927 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 22:27:37.927 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:27:37.929 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 22:27:37.934 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 22:27:37.934 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:27:37.935 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:27:37.936 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 22:27:37.936 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 22:27:37.937 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 22:27:37.945 DEBUG 26924 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 22:27:37.945 DEBUG 26924 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 22:27:37.946 DEBUG 26924 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 22:27:37.947 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 22:27:37.947 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:27:37.948 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 22:27:37.950  INFO 26924 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 22:27:37.950  INFO 26924 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 404
2019-10-30 22:27:39.897  INFO 26924 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 22:27:39.899 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:27:39.900 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 22:27:39.902 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:39.944 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:27:39.945 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:39.946 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:39.947 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:27:39.948 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:27:39.948 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:27:39.950 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:27:39.950 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 22:27:39.951 DEBUG 26924 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:27:39.951  INFO 26924 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:27:39.952  INFO 26924 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 55
2019-10-30 22:27:40.025 ERROR 26924 --- [http-nio-8080-exec-4] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:27:40.026  WARN 26924 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:29:17.280  INFO 26924 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 22:29:17.296 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:29:17.296 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:29:17.298 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.308 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:29:17.308 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:29:17.309 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.311 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:29:17.311 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:29:17.312 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.314 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:29:17.314 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:29:17.316 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.317 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:29:17.318 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:29:17.319 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.321 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:29:17.321 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:29:17.322 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.324 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:29:17.324 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:29:17.325 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.327 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:29:17.327 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:29:17.328 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.330 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:29:17.330 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:29:17.338 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.339 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:29:17.340 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 22:29:17.340 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.342 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:29:17.343 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:29:17.349 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.351 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:29:17.351 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:29:17.352 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.354 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:29:17.355 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:29:17.356 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.358 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:29:17.358 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:29:17.359 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:29:17.362 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 22:29:17.362 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:29:17.363 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:29:17.364 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 22:29:17.364 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:29:17.365 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 22:29:17.365 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 22:29:17.365 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:29:17.366 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:29:17.367 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 22:29:17.367 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 22:29:17.368 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 22:29:17.369 DEBUG 26924 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 22:29:17.369 DEBUG 26924 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 22:29:17.370 DEBUG 26924 --- [http-nio-8080-exec-8] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 22:29:17.371 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 22:29:17.371 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:29:17.372 DEBUG 26924 --- [http-nio-8080-exec-8] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 22:29:17.372  INFO 26924 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 22:29:17.373  INFO 26924 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 93
2019-10-30 22:30:48.116  INFO 26924 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/21', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[21, {}]}
2019-10-30 22:30:48.124 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:30:48.124 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 21(Integer)
2019-10-30 22:30:48.133 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:30:48.138 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:30:48.138 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:30:48.139 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:30:48.141 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:30:48.141 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:30:48.144 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:30:48.146 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:30:48.146 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 9(Integer)
2019-10-30 22:30:48.147 DEBUG 26924 --- [http-nio-8080-exec-6] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:30:48.147  INFO 26924 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:30:48.147  INFO 26924 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 31
2019-10-30 22:30:48.189 ERROR 26924 --- [http-nio-8080-exec-10] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:30:48.189  WARN 26924 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:30:56.754  INFO 26924 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/21', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[21, {}]}
2019-10-30 22:30:56.755 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:30:56.756 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 21(Integer)
2019-10-30 22:30:56.757 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:30:56.761 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:30:56.762 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:30:56.764 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:30:56.780 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:30:56.781 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:30:56.782 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:30:56.783 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:30:56.783 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 9(Integer)
2019-10-30 22:30:56.784 DEBUG 26924 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:30:56.784  INFO 26924 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:30:56.784  INFO 26924 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 30
2019-10-30 22:30:56.849 ERROR 26924 --- [http-nio-8080-exec-1] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:30:56.850  WARN 26924 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:31:10.532  INFO 26924 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/21', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[21, {}]}
2019-10-30 22:31:10.533 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:31:10.534 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 21(Integer)
2019-10-30 22:31:10.535 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:31:10.539 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:31:10.539 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:31:10.540 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:31:10.541 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:31:10.541 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:31:10.542 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:31:10.543 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:31:10.544 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 9(Integer)
2019-10-30 22:31:10.544 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:31:10.545  INFO 26924 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:31:10.545  INFO 26924 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 13
2019-10-30 22:31:10.614 ERROR 26924 --- [http-nio-8080-exec-6] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:31:10.615  WARN 26924 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:31:22.843  INFO 26924 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/21', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[21, {}]}
2019-10-30 22:31:22.845 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:31:22.846 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 21(Integer)
2019-10-30 22:31:22.847 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:31:22.852 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:31:22.852 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:31:22.856 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:31:22.858 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:31:22.859 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:31:22.860 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:31:22.861 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:31:22.861 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 9(Integer)
2019-10-30 22:31:22.862 DEBUG 26924 --- [http-nio-8080-exec-4] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:31:22.863  INFO 26924 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:31:22.863  INFO 26924 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 20
2019-10-30 22:31:22.908 ERROR 26924 --- [http-nio-8080-exec-7] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:31:22.908  WARN 26924 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:35:31.309  INFO 19804 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 19804 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 22:35:31.313 DEBUG 19804 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 22:35:31.313  INFO 19804 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 22:35:31.395  INFO 19804 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 22:35:31.395  INFO 19804 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 22:35:32.065  INFO 19804 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 22:35:32.112  INFO 19804 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
2019-10-30 22:35:32.498  INFO 19804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1daceed8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 22:35:33.089  INFO 19804 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 22:35:33.168  INFO 19804 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 22:35:33.168  INFO 19804 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 22:35:33.279  INFO 19804 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 22:35:33.279  INFO 19804 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1884 ms
2019-10-30 22:35:33.435  INFO 19804 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 22:35:33.726  INFO 19804 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 22:35:35.113  INFO 19804 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 22:35:35.224  INFO 19804 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 22:35:36.036  INFO 19804 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 22:35:36.103  INFO 19804 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 22:35:36.106  INFO 19804 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.69 seconds (JVM running for 6.821)
2019-10-30 22:36:18.141  INFO 19804 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 22:36:18.143  INFO 19804 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 22:36:18.155  INFO 19804 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2019-10-30 22:36:18.191  INFO 19804 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 22:36:18.388 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:18.415 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:18.441 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.446 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:18.447 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:18.448 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.449 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:18.450 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:18.451 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.453 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:18.454 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:18.455 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.456 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:18.457 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:18.460 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.461 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:18.462 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:36:18.463 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.464 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:18.464 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:18.466 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.467 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:18.467 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:36:18.469 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.470 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:18.470 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:18.471 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.473 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:18.473 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 22:36:18.474 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.476 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:18.476 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:18.477 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.479 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:18.479 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:36:18.480 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.482 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:18.482 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:18.484 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.486 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:18.487 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:18.487 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:18.522 DEBUG 19804 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 22:36:18.522 DEBUG 19804 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:36:18.523 DEBUG 19804 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:36:18.526 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 22:36:18.527 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:36:18.529 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 22:36:18.534 DEBUG 19804 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 22:36:18.534 DEBUG 19804 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:36:18.535 DEBUG 19804 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:36:18.536 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 22:36:18.537 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 22:36:18.539 DEBUG 19804 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 22:36:18.546 DEBUG 19804 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 22:36:18.547 DEBUG 19804 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 22:36:18.548 DEBUG 19804 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 22:36:18.548 DEBUG 19804 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 22:36:18.549 DEBUG 19804 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:36:18.551 DEBUG 19804 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 22:36:18.552  INFO 19804 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 22:36:18.552  INFO 19804 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 363
2019-10-30 22:36:23.425  INFO 19804 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 22:36:23.435 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:23.435 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:23.437 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.439 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:23.439 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:23.440 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.443 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:23.444 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:23.445 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.447 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:23.447 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:23.448 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.450 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:23.450 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:23.451 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.453 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:23.453 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:36:23.455 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.458 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:23.458 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:23.460 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.462 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:23.462 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:36:23.463 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.465 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:23.465 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:23.466 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.468 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:23.468 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 22:36:23.469 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.471 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:23.471 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:23.473 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.474 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:23.475 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:36:23.476 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.478 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:23.478 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:23.479 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.481 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:23.481 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:23.482 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:23.483 DEBUG 19804 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 22:36:23.484 DEBUG 19804 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:36:23.490 DEBUG 19804 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:36:23.491 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 22:36:23.492 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:36:23.493 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 22:36:23.494 DEBUG 19804 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 22:36:23.494 DEBUG 19804 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:36:23.495 DEBUG 19804 --- [http-nio-8080-exec-5] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:36:23.496 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 22:36:23.496 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 22:36:23.497 DEBUG 19804 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 22:36:23.498 DEBUG 19804 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 22:36:23.498 DEBUG 19804 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 22:36:23.499 DEBUG 19804 --- [http-nio-8080-exec-5] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 22:36:23.499 DEBUG 19804 --- [http-nio-8080-exec-5] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 22:36:23.499 DEBUG 19804 --- [http-nio-8080-exec-5] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:36:23.500 DEBUG 19804 --- [http-nio-8080-exec-5] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 22:36:23.501  INFO 19804 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 22:36:23.501  INFO 19804 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 76
2019-10-30 22:36:25.713  INFO 19804 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 22:36:25.716 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:36:25.716 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 22:36:25.718 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:25.760 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:36:25.760 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:25.761 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:25.762 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:36:25.762 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:36:25.763 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:36:25.764 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:36:25.765 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 22:36:25.765 DEBUG 19804 --- [http-nio-8080-exec-3] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:36:25.766  INFO 19804 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:36:25.766  INFO 19804 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 53
2019-10-30 22:36:25.814  INFO 19804 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/a', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[a, {}]}
2019-10-30 22:36:25.814  INFO 19804 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:36:25.814  INFO 19804 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 0
2019-10-30 22:36:25.839 ERROR 19804 --- [http-nio-8080-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-1] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.user.avatar" (template: "blog" - line 25, col 55)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 55 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.user.avatar" (template: "blog" - line 25, col 55)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 57 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'user' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:91)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:59)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 80 common frames omitted

2019-10-30 22:36:25.846 ERROR 19804 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'user' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:91)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:59)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-10-30 22:37:37.862  INFO 27600 --- [restartedMain] com.pan.PanBlogApplication               : Starting PanBlogApplication on LAPTOP-9SU42IID with PID 27600 (E:\javaworkspace\pan-blog\target\classes started by pan tao in E:\javaworkspace\pan-blog)
2019-10-30 22:37:37.866 DEBUG 27600 --- [restartedMain] com.pan.PanBlogApplication               : Running with Spring Boot v2.1.8.RELEASE, Spring v5.1.9.RELEASE
2019-10-30 22:37:37.866  INFO 27600 --- [restartedMain] com.pan.PanBlogApplication               : The following profiles are active: dev
2019-10-30 22:37:37.924  INFO 27600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2019-10-30 22:37:37.924  INFO 27600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2019-10-30 22:37:38.666  INFO 27600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2019-10-30 22:37:38.700  INFO 27600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces.
2019-10-30 22:37:39.080  INFO 27600 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8de9debe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-30 22:37:39.587  INFO 27600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-10-30 22:37:39.682  INFO 27600 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-10-30 22:37:39.682  INFO 27600 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.24]
2019-10-30 22:37:39.791  INFO 27600 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-10-30 22:37:39.791  INFO 27600 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1867 ms
2019-10-30 22:37:39.944  INFO 27600 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2019-10-30 22:37:40.190  INFO 27600 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-10-30 22:37:41.418  INFO 27600 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-10-30 22:37:41.524  INFO 27600 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2019-10-30 22:37:42.258  INFO 27600 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-10-30 22:37:42.320  INFO 27600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-10-30 22:37:42.324  INFO 27600 --- [restartedMain] com.pan.PanBlogApplication               : Started PanBlogApplication in 5.322 seconds (JVM running for 6.407)
2019-10-30 22:37:55.183  INFO 27600 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-10-30 22:37:55.183  INFO 27600 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-10-30 22:37:55.198  INFO 27600 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2019-10-30 22:37:55.234  INFO 27600 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 22:37:55.447 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:37:55.475 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:37:55.519 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.525 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:37:55.526 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:37:55.527 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.529 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:37:55.529 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:37:55.531 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.533 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:37:55.533 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:37:55.534 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.536 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:37:55.537 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:37:55.538 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.541 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:37:55.542 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:37:55.543 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.545 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:37:55.545 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:37:55.547 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.549 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:37:55.549 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:37:55.551 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.552 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:37:55.553 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:37:55.554 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.556 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:37:55.556 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 22:37:55.557 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.564 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:37:55.564 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:37:55.566 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.567 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:37:55.568 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 22:37:55.570 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.575 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:37:55.575 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:37:55.577 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.579 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:37:55.579 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:37:55.580 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:37:55.615 DEBUG 27600 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 22:37:55.615 DEBUG 27600 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:37:55.616 DEBUG 27600 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:37:55.619 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 22:37:55.620 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:37:55.622 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 22:37:55.628 DEBUG 27600 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 22:37:55.628 DEBUG 27600 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 22:37:55.629 DEBUG 27600 --- [http-nio-8080-exec-1] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 22:37:55.630 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 22:37:55.630 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 22:37:55.631 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 22:37:55.638 DEBUG 27600 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 22:37:55.638 DEBUG 27600 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 22:37:55.639 DEBUG 27600 --- [http-nio-8080-exec-1] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 22:37:55.639 DEBUG 27600 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 22:37:55.640 DEBUG 27600 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 22:37:55.641 DEBUG 27600 --- [http-nio-8080-exec-1] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 22:37:55.643  INFO 27600 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 22:37:55.643  INFO 27600 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 410
2019-10-30 22:37:59.983  INFO 27600 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 22:37:59.985 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:37:59.985 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 22:37:59.988 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:38:00.036 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:38:00.037 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:38:00.038 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:38:00.039 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:38:00.039 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:38:00.040 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:38:00.042 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:38:00.042 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 22:38:00.043 DEBUG 27600 --- [http-nio-8080-exec-9] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:38:00.043  INFO 27600 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:38:00.043  INFO 27600 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 60
2019-10-30 22:38:00.119 ERROR 27600 --- [http-nio-8080-exec-7] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:38:00.120  WARN 27600 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:38:14.040  INFO 27600 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 22:38:14.041 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:38:14.042 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 22:38:14.043 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:38:14.048 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:38:14.049 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:38:14.050 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:38:14.057 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:38:14.057 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:38:14.059 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:38:14.061 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:38:14.061 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 22:38:14.062 DEBUG 27600 --- [http-nio-8080-exec-1] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:38:14.062  INFO 27600 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:38:14.062  INFO 27600 --- [http-nio-8080-exec-1] com.pan.aspect.LogAspect                 : Spend time: 22
2019-10-30 22:38:14.155 ERROR 27600 --- [http-nio-8080-exec-7] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:38:14.156  WARN 27600 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 22:44:01.028  INFO 27600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 22:44:01.034 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 22:44:01.035 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 22:44:01.047 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:44:01.051 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 22:44:01.051 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:44:01.053 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:44:01.054 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 22:44:01.055 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 22:44:01.056 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 22:44:01.058 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 22:44:01.058 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 22:44:01.059 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 22:44:01.059  INFO 27600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 22:44:01.059  INFO 27600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 31
2019-10-30 22:44:01.146 ERROR 27600 --- [http-nio-8080-exec-2] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/a Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "a"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 22:44:01.147  WARN 27600 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "a"]
2019-10-30 23:42:20.527  INFO 27600 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.loginPage', args=[]}
2019-10-30 23:42:20.531  INFO 27600 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Result : admin/login
2019-10-30 23:42:20.531  INFO 27600 --- [http-nio-8080-exec-7] com.pan.aspect.LogAspect                 : Spend time: 4
2019-10-30 23:42:26.060  INFO 27600 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.UserController.userLogin', args=[pan, 123456, ModelAndView [view=[null]; model=null], org.apache.catalina.session.StandardSessionFacade@3e03bf52]}
2019-10-30 23:42:26.076 DEBUG 27600 --- [http-nio-8080-exec-3] com.pan.dao.UserMapper.selectByExample   : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user WHERE ( username = ? ) 
2019-10-30 23:42:26.077 DEBUG 27600 --- [http-nio-8080-exec-3] com.pan.dao.UserMapper.selectByExample   : ==> Parameters: pan(String)
2019-10-30 23:42:26.080 DEBUG 27600 --- [http-nio-8080-exec-3] com.pan.dao.UserMapper.selectByExample   : <==      Total: 1
2019-10-30 23:42:26.083  INFO 27600 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Result : ModelAndView [view="redirect:/admin/index"; model=null]
2019-10-30 23:42:26.083  INFO 27600 --- [http-nio-8080-exec-3] com.pan.aspect.LogAspect                 : Spend time: 23
2019-10-30 23:42:26.101  INFO 27600 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/index;jsessionid=8D7CB315B160B82DED8EAD5D727B46FB', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.AdminController.indexPage', args=[]}
2019-10-30 23:42:26.102  INFO 27600 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Result : admin/index
2019-10-30 23:42:26.102  INFO 27600 --- [http-nio-8080-exec-6] com.pan.aspect.LogAspect                 : Spend time: 1
2019-10-30 23:42:27.504  INFO 27600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 23:42:27.509 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 23:42:27.509 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 23:42:27.511 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 23:42:27.513 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 23:42:27.513 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 23:42:27.518 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 23:42:27.522 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:27.522 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:27.529 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:27.532 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:27.532 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 23:42:27.533 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:27.535 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:27.535 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 23:42:27.536 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:27.538 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:27.538 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 23:42:27.539 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:27.541 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:27.541 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 23:42:27.542 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:27.544 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:27.545 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:27.546 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:27.549 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:27.549 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:27.550 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:27.552 DEBUG 27600 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 23:42:27.553 DEBUG 27600 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 23:42:27.554 DEBUG 27600 --- [http-nio-8080-exec-2] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 23:42:27.555  INFO 27600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 23:42:27.555  INFO 27600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 52
2019-10-30 23:42:30.447  INFO 27600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs/23/input', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.toModifyPage', args=[23, {}]}
2019-10-30 23:42:30.449 DEBUG 27600 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==>  Preparing: select id, name, blogs from tag 
2019-10-30 23:42:30.449 DEBUG 27600 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : ==> Parameters: 
2019-10-30 23:42:30.450 DEBUG 27600 --- [http-nio-8080-exec-5] com.pan.dao.TagMapper.selectByExample    : <==      Total: 5
2019-10-30 23:42:30.453 DEBUG 27600 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 23:42:30.453 DEBUG 27600 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 23:42:30.454 DEBUG 27600 --- [http-nio-8080-exec-5] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 23:42:30.456 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 23:42:30.456 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 23:42:30.458 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:30.460 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:30.460 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:30.461 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:30.462  INFO 27600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : admin/blogs-input
2019-10-30 23:42:30.462  INFO 27600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 15
2019-10-30 23:42:38.337  INFO 27600 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.post', args=[Blog{id=23, uid=null, typeid=null, tagids='10', title='关于shiro的session共享问题', description='shiro相关的session管理问题', firstPicture='b', views=null, appreciation=null, shareStatement=null, commentabled=null, published=1, flag='原创', recommend=1, createTime=null, updateTime=null, content='最近在复习shiro框架的时候,遇到了如果使用shiro框架时,session就会存在一些疑惑,到底servlet容器中的session与shiro里面自己的session是否相同,是否共享的....

### 首先,先看一下shiro中的Session继承关系:
[![shiro的session继承关系](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")


#### 可以看到shiro中的Session是个interface,并且存在多个实现类,我们先进入HttpServletSession中看,看到这个名称就会想起了servlet容器中也有一个HttpServletSession,然后就会联想这两个session是否存在关系,我们进入该类
```java
    /**
     * {@link Session Session} implementation that is backed entirely by a standard servlet container
     * {@link HttpSession HttpSession} instance.  It does not interact with any of Shiro's session-related components
     * {@code SessionManager}, {@code SecurityManager}, etc, and instead satisfies all method implementations by interacting
     * with a servlet container provided {@link HttpSession HttpSession} instance.
     *
     * @since 1.0
     */
    //上面文字的大概意思:说这个session其实是servlet容器的session的一个包装而已
    public class HttpServletSession implements Session {
        ....省略前面不重要的变量
        private HttpSession httpSession = null;
        //下面就是一些构造方法,get set方法
        //将该servlet容器的session通过构造方法set进去
        public HttpServletSession(HttpSession httpSession, String host) {
            if (httpSession == null) {
                String msg = "HttpSession constructor argument cannot be null.";
                throw new IllegalArgumentException(msg);
            }
            if (httpSession instanceof ShiroHttpSession) {
                String msg = "HttpSession constructor argument cannot be an instance of ShiroHttpSession.  This " +
                        "is enforced to prevent circular dependencies and infinite loops.";
                throw new IllegalArgumentException(msg);
            }
            this.httpSession = httpSession;
            if (StringUtils.hasText(host)) {
                setHost(host);
            }
        }
```

### 由此可见,shiro中的HttpSession就是servlet容器中的session的包装

接下来我们再关注一个StoppingAwareProxiedSession，为什么要说这个呢,因为在shiro中是存在一些sessionManager的,也就是session的管理者,后面就会说这个;我们上面所说的那个session是在web环境下由web容器管理的,二在shiro中也有一个subject中存放session的地方,这里的session和前面的类型都不一样都是都是实现Session接口,目的用于存放在subject中
```java
        
    //这是一个内部类,DelegatingSubject就是我们平时所使用的subject的实现类,它是身份验证和授权的主体
    public class DelegatingSubject implements Subject {
    private class StoppingAwareProxiedSession extends ProxiedSession {
    
            private final DelegatingSubject owner;
    
            //这里是对HttpSession的一个包装
            private StoppingAwareProxiedSession(Session target, DelegatingSubject owningSubject) {
                super(target);
                owner = owningSubject;
            }
    
            public void stop() throws InvalidSessionException {
                super.stop();
                owner.sessionStopped();
            }
        }
    }
```


讲完上面两个重要的Session之后,应该来介绍一下shiro中的会话管理器:



### 三个会话管理器（SessionManager）实现

### 1.1DefaultSessionManager

DefaultSessionManager：DefaultSecurityManager 使用的默认实现，用于 JavaSE 环境；

### 1.2ServletContainerSessionManager

ServletContainerSessionManager：DefaultWebSecurityManager 使用的默认实现，用于 Web 环境，其直接使用 Servlet 容器的会话；这是shiro中默认使用的SessionManager,可以从DefaultWebSecurityManager(安全管理器的默认属性中看到)
```java
        public DefaultWebSecurityManager() {
            super();
            ((DefaultSubjectDAO) this.subjectDAO).setSessionStorageEvaluator(new DefaultWebSessionStorageEvaluator());
            this.sessionMode = HTTP_SESSION_MODE;
            setSubjectFactory(new DefaultWebSubjectFactory());
            setRememberMeManager(new CookieRememberMeManager());
            //默认使用ServletContainerSessionManager这个会话管理器
            setSessionManager(new ServletContainerSessionManager());
        }
```


#### 从这个会话管理器中我们可以知道,servlet中使用的sessionId与shiro中使用的sessionId是一样的,这里为什么要强调的是sessionID呢?因为在判断用户是否登录的标准,是否在同一个session'中,是根据请求携带的参数中找到这个sessionId进行判断的,一般都会存放在cookie中.

#### 然后说回来,由于shiro的subject自带也有一个session的实现类,所以与servlet中的session类型是不一样的,所以说这里要强调的是sessionId,可以从下面的实验中得出结论:

这个用于登录的Controller:
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
                 //这里获取的是subject里面的session
    			Session session = subject.getSession(false);
    			System.out.println(session);
                 System.out.println(session.getId());
                 //这里获取的是servlet中的session
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
                 //将登录成功用户信息放入session中
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    	}
    }
```
实验结果:
```java
    /*
    *就会发现两个session的类型是不一样的,但是sessionId是一样的
    *也就是说明判断是否在同一会话中的标准是sessionId
    */
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@2d784e2
    B3D0A39ED6B48230541B49B3CF8C8EF2
    org.apache.catalina.session.StandardSessionFacade@2e4e197f
    B3D0A39ED6B48230541B49B3CF8C8EF2
```


但是在实验过程中,发现一个奇怪的现象当我在测试授权身份的时候,对应的请求方法所得到的subject和subject的session的对象时不一样的,这是为什么呢?先看实验代码和结果
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		if(StringUtils.isEmpty(subject.getSession(false).getAttribute("myuser"))) {
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
    			System.out.println(subject);
    			Session session = subject.getSession(false);
    			System.out.println(session);
    			System.out.println(session.getId());
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    		}
    		else {
    			System.out.println("已经登录过了");
    			return "redirect:user/index";
    		}
    	}
```
#### 验证用户是否有权限进入添加用户的页面跳转方法:(能进入该方法就是说已经通过了身份验证),所以在这里登陆完成之后的session中的信息已经存放在该session中,接下来的实验结果会带给你惊喜!!!!!!
```java
    	@GetMapping("add")
    	public String add(HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		System.out.println(subject);
    		System.out.println(subject.getSession(false));
    		System.out.println(request.getSession(false));
    		System.out.println(request.getSession(false).getId());
    		return "user/add";
    	}
```
结果:
```java
    ======执行完登录验证======
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@52284d11
    C79BCF8618D24CFC0E9C2AE5D413F739
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
    授权-----
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@3f933e0c
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
```
从结果可以看出来sessionId一直都是相同的,但是有没有发现subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?还有为什么session对象都不一样了,为什么sessionId还是一样,还是能够从原来放进去的session中获取到数据

### 问题一:subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?

原因:我通过看源码，发现本地的session，也就是不是web的，它不会通过cookie中的jsessionid来判断是否是登录状态，通过看源码发现，是通过将subject与当前线程绑定，来实现是否该subject已经登录，由于我们使用的是web服务器tomcat，用的是连接池，当有请求过来的时候，会有一个线程来对应响应，每次请求的对应的线程是不一样的，因为subject与线程绑定的，有的线程没有subject，所以shiro就会创建一个subject,对应地也会创建一个session,但是由于这个session是有servlet容器来管理的,所以新创建的session还是对根据客户端cookie中的JSESSIONID来找到容器中存在的session进行包装,所以才导致session对象不一致但是,sessionId还是一样

### 先看看subject.getSession()方法:
```java
        public Session getSession(boolean create) {
    		  //.省略前面不重要的代码
            	//这里先为每个session创建一个上下文
                SessionContext sessionContext = createSessionContext();
            	//这里是关键,获取session
                Session session = this.securityManager.start(sessionContext);
            	//将返回的session包装成StoppingAwareProxiedSession类型的
                this.session = decorate(session);
            }
            return this.session;
        }
```
### 进入 subject.securityManager.start(sessionContext)方法:
```java
    public Session start(SessionContext context) throws AuthorizationException {
            //调用本类的方法创建session
            return createSession(context);
        }
```


### 进入createSession(context):
```java
        protected Session createSession(SessionContext sessionContext) throws AuthorizationException {
            if (!WebUtils.isHttp(sessionContext)) {
                String msg = "SessionContext must be an HTTP compatible implementation.";
                throw new IllegalArgumentException(msg);
            }
    	   //重要代码:获取当前请求
            HttpServletRequest request = WebUtils.getHttpRequest(sessionContext);
    	   //这里的session是servlet容器中管理的session
            HttpSession httpSession = request.getSession();
    	   //重载方法,也就是对servletSession进行了包装
            return createSession(httpSession, host);
        }
    
        protected Session createSession(HttpSession httpSession, String host) {
            return new HttpServletSession(httpSession, host);
        }
```
#### 通过上述代码可知虽然session对象是不一样了,但是底层包装的session还是原来的那个servlet容器所管理的session,并且springmvc的Dispatchservlet是交给web容器管理(tomcat....)的所以它的session类型一个是org.apache.catalina.session.StandardSessionFacade,也就是web容器的对servletsession的包装类型



### 1.3DefaultWebSessionManager

DefaultWebSessionManager：用于 Web 环境的实现，可以替代 ServletContainerSessionManager，自己维护着会话，直接废弃了 Servlet 容器的会话管理。', type=Type{id=2, name='null', blogs=null}, tagIds='10'}, org.apache.catalina.session.StandardSessionFacade@3e03bf52, {}]}
2019-10-30 23:42:38.338 DEBUG 27600 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 23:42:38.339 DEBUG 27600 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 23:42:38.340 DEBUG 27600 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:38.343 DEBUG 27600 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 23:42:38.343 DEBUG 27600 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 23:42:38.344 DEBUG 27600 --- [http-nio-8080-exec-4] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:38.350 DEBUG 27600 --- [http-nio-8080-exec-4] c.p.d.B.updateByPrimaryKeySelective      : ==>  Preparing: update blog SET uid = ?, typeid = ?, tagids = ?, title = ?, description = ?, first_picture = ?, views = ?, published = ?, flag = ?, recommend = ?, create_time = ?, update_time = ?, content = ? where id = ? 
2019-10-30 23:42:38.355 DEBUG 27600 --- [http-nio-8080-exec-4] c.p.d.B.updateByPrimaryKeySelective      : ==> Parameters: 2(Integer), 2(Integer), 10(String), 关于shiro的session共享问题(String), shiro相关的session管理问题(String), b(String), 0(Integer), 1(Integer), 原创(String), 1(Integer), 2019-10-30 23:42:38.337(Timestamp), 2019-10-30 23:42:38.337(Timestamp), 最近在复习shiro框架的时候,遇到了如果使用shiro框架时,session就会存在一些疑惑,到底servlet容器中的session与shiro里面自己的session是否相同,是否共享的....

### 首先,先看一下shiro中的Session继承关系:
[![shiro的session继承关系](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")](http://106.15.204.187:8888/group1/M00/00/00/rBEKH12tIR2AdUXxAABafc639Rs838.jpg "shiro的session继承关系")


#### 可以看到shiro中的Session是个interface,并且存在多个实现类,我们先进入HttpServletSession中看,看到这个名称就会想起了servlet容器中也有一个HttpServletSession,然后就会联想这两个session是否存在关系,我们进入该类
```java
    /**
     * {@link Session Session} implementation that is backed entirely by a standard servlet container
     * {@link HttpSession HttpSession} instance.  It does not interact with any of Shiro's session-related components
     * {@code SessionManager}, {@code SecurityManager}, etc, and instead satisfies all method implementations by interacting
     * with a servlet container provided {@link HttpSession HttpSession} instance.
     *
     * @since 1.0
     */
    //上面文字的大概意思:说这个session其实是servlet容器的session的一个包装而已
    public class HttpServletSession implements Session {
        ....省略前面不重要的变量
        private HttpSession httpSession = null;
        //下面就是一些构造方法,get set方法
        //将该servlet容器的session通过构造方法set进去
        public HttpServletSession(HttpSession httpSession, String host) {
            if (httpSession == null) {
                String msg = "HttpSession constructor argument cannot be null.";
                throw new IllegalArgumentException(msg);
            }
            if (httpSession instanceof ShiroHttpSession) {
                String msg = "HttpSession constructor argument cannot be an instance of ShiroHttpSession.  This " +
                        "is enforced to prevent circular dependencies and infinite loops.";
                throw new IllegalArgumentException(msg);
            }
            this.httpSession = httpSession;
            if (StringUtils.hasText(host)) {
                setHost(host);
            }
        }
```

### 由此可见,shiro中的HttpSession就是servlet容器中的session的包装

接下来我们再关注一个StoppingAwareProxiedSession，为什么要说这个呢,因为在shiro中是存在一些sessionManager的,也就是session的管理者,后面就会说这个;我们上面所说的那个session是在web环境下由web容器管理的,二在shiro中也有一个subject中存放session的地方,这里的session和前面的类型都不一样都是都是实现Session接口,目的用于存放在subject中
```java
        
    //这是一个内部类,DelegatingSubject就是我们平时所使用的subject的实现类,它是身份验证和授权的主体
    public class DelegatingSubject implements Subject {
    private class StoppingAwareProxiedSession extends ProxiedSession {
    
            private final DelegatingSubject owner;
    
            //这里是对HttpSession的一个包装
            private StoppingAwareProxiedSession(Session target, DelegatingSubject owningSubject) {
                super(target);
                owner = owningSubject;
            }
    
            public void stop() throws InvalidSessionException {
                super.stop();
                owner.sessionStopped();
            }
        }
    }
```


讲完上面两个重要的Session之后,应该来介绍一下shiro中的会话管理器:



### 三个会话管理器（SessionManager）实现

### 1.1DefaultSessionManager

DefaultSessionManager：DefaultSecurityManager 使用的默认实现，用于 JavaSE 环境；

### 1.2ServletContainerSessionManager

ServletContainerSessionManager：DefaultWebSecurityManager 使用的默认实现，用于 Web 环境，其直接使用 Servlet 容器的会话；这是shiro中默认使用的SessionManager,可以从DefaultWebSecurityManager(安全管理器的默认属性中看到)
```java
        public DefaultWebSecurityManager() {
            super();
            ((DefaultSubjectDAO) this.subjectDAO).setSessionStorageEvaluator(new DefaultWebSessionStorageEvaluator());
            this.sessionMode = HTTP_SESSION_MODE;
            setSubjectFactory(new DefaultWebSubjectFactory());
            setRememberMeManager(new CookieRememberMeManager());
            //默认使用ServletContainerSessionManager这个会话管理器
            setSessionManager(new ServletContainerSessionManager());
        }
```


#### 从这个会话管理器中我们可以知道,servlet中使用的sessionId与shiro中使用的sessionId是一样的,这里为什么要强调的是sessionID呢?因为在判断用户是否登录的标准,是否在同一个session'中,是根据请求携带的参数中找到这个sessionId进行判断的,一般都会存放在cookie中.

#### 然后说回来,由于shiro的subject自带也有一个session的实现类,所以与servlet中的session类型是不一样的,所以说这里要强调的是sessionId,可以从下面的实验中得出结论:

这个用于登录的Controller:
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
                 //这里获取的是subject里面的session
    			Session session = subject.getSession(false);
    			System.out.println(session);
                 System.out.println(session.getId());
                 //这里获取的是servlet中的session
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
                 //将登录成功用户信息放入session中
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    	}
    }
```
实验结果:
```java
    /*
    *就会发现两个session的类型是不一样的,但是sessionId是一样的
    *也就是说明判断是否在同一会话中的标准是sessionId
    */
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@2d784e2
    B3D0A39ED6B48230541B49B3CF8C8EF2
    org.apache.catalina.session.StandardSessionFacade@2e4e197f
    B3D0A39ED6B48230541B49B3CF8C8EF2
```


但是在实验过程中,发现一个奇怪的现象当我在测试授权身份的时候,对应的请求方法所得到的subject和subject的session的对象时不一样的,这是为什么呢?先看实验代码和结果
```java
    	@PostMapping("login")
    	public String login(String username,String password,Boolean isRememberMe,Model model,RedirectAttributes attributes,HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    		if(isRememberMe != null) {
    			token.setRememberMe(isRememberMe);
    		}
    		if(StringUtils.isEmpty(subject.getSession(false).getAttribute("myuser"))) {
    		try {
    			subject.login(token);
    			System.out.println("======执行完登录验证======");
    			System.out.println(subject);
    			Session session = subject.getSession(false);
    			System.out.println(session);
    			System.out.println(session.getId());
    			System.out.println(request.getSession(false));
    			System.out.println(request.getSession(false).getId());
    			session.setAttribute("myuser", "user");
    			return "redirect:user/index";
    		} catch (UnknownAccountException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (IncorrectCredentialsException e) {
    			attributes.addAttribute("msg","用户名或密码错误");
    			return "redirect:login";
    		} catch (ExcessiveAttemptsException e) {
    			attributes.addAttribute("msg","登录失败次数过多,拒绝登录");
    			return "redirect:login";
    		} catch (AuthenticationException eExcessiveAttemptsException) {
    			attributes.addAttribute("msg","登录失败,请重试");
    			return "redirect:login";
    		}
    		}
    		else {
    			System.out.println("已经登录过了");
    			return "redirect:user/index";
    		}
    	}
```
#### 验证用户是否有权限进入添加用户的页面跳转方法:(能进入该方法就是说已经通过了身份验证),所以在这里登陆完成之后的session中的信息已经存放在该session中,接下来的实验结果会带给你惊喜!!!!!!
```java
    	@GetMapping("add")
    	public String add(HttpServletRequest request) {
    		Subject subject = SecurityUtils.getSubject();
    		System.out.println(subject);
    		System.out.println(subject.getSession(false));
    		System.out.println(request.getSession(false));
    		System.out.println(request.getSession(false).getId());
    		return "user/add";
    	}
```
结果:
```java
    ======执行完登录验证======
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@52284d11
    C79BCF8618D24CFC0E9C2AE5D413F739
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
    授权-----
    org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession@3f933e0c
    org.apache.catalina.session.StandardSessionFacade@175b94f8
    C79BCF8618D24CFC0E9C2AE5D413F739
```
从结果可以看出来sessionId一直都是相同的,但是有没有发现subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?还有为什么session对象都不一样了,为什么sessionId还是一样,还是能够从原来放进去的session中获取到数据

### 问题一:subject.getSession(false)获取到的session对象是不一样的,并且subject也是不一样的,这是为什么呢?

原因:我通过看源码，发现本地的session，也就是不是web的，它不会通过cookie中的jsessionid来判断是否是登录状态，通过看源码发现，是通过将subject与当前线程绑定，来实现是否该subject已经登录，由于我们使用的是web服务器tomcat，用的是连接池，当有请求过来的时候，会有一个线程来对应响应，每次请求的对应的线程是不一样的，因为subject与线程绑定的，有的线程没有subject，所以shiro就会创建一个subject,对应地也会创建一个session,但是由于这个session是有servlet容器来管理的,所以新创建的session还是对根据客户端cookie中的JSESSIONID来找到容器中存在的session进行包装,所以才导致session对象不一致但是,sessionId还是一样

### 先看看subject.getSession()方法:
```java
        public Session getSession(boolean create) {
    		  //.省略前面不重要的代码
            	//这里先为每个session创建一个上下文
                SessionContext sessionContext = createSessionContext();
            	//这里是关键,获取session
                Session session = this.securityManager.start(sessionContext);
            	//将返回的session包装成StoppingAwareProxiedSession类型的
                this.session = decorate(session);
            }
            return this.session;
        }
```
### 进入 subject.securityManager.start(sessionContext)方法:
```java
    public Session start(SessionContext context) throws AuthorizationException {
            //调用本类的方法创建session
            return createSession(context);
        }
```


### 进入createSession(context):
```java
        protected Session createSession(SessionContext sessionContext) throws AuthorizationException {
            if (!WebUtils.isHttp(sessionContext)) {
                String msg = "SessionContext must be an HTTP compatible implementation.";
                throw new IllegalArgumentException(msg);
            }
    	   //重要代码:获取当前请求
            HttpServletRequest request = WebUtils.getHttpRequest(sessionContext);
    	   //这里的session是servlet容器中管理的session
            HttpSession httpSession = request.getSession();
    	   //重载方法,也就是对servletSession进行了包装
            return createSession(httpSession, host);
        }
    
        protected Session createSession(HttpSession httpSession, String host) {
            return new HttpServletSession(httpSession, host);
        }
```
#### 通过上述代码可知虽然session对象是不一样了,但是底层包装的session还是原来的那个servlet容器所管理的session,并且springmvc的Dispatchservlet是交给web容器管理(tomcat....)的所以它的session类型一个是org.apache.catalina.session.StandardSessionFacade,也就是web容器的对servletsession的包装类型



### 1.3DefaultWebSessionManager

DefaultWebSessionManager：用于 Web 环境的实现，可以替代 ServletContainerSessionManager，自己维护着会话，直接废弃了 Servlet 容器的会话管理。(String), 23(Integer)
2019-10-30 23:42:38.357 DEBUG 27600 --- [http-nio-8080-exec-4] c.p.d.B.updateByPrimaryKeySelective      : <==    Updates: 1
2019-10-30 23:42:38.429  INFO 27600 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Result : redirect:/admin/blogs
2019-10-30 23:42:38.430  INFO 27600 --- [http-nio-8080-exec-4] com.pan.aspect.LogAspect                 : Spend time: 93
2019-10-30 23:42:38.436  INFO 27600 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.BlogController.blogsPage', args=[Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, null, null, {message=发布成功, blog=Blog{id=null, uid=null, typeid=null, tagids='null', title='null', description='null', firstPicture='null', views=null, appreciation=null, shareStatement=null, commentabled=null, published=null, flag='null', recommend=null, createTime=null, updateTime=null, content='null', type=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2019-10-30 23:42:38.437 DEBUG 27600 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==>  Preparing: SELECT count(0) FROM blog 
2019-10-30 23:42:38.437 DEBUG 27600 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : ==> Parameters: 
2019-10-30 23:42:38.438 DEBUG 27600 --- [http-nio-8080-exec-10] c.p.d.B.selectByTitleLike_COUNT          : <==      Total: 1
2019-10-30 23:42:38.439 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==>  Preparing: select * from blog limit ?,? 
2019-10-30 23:42:38.440 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 23:42:38.445 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.BlogMapper.selectByTitleLike   : <==      Total: 7
2019-10-30 23:42:38.446 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:38.446 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:38.447 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:38.449 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:38.449 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 23:42:38.450 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:38.451 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:38.451 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 23:42:38.452 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:38.454 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:38.454 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 23:42:38.455 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:38.457 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:38.457 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 23:42:38.458 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:38.460 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:38.460 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:38.461 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:38.462 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:38.462 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:38.463 DEBUG 27600 --- [http-nio-8080-exec-10] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:38.464 DEBUG 27600 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==>  Preparing: select id, name, blogs from type 
2019-10-30 23:42:38.464 DEBUG 27600 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : ==> Parameters: 
2019-10-30 23:42:38.465 DEBUG 27600 --- [http-nio-8080-exec-10] com.pan.dao.TypeMapper.selectByExample   : <==      Total: 6
2019-10-30 23:42:38.466  INFO 27600 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Result : admin/blogs
2019-10-30 23:42:38.466  INFO 27600 --- [http-nio-8080-exec-10] com.pan.aspect.LogAspect                 : Spend time: 30
2019-10-30 23:42:43.752  INFO 27600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.index', args=[null, {}]}
2019-10-30 23:42:43.772 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 23:42:43.772 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:43.773 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.775 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:43.775 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:43.776 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.777 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 23:42:43.777 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:43.777 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.779 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:43.780 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:43.782 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.796 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 23:42:43.797 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:43.799 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.801 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:43.801 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 23:42:43.802 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.803 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 23:42:43.803 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:43.804 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.805 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:43.806 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 23:42:43.806 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.808 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 23:42:43.808 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:43.810 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.813 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:43.814 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 15(Integer)
2019-10-30 23:42:43.815 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.817 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 23:42:43.817 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:43.818 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.820 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:43.820 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 14(Integer)
2019-10-30 23:42:43.820 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.821 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 23:42:43.822 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:43.822 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.823 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:43.824 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:43.824 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:43.825 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM type 
2019-10-30 23:42:43.825 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 23:42:43.825 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 23:42:43.826 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==>  Preparing: select * from type Order By blogs Desc limit ?,? 
2019-10-30 23:42:43.826 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 23:42:43.827 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TypeMapper.selectTagByNumDesc  : <==      Total: 6
2019-10-30 23:42:43.827 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==>  Preparing: SELECT count(0) FROM tag 
2019-10-30 23:42:43.828 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : ==> Parameters: 
2019-10-30 23:42:43.829 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.T.selectTagByNumDesc_COUNT         : <==      Total: 1
2019-10-30 23:42:43.831 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==>  Preparing: select * from tag Order By blogs Desc limit ?,? 
2019-10-30 23:42:43.831 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : ==> Parameters: 0(Integer), 10(Integer)
2019-10-30 23:42:43.833 DEBUG 27600 --- [http-nio-8080-exec-2] c.pan.dao.TagMapper.selectTagByNumDesc   : <==      Total: 5
2019-10-30 23:42:43.834 DEBUG 27600 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==>  Preparing: SELECT count(0) FROM blog WHERE recommend = 1 
2019-10-30 23:42:43.835 DEBUG 27600 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : ==> Parameters: 
2019-10-30 23:42:43.835 DEBUG 27600 --- [http-nio-8080-exec-2] B.selectRecommendBlogsOrderByViews_COUNT : <==      Total: 1
2019-10-30 23:42:43.835 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==>  Preparing: select id,title from blog WHERE recommend = 1 Order By views Desc limit ?,? 
2019-10-30 23:42:43.835 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : ==> Parameters: 0(Integer), 6(Integer)
2019-10-30 23:42:43.836 DEBUG 27600 --- [http-nio-8080-exec-2] c.p.d.B.selectRecommendBlogsOrderByViews : <==      Total: 5
2019-10-30 23:42:43.837  INFO 27600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Result : index
2019-10-30 23:42:43.837  INFO 27600 --- [http-nio-8080-exec-2] com.pan.aspect.LogAspect                 : Spend time: 85
2019-10-30 23:42:45.317  INFO 27600 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 23:42:45.319 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 23:42:45.319 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 23:42:45.320 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:45.324 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:42:45.324 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:45.325 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:45.327 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 23:42:45.327 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:42:45.327 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:42:45.330 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 23:42:45.330 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 23:42:45.331 DEBUG 27600 --- [http-nio-8080-exec-8] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 23:42:45.331  INFO 27600 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 23:42:45.331  INFO 27600 --- [http-nio-8080-exec-8] com.pan.aspect.LogAspect                 : Spend time: 14
2019-10-30 23:42:45.369 ERROR 27600 --- [http-nio-8080-exec-6] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/b Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "b"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "b"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 23:42:45.370  WARN 27600 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "b"]
2019-10-30 23:48:04.528  INFO 27600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/blog/23', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.blog', args=[23, {}]}
2019-10-30 23:48:04.533 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==>  Preparing: select id, uid, typeid, tagids, title, description, first_picture, views, appreciation, share_statement, commentabled, published, flag, recommend, create_time, update_time , content from blog where id = ? 
2019-10-30 23:48:04.533 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : ==> Parameters: 23(Integer)
2019-10-30 23:48:04.534 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.BlogMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:48:04.545 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==>  Preparing: select id, name, blogs from type where id = ? 
2019-10-30 23:48:04.545 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:48:04.546 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TypeMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:48:04.548 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==>  Preparing: select id, nickname, username, password, email, avatar, type, createTime, updateTime from user where id = ? 
2019-10-30 23:48:04.548 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : ==> Parameters: 2(Integer)
2019-10-30 23:48:04.549 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.UserMapper.selectByPrimaryKey  : <==      Total: 1
2019-10-30 23:48:04.552 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==>  Preparing: select id, name, blogs from tag where id = ? 
2019-10-30 23:48:04.552 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : ==> Parameters: 10(Integer)
2019-10-30 23:48:04.553 DEBUG 27600 --- [http-nio-8080-exec-5] c.pan.dao.TagMapper.selectByPrimaryKey   : <==      Total: 1
2019-10-30 23:48:04.553  INFO 27600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Result : blog
2019-10-30 23:48:04.553  INFO 27600 --- [http-nio-8080-exec-5] com.pan.aspect.LogAspect                 : Spend time: 25
2019-10-30 23:48:04.626 ERROR 27600 --- [http-nio-8080-exec-1] c.pan.interceptor.ExceptionInterceptor   : Request URL : http://localhost:8080/blog/b Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "b"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "b"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 54 common frames omitted

2019-10-30 23:48:04.627  WARN 27600 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "b"]
2019-10-30 23:55:45.044  INFO 27600 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.pan.controller.IndexController.searche', args=[null, 这是一个正经, {}]}
2019-10-30 23:55:45.056  INFO 27600 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Result : search
2019-10-30 23:55:45.056  INFO 27600 --- [http-nio-8080-exec-9] com.pan.aspect.LogAspect                 : Spend time: 12
